{"version":3,"file":"ondewo-t2s-client-angular.js","sources":["../../api/ondewo/t2s/text-to-speech.pb.ts","../../api/google/protobuf/empty.pb.ts","../../api/ondewo/t2s/text-to-speech.pbconf.ts","../../api/ondewo/t2s/text-to-speech.pbsc.ts","../../ondewo-t2s-client-angular.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nexport enum AudioFormat {\n  wav = 0,\n  flac = 1,\n  caf = 2,\n  mp3 = 3,\n  aac = 4,\n  ogg = 5,\n  wma = 6\n}\nexport class SynthesizeRequest implements GrpcMessage {\n  static toBinary(instance: SynthesizeRequest) {\n    const writer = new BinaryWriter();\n    SynthesizeRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new SynthesizeRequest();\n    SynthesizeRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: SynthesizeRequest) {\n    instance.t2sPipelineId = instance.t2sPipelineId || '';\n    instance.text = instance.text || '';\n    instance.lengthScale = instance.lengthScale || 0;\n    instance.noiseScale = instance.noiseScale || 0;\n    instance.sampleRate = instance.sampleRate || 0;\n    instance.pcm = instance.pcm || 0;\n    instance.audioFormat = instance.audioFormat || 0;\n  }\n\n  static fromBinaryReader(instance: SynthesizeRequest, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.t2sPipelineId = reader.readString();\n          break;\n        case 2:\n          instance.text = reader.readString();\n          break;\n        case 3:\n          instance.lengthScale = reader.readFloat();\n          break;\n        case 4:\n          instance.noiseScale = reader.readFloat();\n          break;\n        case 5:\n          instance.sampleRate = reader.readInt32();\n          break;\n        case 6:\n          instance.pcm = reader.readEnum();\n          break;\n        case 7:\n          instance.audioFormat = reader.readEnum();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    SynthesizeRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: SynthesizeRequest, writer: BinaryWriter) {\n    if (instance.t2sPipelineId) {\n      writer.writeString(1, instance.t2sPipelineId);\n    }\n    if (instance.text) {\n      writer.writeString(2, instance.text);\n    }\n    if (instance.lengthScale) {\n      writer.writeFloat(3, instance.lengthScale);\n    }\n    if (instance.noiseScale) {\n      writer.writeFloat(4, instance.noiseScale);\n    }\n    if (instance.sampleRate) {\n      writer.writeInt32(5, instance.sampleRate);\n    }\n    if (instance.pcm) {\n      writer.writeEnum(6, instance.pcm);\n    }\n    if (instance.audioFormat) {\n      writer.writeEnum(7, instance.audioFormat);\n    }\n  }\n\n  private _t2sPipelineId?: string;\n  private _text?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _sampleRate?: number;\n  private _pcm?: SynthesizeRequest.Pcm;\n  private _audioFormat?: AudioFormat;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param SynthesizeRequest value\n   */\n  constructor(value?: RecursivePartial<SynthesizeRequest>) {\n    value = value || {};\n    this.t2sPipelineId = value.t2sPipelineId;\n    this.text = value.text;\n    this.lengthScale = value.lengthScale;\n    this.noiseScale = value.noiseScale;\n    this.sampleRate = value.sampleRate;\n    this.pcm = value.pcm;\n    this.audioFormat = value.audioFormat;\n    SynthesizeRequest.refineValues(this);\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    this._sampleRate = value;\n  }\n  get pcm(): SynthesizeRequest.Pcm | undefined {\n    return this._pcm;\n  }\n  set pcm(value: SynthesizeRequest.Pcm | undefined) {\n    this._pcm = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    this._audioFormat = value;\n  }\n  toObject() {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      text: this.text,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      sampleRate: this.sampleRate,\n      pcm: this.pcm,\n      audioFormat: this.audioFormat\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module SynthesizeRequest {\n  export enum Pcm {\n    pcm16 = 0,\n    pcm24 = 1,\n    pcm32 = 2,\n    pcmS8 = 3,\n    pcmU8 = 4,\n    float = 5,\n    double = 6\n  }\n}\nexport class SynthesizeResponse implements GrpcMessage {\n  static toBinary(instance: SynthesizeResponse) {\n    const writer = new BinaryWriter();\n    SynthesizeResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new SynthesizeResponse();\n    SynthesizeResponse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: SynthesizeResponse) {\n    instance.audio = instance.audio || new Uint8Array();\n    instance.generationTime = instance.generationTime || 0;\n    instance.audioLength = instance.audioLength || 0;\n    instance.t2sPipelineId = instance.t2sPipelineId || '';\n    instance.audioFormat = instance.audioFormat || 0;\n    instance.text = instance.text || '';\n    instance.sampleRate = instance.sampleRate || 0;\n  }\n\n  static fromBinaryReader(instance: SynthesizeResponse, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.audio = reader.readBytes();\n          break;\n        case 2:\n          instance.generationTime = reader.readFloat();\n          break;\n        case 3:\n          instance.audioLength = reader.readFloat();\n          break;\n        case 4:\n          instance.t2sPipelineId = reader.readString();\n          break;\n        case 5:\n          instance.audioFormat = reader.readEnum();\n          break;\n        case 6:\n          instance.text = reader.readString();\n          break;\n        case 7:\n          instance.sampleRate = reader.readInt32();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    SynthesizeResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: SynthesizeResponse, writer: BinaryWriter) {\n    if (instance.audio && instance.audio.length) {\n      writer.writeBytes(1, instance.audio);\n    }\n    if (instance.generationTime) {\n      writer.writeFloat(2, instance.generationTime);\n    }\n    if (instance.audioLength) {\n      writer.writeFloat(3, instance.audioLength);\n    }\n    if (instance.t2sPipelineId) {\n      writer.writeString(4, instance.t2sPipelineId);\n    }\n    if (instance.audioFormat) {\n      writer.writeEnum(5, instance.audioFormat);\n    }\n    if (instance.text) {\n      writer.writeString(6, instance.text);\n    }\n    if (instance.sampleRate) {\n      writer.writeInt32(7, instance.sampleRate);\n    }\n  }\n\n  private _audio?: Uint8Array;\n  private _generationTime?: number;\n  private _audioLength?: number;\n  private _t2sPipelineId?: string;\n  private _audioFormat?: AudioFormat;\n  private _text?: string;\n  private _sampleRate?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param SynthesizeResponse value\n   */\n  constructor(value?: RecursivePartial<SynthesizeResponse>) {\n    value = value || {};\n    this.audio = value.audio;\n    this.generationTime = value.generationTime;\n    this.audioLength = value.audioLength;\n    this.t2sPipelineId = value.t2sPipelineId;\n    this.audioFormat = value.audioFormat;\n    this.text = value.text;\n    this.sampleRate = value.sampleRate;\n    SynthesizeResponse.refineValues(this);\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get generationTime(): number | undefined {\n    return this._generationTime;\n  }\n  set generationTime(value: number | undefined) {\n    this._generationTime = value;\n  }\n  get audioLength(): number | undefined {\n    return this._audioLength;\n  }\n  set audioLength(value: number | undefined) {\n    this._audioLength = value;\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    this._audioFormat = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    this._sampleRate = value;\n  }\n  toObject() {\n    return {\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      t2sPipelineId: this.t2sPipelineId,\n      audioFormat: this.audioFormat,\n      text: this.text,\n      sampleRate: this.sampleRate\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module SynthesizeResponse {}\nexport class ListT2sPipelinesRequest implements GrpcMessage {\n  static toBinary(instance: ListT2sPipelinesRequest) {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesRequest();\n    ListT2sPipelinesRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListT2sPipelinesRequest) {\n    instance.languages = instance.languages || [];\n    instance.speakerSexes = instance.speakerSexes || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n    instance.speakerNames = instance.speakerNames || [];\n    instance.domains = instance.domains || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListT2sPipelinesRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          (instance.speakerSexes = instance.speakerSexes || []).push(\n            reader.readString()\n          );\n          break;\n        case 3:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        case 4:\n          (instance.speakerNames = instance.speakerNames || []).push(\n            reader.readString()\n          );\n          break;\n        case 5:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListT2sPipelinesRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n    if (instance.speakerSexes && instance.speakerSexes.length) {\n      writer.writeRepeatedString(2, instance.speakerSexes);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(3, instance.pipelineOwners);\n    }\n    if (instance.speakerNames && instance.speakerNames.length) {\n      writer.writeRepeatedString(4, instance.speakerNames);\n    }\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(5, instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListT2sPipelinesRequest value\n   */\n  constructor(value?: RecursivePartial<ListT2sPipelinesRequest>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    this.speakerSexes = (value.speakerSexes || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    this.speakerNames = (value.speakerNames || []).slice();\n    this.domains = (value.domains || []).slice();\n    ListT2sPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListT2sPipelinesRequest {}\nexport class ListT2sPipelinesResponse implements GrpcMessage {\n  static toBinary(instance: ListT2sPipelinesResponse) {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesResponse();\n    ListT2sPipelinesResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: ListT2sPipelinesResponse) {\n    instance.pipelines = instance.pipelines || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListT2sPipelinesResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Text2SpeechConfig();\n          reader.readMessage(\n            messageInitializer1,\n            Text2SpeechConfig.fromBinaryReader\n          );\n          (instance.pipelines = instance.pipelines || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListT2sPipelinesResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.pipelines && instance.pipelines.length) {\n      writer.writeRepeatedMessage(\n        1,\n        instance.pipelines as any,\n        Text2SpeechConfig.toBinaryWriter\n      );\n    }\n  }\n\n  private _pipelines?: Text2SpeechConfig[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListT2sPipelinesResponse value\n   */\n  constructor(value?: RecursivePartial<ListT2sPipelinesResponse>) {\n    value = value || {};\n    this.pipelines = (value.pipelines || []).map(m => new Text2SpeechConfig(m));\n    ListT2sPipelinesResponse.refineValues(this);\n  }\n  get pipelines(): Text2SpeechConfig[] | undefined {\n    return this._pipelines;\n  }\n  set pipelines(value: Text2SpeechConfig[] | undefined) {\n    this._pipelines = value;\n  }\n  toObject() {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toObject())\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListT2sPipelinesResponse {}\nexport class T2sPipelineId implements GrpcMessage {\n  static toBinary(instance: T2sPipelineId) {\n    const writer = new BinaryWriter();\n    T2sPipelineId.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new T2sPipelineId();\n    T2sPipelineId.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: T2sPipelineId) {\n    instance.id = instance.id || '';\n  }\n\n  static fromBinaryReader(instance: T2sPipelineId, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    T2sPipelineId.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: T2sPipelineId, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param T2sPipelineId value\n   */\n  constructor(value?: RecursivePartial<T2sPipelineId>) {\n    value = value || {};\n    this.id = value.id;\n    T2sPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  toObject() {\n    return {\n      id: this.id\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module T2sPipelineId {}\nexport class Text2SpeechConfig implements GrpcMessage {\n  static toBinary(instance: Text2SpeechConfig) {\n    const writer = new BinaryWriter();\n    Text2SpeechConfig.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Text2SpeechConfig();\n    Text2SpeechConfig.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Text2SpeechConfig) {\n    instance.id = instance.id || '';\n    instance.description = instance.description || undefined;\n    instance.active = instance.active || false;\n    instance.inference = instance.inference || undefined;\n    instance.normalization = instance.normalization || undefined;\n    instance.postprocessing = instance.postprocessing || undefined;\n  }\n\n  static fromBinaryReader(instance: Text2SpeechConfig, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        case 2:\n          instance.description = new Description();\n          reader.readMessage(\n            instance.description,\n            Description.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.active = reader.readBool();\n          break;\n        case 4:\n          instance.inference = new Inference();\n          reader.readMessage(instance.inference, Inference.fromBinaryReader);\n          break;\n        case 5:\n          instance.normalization = new Normalization();\n          reader.readMessage(\n            instance.normalization,\n            Normalization.fromBinaryReader\n          );\n          break;\n        case 6:\n          instance.postprocessing = new Postprocessing();\n          reader.readMessage(\n            instance.postprocessing,\n            Postprocessing.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Text2SpeechConfig.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Text2SpeechConfig, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n    if (instance.description) {\n      writer.writeMessage(\n        2,\n        instance.description as any,\n        Description.toBinaryWriter\n      );\n    }\n    if (instance.active) {\n      writer.writeBool(3, instance.active);\n    }\n    if (instance.inference) {\n      writer.writeMessage(\n        4,\n        instance.inference as any,\n        Inference.toBinaryWriter\n      );\n    }\n    if (instance.normalization) {\n      writer.writeMessage(\n        5,\n        instance.normalization as any,\n        Normalization.toBinaryWriter\n      );\n    }\n    if (instance.postprocessing) {\n      writer.writeMessage(\n        6,\n        instance.postprocessing as any,\n        Postprocessing.toBinaryWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _normalization?: Normalization;\n  private _postprocessing?: Postprocessing;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Text2SpeechConfig value\n   */\n  constructor(value?: RecursivePartial<Text2SpeechConfig>) {\n    value = value || {};\n    this.id = value.id;\n    this.description = value.description\n      ? new Description(value.description)\n      : undefined;\n    this.active = value.active;\n    this.inference = value.inference\n      ? new Inference(value.inference)\n      : undefined;\n    this.normalization = value.normalization\n      ? new Normalization(value.normalization)\n      : undefined;\n    this.postprocessing = value.postprocessing\n      ? new Postprocessing(value.postprocessing)\n      : undefined;\n    Text2SpeechConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n  get postprocessing(): Postprocessing | undefined {\n    return this._postprocessing;\n  }\n  set postprocessing(value: Postprocessing | undefined) {\n    this._postprocessing = value;\n  }\n  toObject() {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Text2SpeechConfig {}\nexport class Description implements GrpcMessage {\n  static toBinary(instance: Description) {\n    const writer = new BinaryWriter();\n    Description.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Description) {\n    instance.language = instance.language || '';\n    instance.speakerSex = instance.speakerSex || '';\n    instance.pipelineOwner = instance.pipelineOwner || '';\n    instance.comments = instance.comments || '';\n    instance.speakerName = instance.speakerName || '';\n    instance.domain = instance.domain || '';\n  }\n\n  static fromBinaryReader(instance: Description, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        case 2:\n          instance.speakerSex = reader.readString();\n          break;\n        case 3:\n          instance.pipelineOwner = reader.readString();\n          break;\n        case 4:\n          instance.comments = reader.readString();\n          break;\n        case 5:\n          instance.speakerName = reader.readString();\n          break;\n        case 6:\n          instance.domain = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Description.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Description, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n    if (instance.speakerSex) {\n      writer.writeString(2, instance.speakerSex);\n    }\n    if (instance.pipelineOwner) {\n      writer.writeString(3, instance.pipelineOwner);\n    }\n    if (instance.comments) {\n      writer.writeString(4, instance.comments);\n    }\n    if (instance.speakerName) {\n      writer.writeString(5, instance.speakerName);\n    }\n    if (instance.domain) {\n      writer.writeString(6, instance.domain);\n    }\n  }\n\n  private _language?: string;\n  private _speakerSex?: string;\n  private _pipelineOwner?: string;\n  private _comments?: string;\n  private _speakerName?: string;\n  private _domain?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Description value\n   */\n  constructor(value?: RecursivePartial<Description>) {\n    value = value || {};\n    this.language = value.language;\n    this.speakerSex = value.speakerSex;\n    this.pipelineOwner = value.pipelineOwner;\n    this.comments = value.comments;\n    this.speakerName = value.speakerName;\n    this.domain = value.domain;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get speakerSex(): string | undefined {\n    return this._speakerSex;\n  }\n  set speakerSex(value: string | undefined) {\n    this._speakerSex = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n  get speakerName(): string | undefined {\n    return this._speakerName;\n  }\n  set speakerName(value: string | undefined) {\n    this._speakerName = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  toObject() {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Description {}\nexport class Inference implements GrpcMessage {\n  static toBinary(instance: Inference) {\n    const writer = new BinaryWriter();\n    Inference.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Inference) {\n    instance.type = instance.type || '';\n    instance.compositeInference = instance.compositeInference || undefined;\n    instance.caching = instance.caching || undefined;\n  }\n\n  static fromBinaryReader(instance: Inference, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.compositeInference = new CompositeInference();\n          reader.readMessage(\n            instance.compositeInference,\n            CompositeInference.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.caching = new Caching();\n          reader.readMessage(instance.caching, Caching.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Inference.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Inference, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.compositeInference) {\n      writer.writeMessage(\n        2,\n        instance.compositeInference as any,\n        CompositeInference.toBinaryWriter\n      );\n    }\n    if (instance.caching) {\n      writer.writeMessage(3, instance.caching as any, Caching.toBinaryWriter);\n    }\n  }\n\n  private _type?: string;\n  private _compositeInference?: CompositeInference;\n  private _caching?: Caching;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Inference value\n   */\n  constructor(value?: RecursivePartial<Inference>) {\n    value = value || {};\n    this.type = value.type;\n    this.compositeInference = value.compositeInference\n      ? new CompositeInference(value.compositeInference)\n      : undefined;\n    this.caching = value.caching ? new Caching(value.caching) : undefined;\n    Inference.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get compositeInference(): CompositeInference | undefined {\n    return this._compositeInference;\n  }\n  set compositeInference(value: CompositeInference | undefined) {\n    this._compositeInference = value;\n  }\n  get caching(): Caching | undefined {\n    return this._caching;\n  }\n  set caching(value: Caching | undefined) {\n    this._caching = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toObject()\n        : undefined,\n      caching: this.caching ? this.caching.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Inference {}\nexport class CompositeInference implements GrpcMessage {\n  static toBinary(instance: CompositeInference) {\n    const writer = new BinaryWriter();\n    CompositeInference.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new CompositeInference();\n    CompositeInference.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: CompositeInference) {\n    instance.text2mel = instance.text2mel || undefined;\n    instance.mel2audio = instance.mel2audio || undefined;\n  }\n\n  static fromBinaryReader(instance: CompositeInference, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.text2mel = new Text2Mel();\n          reader.readMessage(instance.text2mel, Text2Mel.fromBinaryReader);\n          break;\n        case 2:\n          instance.mel2audio = new Mel2Audio();\n          reader.readMessage(instance.mel2audio, Mel2Audio.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    CompositeInference.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: CompositeInference, writer: BinaryWriter) {\n    if (instance.text2mel) {\n      writer.writeMessage(1, instance.text2mel as any, Text2Mel.toBinaryWriter);\n    }\n    if (instance.mel2audio) {\n      writer.writeMessage(\n        2,\n        instance.mel2audio as any,\n        Mel2Audio.toBinaryWriter\n      );\n    }\n  }\n\n  private _text2mel?: Text2Mel;\n  private _mel2audio?: Mel2Audio;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param CompositeInference value\n   */\n  constructor(value?: RecursivePartial<CompositeInference>) {\n    value = value || {};\n    this.text2mel = value.text2mel ? new Text2Mel(value.text2mel) : undefined;\n    this.mel2audio = value.mel2audio\n      ? new Mel2Audio(value.mel2audio)\n      : undefined;\n    CompositeInference.refineValues(this);\n  }\n  get text2mel(): Text2Mel | undefined {\n    return this._text2mel;\n  }\n  set text2mel(value: Text2Mel | undefined) {\n    this._text2mel = value;\n  }\n  get mel2audio(): Mel2Audio | undefined {\n    return this._mel2audio;\n  }\n  set mel2audio(value: Mel2Audio | undefined) {\n    this._mel2audio = value;\n  }\n  toObject() {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toObject() : undefined,\n      mel2audio: this.mel2audio ? this.mel2audio.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module CompositeInference {}\nexport class Text2Mel implements GrpcMessage {\n  static toBinary(instance: Text2Mel) {\n    const writer = new BinaryWriter();\n    Text2Mel.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Text2Mel();\n    Text2Mel.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Text2Mel) {\n    instance.type = instance.type || '';\n    instance.glowTts = instance.glowTts || undefined;\n    instance.glowTtsTriton = instance.glowTtsTriton || undefined;\n  }\n\n  static fromBinaryReader(instance: Text2Mel, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 3:\n          instance.glowTts = new GlowTTS();\n          reader.readMessage(instance.glowTts, GlowTTS.fromBinaryReader);\n          break;\n        case 4:\n          instance.glowTtsTriton = new GlowTTSTriton();\n          reader.readMessage(\n            instance.glowTtsTriton,\n            GlowTTSTriton.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Text2Mel.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Text2Mel, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.glowTts) {\n      writer.writeMessage(3, instance.glowTts as any, GlowTTS.toBinaryWriter);\n    }\n    if (instance.glowTtsTriton) {\n      writer.writeMessage(\n        4,\n        instance.glowTtsTriton as any,\n        GlowTTSTriton.toBinaryWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _glowTts?: GlowTTS;\n  private _glowTtsTriton?: GlowTTSTriton;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Text2Mel value\n   */\n  constructor(value?: RecursivePartial<Text2Mel>) {\n    value = value || {};\n    this.type = value.type;\n    this.glowTts = value.glowTts ? new GlowTTS(value.glowTts) : undefined;\n    this.glowTtsTriton = value.glowTtsTriton\n      ? new GlowTTSTriton(value.glowTtsTriton)\n      : undefined;\n    Text2Mel.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get glowTts(): GlowTTS | undefined {\n    return this._glowTts;\n  }\n  set glowTts(value: GlowTTS | undefined) {\n    this._glowTts = value;\n  }\n  get glowTtsTriton(): GlowTTSTriton | undefined {\n    return this._glowTtsTriton;\n  }\n  set glowTtsTriton(value: GlowTTSTriton | undefined) {\n    this._glowTtsTriton = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toObject() : undefined,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Text2Mel {}\nexport class GlowTTS implements GrpcMessage {\n  static toBinary(instance: GlowTTS) {\n    const writer = new BinaryWriter();\n    GlowTTS.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new GlowTTS();\n    GlowTTS.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: GlowTTS) {\n    instance.batchSize = instance.batchSize || '0';\n    instance.useGpu = instance.useGpu || false;\n    instance.lengthScale = instance.lengthScale || 0;\n    instance.noiseScale = instance.noiseScale || 0;\n    instance.path = instance.path || '';\n    instance.cleaners = instance.cleaners || [];\n    instance.paramConfigPath = instance.paramConfigPath || '';\n  }\n\n  static fromBinaryReader(instance: GlowTTS, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.batchSize = reader.readInt64String();\n          break;\n        case 2:\n          instance.useGpu = reader.readBool();\n          break;\n        case 3:\n          instance.lengthScale = reader.readFloat();\n          break;\n        case 4:\n          instance.noiseScale = reader.readFloat();\n          break;\n        case 5:\n          instance.path = reader.readString();\n          break;\n        case 6:\n          (instance.cleaners = instance.cleaners || []).push(\n            reader.readString()\n          );\n          break;\n        case 7:\n          instance.paramConfigPath = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    GlowTTS.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: GlowTTS, writer: BinaryWriter) {\n    if (instance.batchSize) {\n      writer.writeInt64String(1, instance.batchSize);\n    }\n    if (instance.useGpu) {\n      writer.writeBool(2, instance.useGpu);\n    }\n    if (instance.lengthScale) {\n      writer.writeFloat(3, instance.lengthScale);\n    }\n    if (instance.noiseScale) {\n      writer.writeFloat(4, instance.noiseScale);\n    }\n    if (instance.path) {\n      writer.writeString(5, instance.path);\n    }\n    if (instance.cleaners && instance.cleaners.length) {\n      writer.writeRepeatedString(6, instance.cleaners);\n    }\n    if (instance.paramConfigPath) {\n      writer.writeString(7, instance.paramConfigPath);\n    }\n  }\n\n  private _batchSize?: string;\n  private _useGpu?: boolean;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _path?: string;\n  private _cleaners?: string[];\n  private _paramConfigPath?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param GlowTTS value\n   */\n  constructor(value?: RecursivePartial<GlowTTS>) {\n    value = value || {};\n    this.batchSize = value.batchSize;\n    this.useGpu = value.useGpu;\n    this.lengthScale = value.lengthScale;\n    this.noiseScale = value.noiseScale;\n    this.path = value.path;\n    this.cleaners = (value.cleaners || []).slice();\n    this.paramConfigPath = value.paramConfigPath;\n    GlowTTS.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n  toObject() {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module GlowTTS {}\nexport class GlowTTSTriton implements GrpcMessage {\n  static toBinary(instance: GlowTTSTriton) {\n    const writer = new BinaryWriter();\n    GlowTTSTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new GlowTTSTriton();\n    GlowTTSTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: GlowTTSTriton) {\n    instance.batchSize = instance.batchSize || '0';\n    instance.lengthScale = instance.lengthScale || 0;\n    instance.noiseScale = instance.noiseScale || 0;\n    instance.cleaners = instance.cleaners || [];\n    instance.maxTextLength = instance.maxTextLength || '0';\n    instance.paramConfigPath = instance.paramConfigPath || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n    instance.tritonModelName = instance.tritonModelName || '';\n  }\n\n  static fromBinaryReader(instance: GlowTTSTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.batchSize = reader.readInt64String();\n          break;\n        case 2:\n          instance.lengthScale = reader.readFloat();\n          break;\n        case 3:\n          instance.noiseScale = reader.readFloat();\n          break;\n        case 4:\n          (instance.cleaners = instance.cleaners || []).push(\n            reader.readString()\n          );\n          break;\n        case 5:\n          instance.maxTextLength = reader.readInt64String();\n          break;\n        case 6:\n          instance.paramConfigPath = reader.readString();\n          break;\n        case 7:\n          instance.tritonUrl = reader.readString();\n          break;\n        case 8:\n          instance.tritonModelName = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    GlowTTSTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: GlowTTSTriton, writer: BinaryWriter) {\n    if (instance.batchSize) {\n      writer.writeInt64String(1, instance.batchSize);\n    }\n    if (instance.lengthScale) {\n      writer.writeFloat(2, instance.lengthScale);\n    }\n    if (instance.noiseScale) {\n      writer.writeFloat(3, instance.noiseScale);\n    }\n    if (instance.cleaners && instance.cleaners.length) {\n      writer.writeRepeatedString(4, instance.cleaners);\n    }\n    if (instance.maxTextLength) {\n      writer.writeInt64String(5, instance.maxTextLength);\n    }\n    if (instance.paramConfigPath) {\n      writer.writeString(6, instance.paramConfigPath);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(7, instance.tritonUrl);\n    }\n    if (instance.tritonModelName) {\n      writer.writeString(8, instance.tritonModelName);\n    }\n  }\n\n  private _batchSize?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _cleaners?: string[];\n  private _maxTextLength?: string;\n  private _paramConfigPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModelName?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param GlowTTSTriton value\n   */\n  constructor(value?: RecursivePartial<GlowTTSTriton>) {\n    value = value || {};\n    this.batchSize = value.batchSize;\n    this.lengthScale = value.lengthScale;\n    this.noiseScale = value.noiseScale;\n    this.cleaners = (value.cleaners || []).slice();\n    this.maxTextLength = value.maxTextLength;\n    this.paramConfigPath = value.paramConfigPath;\n    this.tritonUrl = value.tritonUrl;\n    this.tritonModelName = value.tritonModelName;\n    GlowTTSTriton.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get maxTextLength(): string | undefined {\n    return this._maxTextLength;\n  }\n  set maxTextLength(value: string | undefined) {\n    this._maxTextLength = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  toObject() {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonUrl: this.tritonUrl,\n      tritonModelName: this.tritonModelName\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module GlowTTSTriton {}\nexport class Mel2Audio implements GrpcMessage {\n  static toBinary(instance: Mel2Audio) {\n    const writer = new BinaryWriter();\n    Mel2Audio.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Mel2Audio();\n    Mel2Audio.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Mel2Audio) {\n    instance.type = instance.type || '';\n    instance.mbMelganTriton = instance.mbMelganTriton || undefined;\n    instance.hifiGan = instance.hifiGan || undefined;\n    instance.hifiGanTriton = instance.hifiGanTriton || undefined;\n  }\n\n  static fromBinaryReader(instance: Mel2Audio, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.mbMelganTriton = new MbMelganTriton();\n          reader.readMessage(\n            instance.mbMelganTriton,\n            MbMelganTriton.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.hifiGan = new HiFiGan();\n          reader.readMessage(instance.hifiGan, HiFiGan.fromBinaryReader);\n          break;\n        case 4:\n          instance.hifiGanTriton = new HiFiGanTriton();\n          reader.readMessage(\n            instance.hifiGanTriton,\n            HiFiGanTriton.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Mel2Audio.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Mel2Audio, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.mbMelganTriton) {\n      writer.writeMessage(\n        2,\n        instance.mbMelganTriton as any,\n        MbMelganTriton.toBinaryWriter\n      );\n    }\n    if (instance.hifiGan) {\n      writer.writeMessage(3, instance.hifiGan as any, HiFiGan.toBinaryWriter);\n    }\n    if (instance.hifiGanTriton) {\n      writer.writeMessage(\n        4,\n        instance.hifiGanTriton as any,\n        HiFiGanTriton.toBinaryWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _mbMelganTriton?: MbMelganTriton;\n  private _hifiGan?: HiFiGan;\n  private _hifiGanTriton?: HiFiGanTriton;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Mel2Audio value\n   */\n  constructor(value?: RecursivePartial<Mel2Audio>) {\n    value = value || {};\n    this.type = value.type;\n    this.mbMelganTriton = value.mbMelganTriton\n      ? new MbMelganTriton(value.mbMelganTriton)\n      : undefined;\n    this.hifiGan = value.hifiGan ? new HiFiGan(value.hifiGan) : undefined;\n    this.hifiGanTriton = value.hifiGanTriton\n      ? new HiFiGanTriton(value.hifiGanTriton)\n      : undefined;\n    Mel2Audio.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get mbMelganTriton(): MbMelganTriton | undefined {\n    return this._mbMelganTriton;\n  }\n  set mbMelganTriton(value: MbMelganTriton | undefined) {\n    this._mbMelganTriton = value;\n  }\n  get hifiGan(): HiFiGan | undefined {\n    return this._hifiGan;\n  }\n  set hifiGan(value: HiFiGan | undefined) {\n    this._hifiGan = value;\n  }\n  get hifiGanTriton(): HiFiGanTriton | undefined {\n    return this._hifiGanTriton;\n  }\n  set hifiGanTriton(value: HiFiGanTriton | undefined) {\n    this._hifiGanTriton = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toObject()\n        : undefined,\n      hifiGan: this.hifiGan ? this.hifiGan.toObject() : undefined,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Mel2Audio {}\nexport class HiFiGan implements GrpcMessage {\n  static toBinary(instance: HiFiGan) {\n    const writer = new BinaryWriter();\n    HiFiGan.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new HiFiGan();\n    HiFiGan.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: HiFiGan) {\n    instance.useGpu = instance.useGpu || false;\n    instance.batchSize = instance.batchSize || '0';\n    instance.configPath = instance.configPath || '';\n    instance.modelPath = instance.modelPath || '';\n  }\n\n  static fromBinaryReader(instance: HiFiGan, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.useGpu = reader.readBool();\n          break;\n        case 2:\n          instance.batchSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.configPath = reader.readString();\n          break;\n        case 4:\n          instance.modelPath = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    HiFiGan.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: HiFiGan, writer: BinaryWriter) {\n    if (instance.useGpu) {\n      writer.writeBool(1, instance.useGpu);\n    }\n    if (instance.batchSize) {\n      writer.writeInt64String(2, instance.batchSize);\n    }\n    if (instance.configPath) {\n      writer.writeString(3, instance.configPath);\n    }\n    if (instance.modelPath) {\n      writer.writeString(4, instance.modelPath);\n    }\n  }\n\n  private _useGpu?: boolean;\n  private _batchSize?: string;\n  private _configPath?: string;\n  private _modelPath?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param HiFiGan value\n   */\n  constructor(value?: RecursivePartial<HiFiGan>) {\n    value = value || {};\n    this.useGpu = value.useGpu;\n    this.batchSize = value.batchSize;\n    this.configPath = value.configPath;\n    this.modelPath = value.modelPath;\n    HiFiGan.refineValues(this);\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  toObject() {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module HiFiGan {}\nexport class HiFiGanTriton implements GrpcMessage {\n  static toBinary(instance: HiFiGanTriton) {\n    const writer = new BinaryWriter();\n    HiFiGanTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new HiFiGanTriton();\n    HiFiGanTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: HiFiGanTriton) {\n    instance.configPath = instance.configPath || '';\n    instance.tritonModelName = instance.tritonModelName || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n  }\n\n  static fromBinaryReader(instance: HiFiGanTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.tritonModelName = reader.readString();\n          break;\n        case 3:\n          instance.tritonUrl = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    HiFiGanTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: HiFiGanTriton, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.tritonModelName) {\n      writer.writeString(2, instance.tritonModelName);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(3, instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param HiFiGanTriton value\n   */\n  constructor(value?: RecursivePartial<HiFiGanTriton>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.tritonModelName = value.tritonModelName;\n    this.tritonUrl = value.tritonUrl;\n    HiFiGanTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module HiFiGanTriton {}\nexport class MbMelganTriton implements GrpcMessage {\n  static toBinary(instance: MbMelganTriton) {\n    const writer = new BinaryWriter();\n    MbMelganTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new MbMelganTriton();\n    MbMelganTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: MbMelganTriton) {\n    instance.configPath = instance.configPath || '';\n    instance.statsPath = instance.statsPath || '';\n    instance.tritonModelName = instance.tritonModelName || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n  }\n\n  static fromBinaryReader(instance: MbMelganTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.statsPath = reader.readString();\n          break;\n        case 3:\n          instance.tritonModelName = reader.readString();\n          break;\n        case 4:\n          instance.tritonUrl = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    MbMelganTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: MbMelganTriton, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.statsPath) {\n      writer.writeString(2, instance.statsPath);\n    }\n    if (instance.tritonModelName) {\n      writer.writeString(3, instance.tritonModelName);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(4, instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _statsPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param MbMelganTriton value\n   */\n  constructor(value?: RecursivePartial<MbMelganTriton>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.statsPath = value.statsPath;\n    this.tritonModelName = value.tritonModelName;\n    this.tritonUrl = value.tritonUrl;\n    MbMelganTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get statsPath(): string | undefined {\n    return this._statsPath;\n  }\n  set statsPath(value: string | undefined) {\n    this._statsPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module MbMelganTriton {}\nexport class Caching implements GrpcMessage {\n  static toBinary(instance: Caching) {\n    const writer = new BinaryWriter();\n    Caching.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Caching();\n    Caching.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Caching) {\n    instance.active = instance.active || false;\n    instance.memoryCacheMaxSize = instance.memoryCacheMaxSize || '0';\n    instance.samplingRate = instance.samplingRate || '0';\n    instance.loadCache = instance.loadCache || false;\n    instance.saveCache = instance.saveCache || false;\n    instance.cacheSaveDir = instance.cacheSaveDir || '';\n  }\n\n  static fromBinaryReader(instance: Caching, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.active = reader.readBool();\n          break;\n        case 2:\n          instance.memoryCacheMaxSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.samplingRate = reader.readInt64String();\n          break;\n        case 4:\n          instance.loadCache = reader.readBool();\n          break;\n        case 5:\n          instance.saveCache = reader.readBool();\n          break;\n        case 6:\n          instance.cacheSaveDir = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Caching.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Caching, writer: BinaryWriter) {\n    if (instance.active) {\n      writer.writeBool(1, instance.active);\n    }\n    if (instance.memoryCacheMaxSize) {\n      writer.writeInt64String(2, instance.memoryCacheMaxSize);\n    }\n    if (instance.samplingRate) {\n      writer.writeInt64String(3, instance.samplingRate);\n    }\n    if (instance.loadCache) {\n      writer.writeBool(4, instance.loadCache);\n    }\n    if (instance.saveCache) {\n      writer.writeBool(5, instance.saveCache);\n    }\n    if (instance.cacheSaveDir) {\n      writer.writeString(6, instance.cacheSaveDir);\n    }\n  }\n\n  private _active?: boolean;\n  private _memoryCacheMaxSize?: string;\n  private _samplingRate?: string;\n  private _loadCache?: boolean;\n  private _saveCache?: boolean;\n  private _cacheSaveDir?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Caching value\n   */\n  constructor(value?: RecursivePartial<Caching>) {\n    value = value || {};\n    this.active = value.active;\n    this.memoryCacheMaxSize = value.memoryCacheMaxSize;\n    this.samplingRate = value.samplingRate;\n    this.loadCache = value.loadCache;\n    this.saveCache = value.saveCache;\n    this.cacheSaveDir = value.cacheSaveDir;\n    Caching.refineValues(this);\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get memoryCacheMaxSize(): string | undefined {\n    return this._memoryCacheMaxSize;\n  }\n  set memoryCacheMaxSize(value: string | undefined) {\n    this._memoryCacheMaxSize = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get loadCache(): boolean | undefined {\n    return this._loadCache;\n  }\n  set loadCache(value: boolean | undefined) {\n    this._loadCache = value;\n  }\n  get saveCache(): boolean | undefined {\n    return this._saveCache;\n  }\n  set saveCache(value: boolean | undefined) {\n    this._saveCache = value;\n  }\n  get cacheSaveDir(): string | undefined {\n    return this._cacheSaveDir;\n  }\n  set cacheSaveDir(value: string | undefined) {\n    this._cacheSaveDir = value;\n  }\n  toObject() {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Caching {}\nexport class Normalization implements GrpcMessage {\n  static toBinary(instance: Normalization) {\n    const writer = new BinaryWriter();\n    Normalization.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Normalization) {\n    instance.language = instance.language || '';\n    instance.pipeline = instance.pipeline || [];\n  }\n\n  static fromBinaryReader(instance: Normalization, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        case 2:\n          (instance.pipeline = instance.pipeline || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Normalization, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n    if (instance.pipeline && instance.pipeline.length) {\n      writer.writeRepeatedString(2, instance.pipeline);\n    }\n  }\n\n  private _language?: string;\n  private _pipeline?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Normalization value\n   */\n  constructor(value?: RecursivePartial<Normalization>) {\n    value = value || {};\n    this.language = value.language;\n    this.pipeline = (value.pipeline || []).slice();\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  toObject() {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Normalization {}\nexport class Postprocessing implements GrpcMessage {\n  static toBinary(instance: Postprocessing) {\n    const writer = new BinaryWriter();\n    Postprocessing.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Postprocessing();\n    Postprocessing.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Postprocessing) {\n    instance.silenceSecs = instance.silenceSecs || 0;\n    instance.pipeline = instance.pipeline || [];\n    instance.logmmse = instance.logmmse || undefined;\n    instance.wiener = instance.wiener || undefined;\n    instance.apodization = instance.apodization || undefined;\n  }\n\n  static fromBinaryReader(instance: Postprocessing, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.silenceSecs = reader.readFloat();\n          break;\n        case 2:\n          (instance.pipeline = instance.pipeline || []).push(\n            reader.readString()\n          );\n          break;\n        case 3:\n          instance.logmmse = new Logmnse();\n          reader.readMessage(instance.logmmse, Logmnse.fromBinaryReader);\n          break;\n        case 4:\n          instance.wiener = new Wiener();\n          reader.readMessage(instance.wiener, Wiener.fromBinaryReader);\n          break;\n        case 5:\n          instance.apodization = new Apodization();\n          reader.readMessage(\n            instance.apodization,\n            Apodization.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Postprocessing.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Postprocessing, writer: BinaryWriter) {\n    if (instance.silenceSecs) {\n      writer.writeFloat(1, instance.silenceSecs);\n    }\n    if (instance.pipeline && instance.pipeline.length) {\n      writer.writeRepeatedString(2, instance.pipeline);\n    }\n    if (instance.logmmse) {\n      writer.writeMessage(3, instance.logmmse as any, Logmnse.toBinaryWriter);\n    }\n    if (instance.wiener) {\n      writer.writeMessage(4, instance.wiener as any, Wiener.toBinaryWriter);\n    }\n    if (instance.apodization) {\n      writer.writeMessage(\n        5,\n        instance.apodization as any,\n        Apodization.toBinaryWriter\n      );\n    }\n  }\n\n  private _silenceSecs?: number;\n  private _pipeline?: string[];\n  private _logmmse?: Logmnse;\n  private _wiener?: Wiener;\n  private _apodization?: Apodization;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Postprocessing value\n   */\n  constructor(value?: RecursivePartial<Postprocessing>) {\n    value = value || {};\n    this.silenceSecs = value.silenceSecs;\n    this.pipeline = (value.pipeline || []).slice();\n    this.logmmse = value.logmmse ? new Logmnse(value.logmmse) : undefined;\n    this.wiener = value.wiener ? new Wiener(value.wiener) : undefined;\n    this.apodization = value.apodization\n      ? new Apodization(value.apodization)\n      : undefined;\n    Postprocessing.refineValues(this);\n  }\n  get silenceSecs(): number | undefined {\n    return this._silenceSecs;\n  }\n  set silenceSecs(value: number | undefined) {\n    this._silenceSecs = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get logmmse(): Logmnse | undefined {\n    return this._logmmse;\n  }\n  set logmmse(value: Logmnse | undefined) {\n    this._logmmse = value;\n  }\n  get wiener(): Wiener | undefined {\n    return this._wiener;\n  }\n  set wiener(value: Wiener | undefined) {\n    this._wiener = value;\n  }\n  get apodization(): Apodization | undefined {\n    return this._apodization;\n  }\n  set apodization(value: Apodization | undefined) {\n    this._apodization = value;\n  }\n  toObject() {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toObject() : undefined,\n      wiener: this.wiener ? this.wiener.toObject() : undefined,\n      apodization: this.apodization ? this.apodization.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Postprocessing {}\nexport class Logmnse implements GrpcMessage {\n  static toBinary(instance: Logmnse) {\n    const writer = new BinaryWriter();\n    Logmnse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Logmnse();\n    Logmnse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Logmnse) {\n    instance.initialNoise = instance.initialNoise || '0';\n    instance.windowSize = instance.windowSize || '0';\n    instance.noiseThreshold = instance.noiseThreshold || 0;\n  }\n\n  static fromBinaryReader(instance: Logmnse, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.initialNoise = reader.readInt64String();\n          break;\n        case 2:\n          instance.windowSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.noiseThreshold = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Logmnse.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Logmnse, writer: BinaryWriter) {\n    if (instance.initialNoise) {\n      writer.writeInt64String(1, instance.initialNoise);\n    }\n    if (instance.windowSize) {\n      writer.writeInt64String(2, instance.windowSize);\n    }\n    if (instance.noiseThreshold) {\n      writer.writeFloat(3, instance.noiseThreshold);\n    }\n  }\n\n  private _initialNoise?: string;\n  private _windowSize?: string;\n  private _noiseThreshold?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Logmnse value\n   */\n  constructor(value?: RecursivePartial<Logmnse>) {\n    value = value || {};\n    this.initialNoise = value.initialNoise;\n    this.windowSize = value.windowSize;\n    this.noiseThreshold = value.noiseThreshold;\n    Logmnse.refineValues(this);\n  }\n  get initialNoise(): string | undefined {\n    return this._initialNoise;\n  }\n  set initialNoise(value: string | undefined) {\n    this._initialNoise = value;\n  }\n  get windowSize(): string | undefined {\n    return this._windowSize;\n  }\n  set windowSize(value: string | undefined) {\n    this._windowSize = value;\n  }\n  get noiseThreshold(): number | undefined {\n    return this._noiseThreshold;\n  }\n  set noiseThreshold(value: number | undefined) {\n    this._noiseThreshold = value;\n  }\n  toObject() {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Logmnse {}\nexport class Wiener implements GrpcMessage {\n  static toBinary(instance: Wiener) {\n    const writer = new BinaryWriter();\n    Wiener.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Wiener();\n    Wiener.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Wiener) {\n    instance.frameLen = instance.frameLen || '0';\n    instance.lpcOrder = instance.lpcOrder || '0';\n    instance.iterations = instance.iterations || '0';\n    instance.alpha = instance.alpha || 0;\n    instance.thresh = instance.thresh || 0;\n  }\n\n  static fromBinaryReader(instance: Wiener, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.frameLen = reader.readInt64String();\n          break;\n        case 2:\n          instance.lpcOrder = reader.readInt64String();\n          break;\n        case 3:\n          instance.iterations = reader.readInt64String();\n          break;\n        case 4:\n          instance.alpha = reader.readFloat();\n          break;\n        case 5:\n          instance.thresh = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Wiener.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Wiener, writer: BinaryWriter) {\n    if (instance.frameLen) {\n      writer.writeInt64String(1, instance.frameLen);\n    }\n    if (instance.lpcOrder) {\n      writer.writeInt64String(2, instance.lpcOrder);\n    }\n    if (instance.iterations) {\n      writer.writeInt64String(3, instance.iterations);\n    }\n    if (instance.alpha) {\n      writer.writeFloat(4, instance.alpha);\n    }\n    if (instance.thresh) {\n      writer.writeFloat(5, instance.thresh);\n    }\n  }\n\n  private _frameLen?: string;\n  private _lpcOrder?: string;\n  private _iterations?: string;\n  private _alpha?: number;\n  private _thresh?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Wiener value\n   */\n  constructor(value?: RecursivePartial<Wiener>) {\n    value = value || {};\n    this.frameLen = value.frameLen;\n    this.lpcOrder = value.lpcOrder;\n    this.iterations = value.iterations;\n    this.alpha = value.alpha;\n    this.thresh = value.thresh;\n    Wiener.refineValues(this);\n  }\n  get frameLen(): string | undefined {\n    return this._frameLen;\n  }\n  set frameLen(value: string | undefined) {\n    this._frameLen = value;\n  }\n  get lpcOrder(): string | undefined {\n    return this._lpcOrder;\n  }\n  set lpcOrder(value: string | undefined) {\n    this._lpcOrder = value;\n  }\n  get iterations(): string | undefined {\n    return this._iterations;\n  }\n  set iterations(value: string | undefined) {\n    this._iterations = value;\n  }\n  get alpha(): number | undefined {\n    return this._alpha;\n  }\n  set alpha(value: number | undefined) {\n    this._alpha = value;\n  }\n  get thresh(): number | undefined {\n    return this._thresh;\n  }\n  set thresh(value: number | undefined) {\n    this._thresh = value;\n  }\n  toObject() {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Wiener {}\nexport class Apodization implements GrpcMessage {\n  static toBinary(instance: Apodization) {\n    const writer = new BinaryWriter();\n    Apodization.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Apodization();\n    Apodization.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Apodization) {\n    instance.apodizationSecs = instance.apodizationSecs || 0;\n  }\n\n  static fromBinaryReader(instance: Apodization, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.apodizationSecs = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Apodization.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Apodization, writer: BinaryWriter) {\n    if (instance.apodizationSecs) {\n      writer.writeFloat(1, instance.apodizationSecs);\n    }\n  }\n\n  private _apodizationSecs?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Apodization value\n   */\n  constructor(value?: RecursivePartial<Apodization>) {\n    value = value || {};\n    this.apodizationSecs = value.apodizationSecs;\n    Apodization.refineValues(this);\n  }\n  get apodizationSecs(): number | undefined {\n    return this._apodizationSecs;\n  }\n  set apodizationSecs(value: number | undefined) {\n    this._apodizationSecs = value;\n  }\n  toObject() {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Apodization {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nexport class Empty implements GrpcMessage {\n  static toBinary(instance: Empty) {\n    const writer = new BinaryWriter();\n    Empty.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Empty();\n    Empty.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Empty) {}\n\n  static fromBinaryReader(instance: Empty, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        default:\n          reader.skipField();\n      }\n    }\n\n    Empty.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Empty, writer: BinaryWriter) {}\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Empty value\n   */\n  constructor(value?: RecursivePartial<Empty>) {\n    value = value || {};\n    Empty.refineValues(this);\n  }\n  toObject() {\n    return {};\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Empty {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\nimport { GrpcClientSettings } from '@ngx-grpc/common';\n/*\n  To configure the services you need to provide a configuration for each of them.\n\n  E.g. you can create a module where you configure all of them and then import this module into your AppModule:\n\n  const grpcSettings = { host: environment.grpcHost };\n\n  @NgModule({\n    providers: [\n      { provide: GRPC_TEXT2_SPEECH_CLIENT_SETTINGS, useValue: grpcSettings },\n    ],\n  })\n  export class GrpcConfigModule { }\n*/\nexport const GRPC_TEXT2_SPEECH_CLIENT_SETTINGS = new InjectionToken<\n  GrpcClientSettings\n>('GRPC_TEXT2_SPEECH_CLIENT_SETTINGS');\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcClientSettings,\n  GrpcEvent\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Metadata } from 'grpc-web';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './text-to-speech.pb';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nimport { GRPC_TEXT2_SPEECH_CLIENT_SETTINGS } from './text-to-speech.pbconf';\n@Injectable({\n  providedIn: 'root'\n})\nexport class Text2SpeechClient {\n  private client: GrpcClient;\n\n  constructor(\n    @Optional()\n    @Inject(GRPC_TEXT2_SPEECH_CLIENT_SETTINGS)\n    settings: GrpcClientSettings,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.Text2Speech',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.SynthesizeRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.SynthesizeResponse>\n   */\n  synthesize(\n    requestData: thisProto.SynthesizeRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.SynthesizeResponse> {\n    return this.synthesize$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.SynthesizeRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.SynthesizeResponse>>\n   */\n  synthesize$eventStream(\n    requestData: thisProto.SynthesizeRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.SynthesizeResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/Synthesize',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.SynthesizeRequest,\n      responseClass: thisProto.SynthesizeResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<thisProto.Text2SpeechConfig>\n   */\n  getT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.Text2SpeechConfig> {\n    return this.getT2sPipeline$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.Text2SpeechConfig>>\n   */\n  getT2sPipeline$eventStream(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.Text2SpeechConfig>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/GetT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.T2sPipelineId,\n      responseClass: thisProto.Text2SpeechConfig\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<thisProto.T2sPipelineId>\n   */\n  createT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.T2sPipelineId> {\n    return this.createT2sPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.T2sPipelineId>>\n   */\n  createT2sPipeline$eventStream(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.T2sPipelineId>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/CreateT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Text2SpeechConfig,\n      responseClass: thisProto.T2sPipelineId\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  deleteT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.deleteT2sPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  deleteT2sPipeline$eventStream(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/DeleteT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.T2sPipelineId,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  updateT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.updateT2sPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  updateT2sPipeline$eventStream(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/UpdateT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Text2SpeechConfig,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListT2sPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListT2sPipelinesResponse>\n   */\n  listT2sPipelines(\n    requestData: thisProto.ListT2sPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListT2sPipelinesResponse> {\n    return this.listT2sPipelines$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListT2sPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>>\n   */\n  listT2sPipelines$eventStream(\n    requestData: thisProto.ListT2sPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/ListT2sPipelines',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListT2sPipelinesRequest,\n      responseClass: thisProto.ListT2sPipelinesResponse\n    });\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["thisProto.SynthesizeRequest","thisProto.SynthesizeResponse","thisProto.T2sPipelineId","thisProto.Text2SpeechConfig","googleProtobuf000.Empty","thisProto.ListT2sPipelinesRequest","thisProto.ListT2sPipelinesResponse"],"mappings":"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"}