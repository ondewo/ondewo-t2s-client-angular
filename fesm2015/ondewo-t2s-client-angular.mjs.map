{"version":3,"file":"ondewo-t2s-client-angular.mjs","sources":["../../api/ondewo/t2s/text-to-speech.pbconf.ts","../../api/ondewo/t2s/text-to-speech.pb.ts","../../api/ondewo/t2s/text-to-speech.pbsc.ts","../../ondewo-t2s-client-angular.ts"],"sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Text2Speech.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_TEXT2_SPEECH_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_TEXT2_SPEECH_CLIENT_SETTINGS'\n);\n\n/**\n * Specific GrpcClientSettings for CustomPhonemizers.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nexport enum Pcm {\n  PCM_16 = 0,\n  PCM_24 = 1,\n  PCM_32 = 2,\n  PCM_S8 = 3,\n  PCM_U8 = 4,\n  FLOAT = 5,\n  DOUBLE = 6\n}\nexport enum AudioFormat {\n  wav = 0,\n  flac = 1,\n  caf = 2,\n  mp3 = 3,\n  aac = 4,\n  ogg = 5,\n  wma = 6\n}\n/**\n * Message implementation for ondewo.t2s.SynthesizeRequest\n */\nexport class SynthesizeRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.SynthesizeRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SynthesizeRequest();\n    SynthesizeRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SynthesizeRequest) {\n    _instance.text = _instance.text || '';\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SynthesizeRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.text = _reader.readString();\n          break;\n        case 2:\n          _instance.config = new RequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            RequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SynthesizeRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SynthesizeRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.text) {\n      _writer.writeString(1, _instance.text);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        2,\n        _instance.config as any,\n        RequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _text?: string;\n  private _config?: RequestConfig;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SynthesizeRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SynthesizeRequest.AsObject>) {\n    _value = _value || {};\n    this.text = _value.text;\n    this.config = _value.config ? new RequestConfig(_value.config) : undefined;\n    SynthesizeRequest.refineValues(this);\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get config(): RequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: RequestConfig | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SynthesizeRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SynthesizeRequest.AsObject {\n    return {\n      text: this.text,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SynthesizeRequest.AsProtobufJSON {\n    return {\n      text: this.text,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module SynthesizeRequest {\n  /**\n   * Standard JavaScript object representation for SynthesizeRequest\n   */\n  export interface AsObject {\n    text?: string;\n    config?: RequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for SynthesizeRequest\n   */\n  export interface AsProtobufJSON {\n    text?: string;\n    config?: RequestConfig.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.BatchSynthesizeRequest\n */\nexport class BatchSynthesizeRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.BatchSynthesizeRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new BatchSynthesizeRequest();\n    BatchSynthesizeRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: BatchSynthesizeRequest) {\n    _instance.batchRequest = _instance.batchRequest || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: BatchSynthesizeRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new SynthesizeRequest();\n          _reader.readMessage(\n            messageInitializer1,\n            SynthesizeRequest.deserializeBinaryFromReader\n          );\n          (_instance.batchRequest = _instance.batchRequest || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    BatchSynthesizeRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: BatchSynthesizeRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.batchRequest && _instance.batchRequest.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.batchRequest as any,\n        SynthesizeRequest.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _batchRequest?: SynthesizeRequest[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of BatchSynthesizeRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<BatchSynthesizeRequest.AsObject>) {\n    _value = _value || {};\n    this.batchRequest = (_value.batchRequest || []).map(\n      m => new SynthesizeRequest(m)\n    );\n    BatchSynthesizeRequest.refineValues(this);\n  }\n  get batchRequest(): SynthesizeRequest[] | undefined {\n    return this._batchRequest;\n  }\n  set batchRequest(value: SynthesizeRequest[] | undefined) {\n    this._batchRequest = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    BatchSynthesizeRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): BatchSynthesizeRequest.AsObject {\n    return {\n      batchRequest: (this.batchRequest || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): BatchSynthesizeRequest.AsProtobufJSON {\n    return {\n      batchRequest: (this.batchRequest || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module BatchSynthesizeRequest {\n  /**\n   * Standard JavaScript object representation for BatchSynthesizeRequest\n   */\n  export interface AsObject {\n    batchRequest?: SynthesizeRequest.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for BatchSynthesizeRequest\n   */\n  export interface AsProtobufJSON {\n    batchRequest?: SynthesizeRequest.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.BatchSynthesizeResponse\n */\nexport class BatchSynthesizeResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.BatchSynthesizeResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new BatchSynthesizeResponse();\n    BatchSynthesizeResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: BatchSynthesizeResponse) {\n    _instance.batchResponse = _instance.batchResponse || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: BatchSynthesizeResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new SynthesizeResponse();\n          _reader.readMessage(\n            messageInitializer1,\n            SynthesizeResponse.deserializeBinaryFromReader\n          );\n          (_instance.batchResponse = _instance.batchResponse || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    BatchSynthesizeResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: BatchSynthesizeResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.batchResponse && _instance.batchResponse.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.batchResponse as any,\n        SynthesizeResponse.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _batchResponse?: SynthesizeResponse[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of BatchSynthesizeResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<BatchSynthesizeResponse.AsObject>) {\n    _value = _value || {};\n    this.batchResponse = (_value.batchResponse || []).map(\n      m => new SynthesizeResponse(m)\n    );\n    BatchSynthesizeResponse.refineValues(this);\n  }\n  get batchResponse(): SynthesizeResponse[] | undefined {\n    return this._batchResponse;\n  }\n  set batchResponse(value: SynthesizeResponse[] | undefined) {\n    this._batchResponse = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    BatchSynthesizeResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): BatchSynthesizeResponse.AsObject {\n    return {\n      batchResponse: (this.batchResponse || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): BatchSynthesizeResponse.AsProtobufJSON {\n    return {\n      batchResponse: (this.batchResponse || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module BatchSynthesizeResponse {\n  /**\n   * Standard JavaScript object representation for BatchSynthesizeResponse\n   */\n  export interface AsObject {\n    batchResponse?: SynthesizeResponse.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for BatchSynthesizeResponse\n   */\n  export interface AsProtobufJSON {\n    batchResponse?: SynthesizeResponse.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.RequestConfig\n */\nexport class RequestConfig implements GrpcMessage {\n  static id = 'ondewo.t2s.RequestConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new RequestConfig();\n    RequestConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: RequestConfig) {\n    _instance.t2sPipelineId = _instance.t2sPipelineId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: RequestConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.t2sPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 3:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 4:\n          _instance.sampleRate = _reader.readInt32();\n          break;\n        case 5:\n          _instance.pcm = _reader.readEnum();\n          break;\n        case 6:\n          _instance.audioFormat = _reader.readEnum();\n          break;\n        case 7:\n          _instance.useCache = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    RequestConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: RequestConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.t2sPipelineId) {\n      _writer.writeString(1, _instance.t2sPipelineId);\n    }\n    if (_instance.lengthScale || _instance.lengthScale === 0) {\n      _writer.writeFloat(2, _instance.lengthScale);\n    }\n    if (_instance.noiseScale || _instance.noiseScale === 0) {\n      _writer.writeFloat(3, _instance.noiseScale);\n    }\n    if (_instance.sampleRate || _instance.sampleRate === 0) {\n      _writer.writeInt32(4, _instance.sampleRate);\n    }\n    if (_instance.pcm || _instance.pcm === 0) {\n      _writer.writeEnum(5, _instance.pcm);\n    }\n    if (_instance.audioFormat || _instance.audioFormat === 0) {\n      _writer.writeEnum(6, _instance.audioFormat);\n    }\n    if (_instance.useCache || _instance.useCache === false) {\n      _writer.writeBool(7, _instance.useCache);\n    }\n  }\n\n  private _t2sPipelineId?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _sampleRate?: number;\n  private _pcm?: Pcm;\n  private _audioFormat?: AudioFormat;\n  private _useCache?: boolean;\n\n  private _oneofLengthScale: RequestConfig.OneofLengthScaleCase =\n    RequestConfig.OneofLengthScaleCase.none;\n  private _oneofNoiseScale: RequestConfig.OneofNoiseScaleCase =\n    RequestConfig.OneofNoiseScaleCase.none;\n  private _oneofSampleRate: RequestConfig.OneofSampleRateCase =\n    RequestConfig.OneofSampleRateCase.none;\n  private _oneofPcm: RequestConfig.OneofPcmCase =\n    RequestConfig.OneofPcmCase.none;\n  private _oneofAudioFormat: RequestConfig.OneofAudioFormatCase =\n    RequestConfig.OneofAudioFormatCase.none;\n  private _oneofUseCache: RequestConfig.OneofUseCacheCase =\n    RequestConfig.OneofUseCacheCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of RequestConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<RequestConfig.AsObject>) {\n    _value = _value || {};\n    this.t2sPipelineId = _value.t2sPipelineId;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.sampleRate = _value.sampleRate;\n    this.pcm = _value.pcm;\n    this.audioFormat = _value.audioFormat;\n    this.useCache = _value.useCache;\n    RequestConfig.refineValues(this);\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofLengthScale = RequestConfig.OneofLengthScaleCase.lengthScale;\n    }\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofNoiseScale = RequestConfig.OneofNoiseScaleCase.noiseScale;\n    }\n    this._noiseScale = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofSampleRate = RequestConfig.OneofSampleRateCase.sampleRate;\n    }\n    this._sampleRate = value;\n  }\n  get pcm(): Pcm | undefined {\n    return this._pcm;\n  }\n  set pcm(value: Pcm | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofPcm = RequestConfig.OneofPcmCase.pcm;\n    }\n    this._pcm = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofAudioFormat = RequestConfig.OneofAudioFormatCase.audioFormat;\n    }\n    this._audioFormat = value;\n  }\n  get useCache(): boolean | undefined {\n    return this._useCache;\n  }\n  set useCache(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofUseCache = RequestConfig.OneofUseCacheCase.useCache;\n    }\n    this._useCache = value;\n  }\n  get oneofLengthScale() {\n    return this._oneofLengthScale;\n  }\n  get oneofNoiseScale() {\n    return this._oneofNoiseScale;\n  }\n  get oneofSampleRate() {\n    return this._oneofSampleRate;\n  }\n  get oneofPcm() {\n    return this._oneofPcm;\n  }\n  get oneofAudioFormat() {\n    return this._oneofAudioFormat;\n  }\n  get oneofUseCache() {\n    return this._oneofUseCache;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    RequestConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): RequestConfig.AsObject {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      sampleRate: this.sampleRate,\n      pcm: this.pcm,\n      audioFormat: this.audioFormat,\n      useCache: this.useCache\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): RequestConfig.AsProtobufJSON {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      lengthScale:\n        this.lengthScale === null || this.lengthScale === undefined\n          ? null\n          : this.lengthScale,\n      noiseScale:\n        this.noiseScale === null || this.noiseScale === undefined\n          ? null\n          : this.noiseScale,\n      sampleRate:\n        this.sampleRate === null || this.sampleRate === undefined\n          ? null\n          : this.sampleRate,\n      pcm:\n        this.pcm === undefined\n          ? null\n          : Pcm[this.pcm === null || this.pcm === undefined ? 0 : this.pcm],\n      audioFormat:\n        this.audioFormat === undefined\n          ? null\n          : AudioFormat[\n              this.audioFormat === null || this.audioFormat === undefined\n                ? 0\n                : this.audioFormat\n            ],\n      useCache: this.useCache\n    };\n  }\n}\nexport module RequestConfig {\n  /**\n   * Standard JavaScript object representation for RequestConfig\n   */\n  export interface AsObject {\n    t2sPipelineId?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    sampleRate?: number;\n    pcm?: Pcm;\n    audioFormat?: AudioFormat;\n    useCache?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for RequestConfig\n   */\n  export interface AsProtobufJSON {\n    t2sPipelineId?: string;\n    lengthScale?: number | null;\n    noiseScale?: number | null;\n    sampleRate?: number | null;\n    pcm?: string | null;\n    audioFormat?: string | null;\n    useCache?: boolean;\n  }\n  export enum OneofLengthScaleCase {\n    none = 0,\n    lengthScale = 1\n  }\n  export enum OneofNoiseScaleCase {\n    none = 0,\n    noiseScale = 1\n  }\n  export enum OneofSampleRateCase {\n    none = 0,\n    sampleRate = 1\n  }\n  export enum OneofPcmCase {\n    none = 0,\n    pcm = 1\n  }\n  export enum OneofAudioFormatCase {\n    none = 0,\n    audioFormat = 1\n  }\n  export enum OneofUseCacheCase {\n    none = 0,\n    useCache = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.SynthesizeResponse\n */\nexport class SynthesizeResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.SynthesizeResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SynthesizeResponse();\n    SynthesizeResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SynthesizeResponse) {\n    _instance.audioUuid = _instance.audioUuid || '';\n    _instance.audio = _instance.audio || new Uint8Array();\n    _instance.generationTime = _instance.generationTime || 0;\n    _instance.audioLength = _instance.audioLength || 0;\n    _instance.text = _instance.text || '';\n    _instance.config = _instance.config || undefined;\n    _instance.normalizedText = _instance.normalizedText || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SynthesizeResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.audioUuid = _reader.readString();\n          break;\n        case 2:\n          _instance.audio = _reader.readBytes();\n          break;\n        case 3:\n          _instance.generationTime = _reader.readFloat();\n          break;\n        case 4:\n          _instance.audioLength = _reader.readFloat();\n          break;\n        case 5:\n          _instance.text = _reader.readString();\n          break;\n        case 6:\n          _instance.config = new RequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            RequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        case 7:\n          _instance.normalizedText = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SynthesizeResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SynthesizeResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.audioUuid) {\n      _writer.writeString(1, _instance.audioUuid);\n    }\n    if (_instance.audio && _instance.audio.length) {\n      _writer.writeBytes(2, _instance.audio);\n    }\n    if (_instance.generationTime) {\n      _writer.writeFloat(3, _instance.generationTime);\n    }\n    if (_instance.audioLength) {\n      _writer.writeFloat(4, _instance.audioLength);\n    }\n    if (_instance.text) {\n      _writer.writeString(5, _instance.text);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        6,\n        _instance.config as any,\n        RequestConfig.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalizedText) {\n      _writer.writeString(7, _instance.normalizedText);\n    }\n  }\n\n  private _audioUuid?: string;\n  private _audio?: Uint8Array;\n  private _generationTime?: number;\n  private _audioLength?: number;\n  private _text?: string;\n  private _config?: RequestConfig;\n  private _normalizedText?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SynthesizeResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SynthesizeResponse.AsObject>) {\n    _value = _value || {};\n    this.audioUuid = _value.audioUuid;\n    this.audio = _value.audio;\n    this.generationTime = _value.generationTime;\n    this.audioLength = _value.audioLength;\n    this.text = _value.text;\n    this.config = _value.config ? new RequestConfig(_value.config) : undefined;\n    this.normalizedText = _value.normalizedText;\n    SynthesizeResponse.refineValues(this);\n  }\n  get audioUuid(): string | undefined {\n    return this._audioUuid;\n  }\n  set audioUuid(value: string | undefined) {\n    this._audioUuid = value;\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get generationTime(): number | undefined {\n    return this._generationTime;\n  }\n  set generationTime(value: number | undefined) {\n    this._generationTime = value;\n  }\n  get audioLength(): number | undefined {\n    return this._audioLength;\n  }\n  set audioLength(value: number | undefined) {\n    this._audioLength = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get config(): RequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: RequestConfig | undefined) {\n    this._config = value;\n  }\n  get normalizedText(): string | undefined {\n    return this._normalizedText;\n  }\n  set normalizedText(value: string | undefined) {\n    this._normalizedText = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SynthesizeResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SynthesizeResponse.AsObject {\n    return {\n      audioUuid: this.audioUuid,\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      text: this.text,\n      config: this.config ? this.config.toObject() : undefined,\n      normalizedText: this.normalizedText\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SynthesizeResponse.AsProtobufJSON {\n    return {\n      audioUuid: this.audioUuid,\n      audio: this.audio ? uint8ArrayToBase64(this.audio) : '',\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      text: this.text,\n      config: this.config ? this.config.toProtobufJSON(options) : null,\n      normalizedText: this.normalizedText\n    };\n  }\n}\nexport module SynthesizeResponse {\n  /**\n   * Standard JavaScript object representation for SynthesizeResponse\n   */\n  export interface AsObject {\n    audioUuid?: string;\n    audio?: Uint8Array;\n    generationTime?: number;\n    audioLength?: number;\n    text?: string;\n    config?: RequestConfig.AsObject;\n    normalizedText?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for SynthesizeResponse\n   */\n  export interface AsProtobufJSON {\n    audioUuid?: string;\n    audio?: string;\n    generationTime?: number;\n    audioLength?: number;\n    text?: string;\n    config?: RequestConfig.AsProtobufJSON | null;\n    normalizedText?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.T2SGetServiceInfoResponse\n */\nexport class T2SGetServiceInfoResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.T2SGetServiceInfoResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new T2SGetServiceInfoResponse();\n    T2SGetServiceInfoResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: T2SGetServiceInfoResponse) {\n    _instance.version = _instance.version || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: T2SGetServiceInfoResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.version = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    T2SGetServiceInfoResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: T2SGetServiceInfoResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.version) {\n      _writer.writeString(1, _instance.version);\n    }\n  }\n\n  private _version?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of T2SGetServiceInfoResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<T2SGetServiceInfoResponse.AsObject>) {\n    _value = _value || {};\n    this.version = _value.version;\n    T2SGetServiceInfoResponse.refineValues(this);\n  }\n  get version(): string | undefined {\n    return this._version;\n  }\n  set version(value: string | undefined) {\n    this._version = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    T2SGetServiceInfoResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): T2SGetServiceInfoResponse.AsObject {\n    return {\n      version: this.version\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): T2SGetServiceInfoResponse.AsProtobufJSON {\n    return {\n      version: this.version\n    };\n  }\n}\nexport module T2SGetServiceInfoResponse {\n  /**\n   * Standard JavaScript object representation for T2SGetServiceInfoResponse\n   */\n  export interface AsObject {\n    version?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for T2SGetServiceInfoResponse\n   */\n  export interface AsProtobufJSON {\n    version?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sPipelinesRequest\n */\nexport class ListT2sPipelinesRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sPipelinesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesRequest();\n    ListT2sPipelinesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sPipelinesRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sPipelinesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 5:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sPipelinesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(2, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(3, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(4, _instance.speakerNames);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(5, _instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sPipelinesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sPipelinesRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListT2sPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sPipelinesRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sPipelinesRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sPipelinesRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sPipelinesRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sPipelinesRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sPipelinesResponse\n */\nexport class ListT2sPipelinesResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sPipelinesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesResponse();\n    ListT2sPipelinesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sPipelinesResponse) {\n    _instance.pipelines = _instance.pipelines || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sPipelinesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Text2SpeechConfig();\n          _reader.readMessage(\n            messageInitializer1,\n            Text2SpeechConfig.deserializeBinaryFromReader\n          );\n          (_instance.pipelines = _instance.pipelines || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sPipelinesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelines && _instance.pipelines.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.pipelines as any,\n        Text2SpeechConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipelines?: Text2SpeechConfig[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sPipelinesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sPipelinesResponse.AsObject>) {\n    _value = _value || {};\n    this.pipelines = (_value.pipelines || []).map(\n      m => new Text2SpeechConfig(m)\n    );\n    ListT2sPipelinesResponse.refineValues(this);\n  }\n  get pipelines(): Text2SpeechConfig[] | undefined {\n    return this._pipelines;\n  }\n  set pipelines(value: Text2SpeechConfig[] | undefined) {\n    this._pipelines = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sPipelinesResponse.AsObject {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sPipelinesResponse.AsProtobufJSON {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module ListT2sPipelinesResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sPipelinesResponse\n   */\n  export interface AsObject {\n    pipelines?: Text2SpeechConfig.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sPipelinesResponse\n   */\n  export interface AsProtobufJSON {\n    pipelines?: Text2SpeechConfig.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sLanguagesRequest\n */\nexport class ListT2sLanguagesRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sLanguagesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sLanguagesRequest();\n    ListT2sLanguagesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sLanguagesRequest) {\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sLanguagesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sLanguagesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sLanguagesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(1, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(3, _instance.speakerNames);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(4, _instance.domains);\n    }\n  }\n\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sLanguagesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sLanguagesRequest.AsObject>) {\n    _value = _value || {};\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListT2sLanguagesRequest.refineValues(this);\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sLanguagesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sLanguagesRequest.AsObject {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sLanguagesRequest.AsProtobufJSON {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sLanguagesRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sLanguagesRequest\n   */\n  export interface AsObject {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sLanguagesRequest\n   */\n  export interface AsProtobufJSON {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sLanguagesResponse\n */\nexport class ListT2sLanguagesResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sLanguagesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sLanguagesResponse();\n    ListT2sLanguagesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sLanguagesResponse) {\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sLanguagesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sLanguagesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sLanguagesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sLanguagesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sLanguagesResponse.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    ListT2sLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sLanguagesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sLanguagesResponse.AsObject {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sLanguagesResponse.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListT2sLanguagesResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sLanguagesResponse\n   */\n  export interface AsObject {\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sLanguagesResponse\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sDomainsRequest\n */\nexport class ListT2sDomainsRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sDomainsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sDomainsRequest();\n    ListT2sDomainsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sDomainsRequest) {\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sDomainsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sDomainsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sDomainsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(1, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(3, _instance.speakerNames);\n    }\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(4, _instance.languages);\n    }\n  }\n\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sDomainsRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sDomainsRequest.AsObject>) {\n    _value = _value || {};\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.languages = (_value.languages || []).slice();\n    ListT2sDomainsRequest.refineValues(this);\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sDomainsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sDomainsRequest.AsObject {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sDomainsRequest.AsProtobufJSON {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListT2sDomainsRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sDomainsRequest\n   */\n  export interface AsObject {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sDomainsRequest\n   */\n  export interface AsProtobufJSON {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sDomainsResponse\n */\nexport class ListT2sDomainsResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sDomainsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sDomainsResponse();\n    ListT2sDomainsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sDomainsResponse) {\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sDomainsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sDomainsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sDomainsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sDomainsResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sDomainsResponse.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    ListT2sDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sDomainsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sDomainsResponse.AsObject {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sDomainsResponse.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sDomainsResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sDomainsResponse\n   */\n  export interface AsObject {\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sDomainsResponse\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.T2sPipelineId\n */\nexport class T2sPipelineId implements GrpcMessage {\n  static id = 'ondewo.t2s.T2sPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new T2sPipelineId();\n    T2sPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: T2sPipelineId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: T2sPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    T2sPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: T2sPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of T2sPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<T2sPipelineId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    T2sPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    T2sPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): T2sPipelineId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): T2sPipelineId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module T2sPipelineId {\n  /**\n   * Standard JavaScript object representation for T2sPipelineId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for T2sPipelineId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Text2SpeechConfig\n */\nexport class Text2SpeechConfig implements GrpcMessage {\n  static id = 'ondewo.t2s.Text2SpeechConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Text2SpeechConfig();\n    Text2SpeechConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Text2SpeechConfig) {\n    _instance.id = _instance.id || '';\n    _instance.description = _instance.description || undefined;\n    _instance.active = _instance.active || false;\n    _instance.inference = _instance.inference || undefined;\n    _instance.normalization = _instance.normalization || undefined;\n    _instance.postprocessing = _instance.postprocessing || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Text2SpeechConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.description = new T2SDescription();\n          _reader.readMessage(\n            _instance.description,\n            T2SDescription.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.active = _reader.readBool();\n          break;\n        case 4:\n          _instance.inference = new T2SInference();\n          _reader.readMessage(\n            _instance.inference,\n            T2SInference.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.normalization = new T2SNormalization();\n          _reader.readMessage(\n            _instance.normalization,\n            T2SNormalization.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.postprocessing = new Postprocessing();\n          _reader.readMessage(\n            _instance.postprocessing,\n            Postprocessing.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Text2SpeechConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Text2SpeechConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.description) {\n      _writer.writeMessage(\n        2,\n        _instance.description as any,\n        T2SDescription.serializeBinaryToWriter\n      );\n    }\n    if (_instance.active) {\n      _writer.writeBool(3, _instance.active);\n    }\n    if (_instance.inference) {\n      _writer.writeMessage(\n        4,\n        _instance.inference as any,\n        T2SInference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalization) {\n      _writer.writeMessage(\n        5,\n        _instance.normalization as any,\n        T2SNormalization.serializeBinaryToWriter\n      );\n    }\n    if (_instance.postprocessing) {\n      _writer.writeMessage(\n        6,\n        _instance.postprocessing as any,\n        Postprocessing.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: T2SDescription;\n  private _active?: boolean;\n  private _inference?: T2SInference;\n  private _normalization?: T2SNormalization;\n  private _postprocessing?: Postprocessing;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Text2SpeechConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Text2SpeechConfig.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.description = _value.description\n      ? new T2SDescription(_value.description)\n      : undefined;\n    this.active = _value.active;\n    this.inference = _value.inference\n      ? new T2SInference(_value.inference)\n      : undefined;\n    this.normalization = _value.normalization\n      ? new T2SNormalization(_value.normalization)\n      : undefined;\n    this.postprocessing = _value.postprocessing\n      ? new Postprocessing(_value.postprocessing)\n      : undefined;\n    Text2SpeechConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): T2SDescription | undefined {\n    return this._description;\n  }\n  set description(value: T2SDescription | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): T2SInference | undefined {\n    return this._inference;\n  }\n  set inference(value: T2SInference | undefined) {\n    this._inference = value;\n  }\n  get normalization(): T2SNormalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: T2SNormalization | undefined) {\n    this._normalization = value;\n  }\n  get postprocessing(): Postprocessing | undefined {\n    return this._postprocessing;\n  }\n  set postprocessing(value: Postprocessing | undefined) {\n    this._postprocessing = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Text2SpeechConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Text2SpeechConfig.AsObject {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Text2SpeechConfig.AsProtobufJSON {\n    return {\n      id: this.id,\n      description: this.description\n        ? this.description.toProtobufJSON(options)\n        : null,\n      active: this.active,\n      inference: this.inference ? this.inference.toProtobufJSON(options) : null,\n      normalization: this.normalization\n        ? this.normalization.toProtobufJSON(options)\n        : null,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Text2SpeechConfig {\n  /**\n   * Standard JavaScript object representation for Text2SpeechConfig\n   */\n  export interface AsObject {\n    id?: string;\n    description?: T2SDescription.AsObject;\n    active?: boolean;\n    inference?: T2SInference.AsObject;\n    normalization?: T2SNormalization.AsObject;\n    postprocessing?: Postprocessing.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Text2SpeechConfig\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    description?: T2SDescription.AsProtobufJSON | null;\n    active?: boolean;\n    inference?: T2SInference.AsProtobufJSON | null;\n    normalization?: T2SNormalization.AsProtobufJSON | null;\n    postprocessing?: Postprocessing.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.T2SDescription\n */\nexport class T2SDescription implements GrpcMessage {\n  static id = 'ondewo.t2s.T2SDescription';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new T2SDescription();\n    T2SDescription.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: T2SDescription) {\n    _instance.language = _instance.language || '';\n    _instance.speakerSex = _instance.speakerSex || '';\n    _instance.pipelineOwner = _instance.pipelineOwner || '';\n    _instance.comments = _instance.comments || '';\n    _instance.speakerName = _instance.speakerName || '';\n    _instance.domain = _instance.domain || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: T2SDescription,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          _instance.speakerSex = _reader.readString();\n          break;\n        case 3:\n          _instance.pipelineOwner = _reader.readString();\n          break;\n        case 4:\n          _instance.comments = _reader.readString();\n          break;\n        case 5:\n          _instance.speakerName = _reader.readString();\n          break;\n        case 6:\n          _instance.domain = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    T2SDescription.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: T2SDescription,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.speakerSex) {\n      _writer.writeString(2, _instance.speakerSex);\n    }\n    if (_instance.pipelineOwner) {\n      _writer.writeString(3, _instance.pipelineOwner);\n    }\n    if (_instance.comments) {\n      _writer.writeString(4, _instance.comments);\n    }\n    if (_instance.speakerName) {\n      _writer.writeString(5, _instance.speakerName);\n    }\n    if (_instance.domain) {\n      _writer.writeString(6, _instance.domain);\n    }\n  }\n\n  private _language?: string;\n  private _speakerSex?: string;\n  private _pipelineOwner?: string;\n  private _comments?: string;\n  private _speakerName?: string;\n  private _domain?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of T2SDescription to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<T2SDescription.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.speakerSex = _value.speakerSex;\n    this.pipelineOwner = _value.pipelineOwner;\n    this.comments = _value.comments;\n    this.speakerName = _value.speakerName;\n    this.domain = _value.domain;\n    T2SDescription.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get speakerSex(): string | undefined {\n    return this._speakerSex;\n  }\n  set speakerSex(value: string | undefined) {\n    this._speakerSex = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n  get speakerName(): string | undefined {\n    return this._speakerName;\n  }\n  set speakerName(value: string | undefined) {\n    this._speakerName = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    T2SDescription.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): T2SDescription.AsObject {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): T2SDescription.AsProtobufJSON {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n}\nexport module T2SDescription {\n  /**\n   * Standard JavaScript object representation for T2SDescription\n   */\n  export interface AsObject {\n    language?: string;\n    speakerSex?: string;\n    pipelineOwner?: string;\n    comments?: string;\n    speakerName?: string;\n    domain?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for T2SDescription\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    speakerSex?: string;\n    pipelineOwner?: string;\n    comments?: string;\n    speakerName?: string;\n    domain?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.T2SInference\n */\nexport class T2SInference implements GrpcMessage {\n  static id = 'ondewo.t2s.T2SInference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new T2SInference();\n    T2SInference.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: T2SInference) {\n    _instance.type = _instance.type || '';\n    _instance.compositeInference = _instance.compositeInference || undefined;\n    _instance.caching = _instance.caching || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: T2SInference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.compositeInference = new CompositeInference();\n          _reader.readMessage(\n            _instance.compositeInference,\n            CompositeInference.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.caching = new Caching();\n          _reader.readMessage(\n            _instance.caching,\n            Caching.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    T2SInference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: T2SInference,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.compositeInference) {\n      _writer.writeMessage(\n        2,\n        _instance.compositeInference as any,\n        CompositeInference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.caching) {\n      _writer.writeMessage(\n        3,\n        _instance.caching as any,\n        Caching.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _compositeInference?: CompositeInference;\n  private _caching?: Caching;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of T2SInference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<T2SInference.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.compositeInference = _value.compositeInference\n      ? new CompositeInference(_value.compositeInference)\n      : undefined;\n    this.caching = _value.caching ? new Caching(_value.caching) : undefined;\n    T2SInference.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get compositeInference(): CompositeInference | undefined {\n    return this._compositeInference;\n  }\n  set compositeInference(value: CompositeInference | undefined) {\n    this._compositeInference = value;\n  }\n  get caching(): Caching | undefined {\n    return this._caching;\n  }\n  set caching(value: Caching | undefined) {\n    this._caching = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    T2SInference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): T2SInference.AsObject {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toObject()\n        : undefined,\n      caching: this.caching ? this.caching.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): T2SInference.AsProtobufJSON {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toProtobufJSON(options)\n        : null,\n      caching: this.caching ? this.caching.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module T2SInference {\n  /**\n   * Standard JavaScript object representation for T2SInference\n   */\n  export interface AsObject {\n    type?: string;\n    compositeInference?: CompositeInference.AsObject;\n    caching?: Caching.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for T2SInference\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    compositeInference?: CompositeInference.AsProtobufJSON | null;\n    caching?: Caching.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CompositeInference\n */\nexport class CompositeInference implements GrpcMessage {\n  static id = 'ondewo.t2s.CompositeInference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CompositeInference();\n    CompositeInference.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CompositeInference) {\n    _instance.text2mel = _instance.text2mel || undefined;\n    _instance.mel2audio = _instance.mel2audio || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CompositeInference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.text2mel = new Text2Mel();\n          _reader.readMessage(\n            _instance.text2mel,\n            Text2Mel.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.mel2audio = new Mel2Audio();\n          _reader.readMessage(\n            _instance.mel2audio,\n            Mel2Audio.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CompositeInference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CompositeInference,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.text2mel) {\n      _writer.writeMessage(\n        1,\n        _instance.text2mel as any,\n        Text2Mel.serializeBinaryToWriter\n      );\n    }\n    if (_instance.mel2audio) {\n      _writer.writeMessage(\n        2,\n        _instance.mel2audio as any,\n        Mel2Audio.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _text2mel?: Text2Mel;\n  private _mel2audio?: Mel2Audio;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CompositeInference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CompositeInference.AsObject>) {\n    _value = _value || {};\n    this.text2mel = _value.text2mel ? new Text2Mel(_value.text2mel) : undefined;\n    this.mel2audio = _value.mel2audio\n      ? new Mel2Audio(_value.mel2audio)\n      : undefined;\n    CompositeInference.refineValues(this);\n  }\n  get text2mel(): Text2Mel | undefined {\n    return this._text2mel;\n  }\n  set text2mel(value: Text2Mel | undefined) {\n    this._text2mel = value;\n  }\n  get mel2audio(): Mel2Audio | undefined {\n    return this._mel2audio;\n  }\n  set mel2audio(value: Mel2Audio | undefined) {\n    this._mel2audio = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CompositeInference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CompositeInference.AsObject {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toObject() : undefined,\n      mel2audio: this.mel2audio ? this.mel2audio.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CompositeInference.AsProtobufJSON {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toProtobufJSON(options) : null,\n      mel2audio: this.mel2audio ? this.mel2audio.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CompositeInference {\n  /**\n   * Standard JavaScript object representation for CompositeInference\n   */\n  export interface AsObject {\n    text2mel?: Text2Mel.AsObject;\n    mel2audio?: Mel2Audio.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CompositeInference\n   */\n  export interface AsProtobufJSON {\n    text2mel?: Text2Mel.AsProtobufJSON | null;\n    mel2audio?: Mel2Audio.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Text2Mel\n */\nexport class Text2Mel implements GrpcMessage {\n  static id = 'ondewo.t2s.Text2Mel';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Text2Mel();\n    Text2Mel.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Text2Mel) {\n    _instance.type = _instance.type || '';\n    _instance.glowTts = _instance.glowTts || undefined;\n    _instance.glowTtsTriton = _instance.glowTtsTriton || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Text2Mel,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.glowTts = new GlowTTS();\n          _reader.readMessage(\n            _instance.glowTts,\n            GlowTTS.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.glowTtsTriton = new GlowTTSTriton();\n          _reader.readMessage(\n            _instance.glowTtsTriton,\n            GlowTTSTriton.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Text2Mel.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Text2Mel, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.glowTts) {\n      _writer.writeMessage(\n        2,\n        _instance.glowTts as any,\n        GlowTTS.serializeBinaryToWriter\n      );\n    }\n    if (_instance.glowTtsTriton) {\n      _writer.writeMessage(\n        3,\n        _instance.glowTtsTriton as any,\n        GlowTTSTriton.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _glowTts?: GlowTTS;\n  private _glowTtsTriton?: GlowTTSTriton;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Text2Mel to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Text2Mel.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.glowTts = _value.glowTts ? new GlowTTS(_value.glowTts) : undefined;\n    this.glowTtsTriton = _value.glowTtsTriton\n      ? new GlowTTSTriton(_value.glowTtsTriton)\n      : undefined;\n    Text2Mel.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get glowTts(): GlowTTS | undefined {\n    return this._glowTts;\n  }\n  set glowTts(value: GlowTTS | undefined) {\n    this._glowTts = value;\n  }\n  get glowTtsTriton(): GlowTTSTriton | undefined {\n    return this._glowTtsTriton;\n  }\n  set glowTtsTriton(value: GlowTTSTriton | undefined) {\n    this._glowTtsTriton = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Text2Mel.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Text2Mel.AsObject {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toObject() : undefined,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Text2Mel.AsProtobufJSON {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toProtobufJSON(options) : null,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Text2Mel {\n  /**\n   * Standard JavaScript object representation for Text2Mel\n   */\n  export interface AsObject {\n    type?: string;\n    glowTts?: GlowTTS.AsObject;\n    glowTtsTriton?: GlowTTSTriton.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Text2Mel\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    glowTts?: GlowTTS.AsProtobufJSON | null;\n    glowTtsTriton?: GlowTTSTriton.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.GlowTTS\n */\nexport class GlowTTS implements GrpcMessage {\n  static id = 'ondewo.t2s.GlowTTS';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GlowTTS();\n    GlowTTS.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GlowTTS) {\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.useGpu = _instance.useGpu || false;\n    _instance.lengthScale = _instance.lengthScale || 0;\n    _instance.noiseScale = _instance.noiseScale || 0;\n    _instance.path = _instance.path || '';\n    _instance.cleaners = _instance.cleaners || [];\n    _instance.paramConfigPath = _instance.paramConfigPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GlowTTS,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.useGpu = _reader.readBool();\n          break;\n        case 3:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 4:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 5:\n          _instance.path = _reader.readString();\n          break;\n        case 6:\n          (_instance.cleaners = _instance.cleaners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 7:\n          _instance.paramConfigPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GlowTTS.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: GlowTTS, _writer: BinaryWriter) {\n    if (_instance.batchSize) {\n      _writer.writeInt64String(1, _instance.batchSize);\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(2, _instance.useGpu);\n    }\n    if (_instance.lengthScale) {\n      _writer.writeFloat(3, _instance.lengthScale);\n    }\n    if (_instance.noiseScale) {\n      _writer.writeFloat(4, _instance.noiseScale);\n    }\n    if (_instance.path) {\n      _writer.writeString(5, _instance.path);\n    }\n    if (_instance.cleaners && _instance.cleaners.length) {\n      _writer.writeRepeatedString(6, _instance.cleaners);\n    }\n    if (_instance.paramConfigPath) {\n      _writer.writeString(7, _instance.paramConfigPath);\n    }\n  }\n\n  private _batchSize?: string;\n  private _useGpu?: boolean;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _path?: string;\n  private _cleaners?: string[];\n  private _paramConfigPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GlowTTS to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GlowTTS.AsObject>) {\n    _value = _value || {};\n    this.batchSize = _value.batchSize;\n    this.useGpu = _value.useGpu;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.path = _value.path;\n    this.cleaners = (_value.cleaners || []).slice();\n    this.paramConfigPath = _value.paramConfigPath;\n    GlowTTS.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GlowTTS.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GlowTTS.AsObject {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GlowTTS.AsProtobufJSON {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n}\nexport module GlowTTS {\n  /**\n   * Standard JavaScript object representation for GlowTTS\n   */\n  export interface AsObject {\n    batchSize?: string;\n    useGpu?: boolean;\n    lengthScale?: number;\n    noiseScale?: number;\n    path?: string;\n    cleaners?: string[];\n    paramConfigPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GlowTTS\n   */\n  export interface AsProtobufJSON {\n    batchSize?: string;\n    useGpu?: boolean;\n    lengthScale?: number;\n    noiseScale?: number;\n    path?: string;\n    cleaners?: string[];\n    paramConfigPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.GlowTTSTriton\n */\nexport class GlowTTSTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.GlowTTSTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GlowTTSTriton();\n    GlowTTSTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GlowTTSTriton) {\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.lengthScale = _instance.lengthScale || 0;\n    _instance.noiseScale = _instance.noiseScale || 0;\n    _instance.cleaners = _instance.cleaners || [];\n    _instance.maxTextLength = _instance.maxTextLength || '0';\n    _instance.paramConfigPath = _instance.paramConfigPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GlowTTSTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 3:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 4:\n          (_instance.cleaners = _instance.cleaners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 5:\n          _instance.maxTextLength = _reader.readInt64String();\n          break;\n        case 6:\n          _instance.paramConfigPath = _reader.readString();\n          break;\n        case 7:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GlowTTSTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GlowTTSTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.batchSize) {\n      _writer.writeInt64String(1, _instance.batchSize);\n    }\n    if (_instance.lengthScale) {\n      _writer.writeFloat(2, _instance.lengthScale);\n    }\n    if (_instance.noiseScale) {\n      _writer.writeFloat(3, _instance.noiseScale);\n    }\n    if (_instance.cleaners && _instance.cleaners.length) {\n      _writer.writeRepeatedString(4, _instance.cleaners);\n    }\n    if (_instance.maxTextLength) {\n      _writer.writeInt64String(5, _instance.maxTextLength);\n    }\n    if (_instance.paramConfigPath) {\n      _writer.writeString(6, _instance.paramConfigPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(7, _instance.tritonModelName);\n    }\n  }\n\n  private _batchSize?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _cleaners?: string[];\n  private _maxTextLength?: string;\n  private _paramConfigPath?: string;\n  private _tritonModelName?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GlowTTSTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GlowTTSTriton.AsObject>) {\n    _value = _value || {};\n    this.batchSize = _value.batchSize;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.cleaners = (_value.cleaners || []).slice();\n    this.maxTextLength = _value.maxTextLength;\n    this.paramConfigPath = _value.paramConfigPath;\n    this.tritonModelName = _value.tritonModelName;\n    GlowTTSTriton.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get maxTextLength(): string | undefined {\n    return this._maxTextLength;\n  }\n  set maxTextLength(value: string | undefined) {\n    this._maxTextLength = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GlowTTSTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GlowTTSTriton.AsObject {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonModelName: this.tritonModelName\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GlowTTSTriton.AsProtobufJSON {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonModelName: this.tritonModelName\n    };\n  }\n}\nexport module GlowTTSTriton {\n  /**\n   * Standard JavaScript object representation for GlowTTSTriton\n   */\n  export interface AsObject {\n    batchSize?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    cleaners?: string[];\n    maxTextLength?: string;\n    paramConfigPath?: string;\n    tritonModelName?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GlowTTSTriton\n   */\n  export interface AsProtobufJSON {\n    batchSize?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    cleaners?: string[];\n    maxTextLength?: string;\n    paramConfigPath?: string;\n    tritonModelName?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Mel2Audio\n */\nexport class Mel2Audio implements GrpcMessage {\n  static id = 'ondewo.t2s.Mel2Audio';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Mel2Audio();\n    Mel2Audio.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Mel2Audio) {\n    _instance.type = _instance.type || '';\n    _instance.mbMelganTriton = _instance.mbMelganTriton || undefined;\n    _instance.hifiGan = _instance.hifiGan || undefined;\n    _instance.hifiGanTriton = _instance.hifiGanTriton || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Mel2Audio,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.mbMelganTriton = new MbMelganTriton();\n          _reader.readMessage(\n            _instance.mbMelganTriton,\n            MbMelganTriton.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.hifiGan = new HiFiGan();\n          _reader.readMessage(\n            _instance.hifiGan,\n            HiFiGan.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.hifiGanTriton = new HiFiGanTriton();\n          _reader.readMessage(\n            _instance.hifiGanTriton,\n            HiFiGanTriton.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Mel2Audio.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Mel2Audio, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.mbMelganTriton) {\n      _writer.writeMessage(\n        2,\n        _instance.mbMelganTriton as any,\n        MbMelganTriton.serializeBinaryToWriter\n      );\n    }\n    if (_instance.hifiGan) {\n      _writer.writeMessage(\n        3,\n        _instance.hifiGan as any,\n        HiFiGan.serializeBinaryToWriter\n      );\n    }\n    if (_instance.hifiGanTriton) {\n      _writer.writeMessage(\n        4,\n        _instance.hifiGanTriton as any,\n        HiFiGanTriton.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _mbMelganTriton?: MbMelganTriton;\n  private _hifiGan?: HiFiGan;\n  private _hifiGanTriton?: HiFiGanTriton;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Mel2Audio to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Mel2Audio.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.mbMelganTriton = _value.mbMelganTriton\n      ? new MbMelganTriton(_value.mbMelganTriton)\n      : undefined;\n    this.hifiGan = _value.hifiGan ? new HiFiGan(_value.hifiGan) : undefined;\n    this.hifiGanTriton = _value.hifiGanTriton\n      ? new HiFiGanTriton(_value.hifiGanTriton)\n      : undefined;\n    Mel2Audio.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get mbMelganTriton(): MbMelganTriton | undefined {\n    return this._mbMelganTriton;\n  }\n  set mbMelganTriton(value: MbMelganTriton | undefined) {\n    this._mbMelganTriton = value;\n  }\n  get hifiGan(): HiFiGan | undefined {\n    return this._hifiGan;\n  }\n  set hifiGan(value: HiFiGan | undefined) {\n    this._hifiGan = value;\n  }\n  get hifiGanTriton(): HiFiGanTriton | undefined {\n    return this._hifiGanTriton;\n  }\n  set hifiGanTriton(value: HiFiGanTriton | undefined) {\n    this._hifiGanTriton = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Mel2Audio.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Mel2Audio.AsObject {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toObject()\n        : undefined,\n      hifiGan: this.hifiGan ? this.hifiGan.toObject() : undefined,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Mel2Audio.AsProtobufJSON {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toProtobufJSON(options)\n        : null,\n      hifiGan: this.hifiGan ? this.hifiGan.toProtobufJSON(options) : null,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Mel2Audio {\n  /**\n   * Standard JavaScript object representation for Mel2Audio\n   */\n  export interface AsObject {\n    type?: string;\n    mbMelganTriton?: MbMelganTriton.AsObject;\n    hifiGan?: HiFiGan.AsObject;\n    hifiGanTriton?: HiFiGanTriton.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Mel2Audio\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    mbMelganTriton?: MbMelganTriton.AsProtobufJSON | null;\n    hifiGan?: HiFiGan.AsProtobufJSON | null;\n    hifiGanTriton?: HiFiGanTriton.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.HiFiGan\n */\nexport class HiFiGan implements GrpcMessage {\n  static id = 'ondewo.t2s.HiFiGan';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HiFiGan();\n    HiFiGan.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HiFiGan) {\n    _instance.useGpu = _instance.useGpu || false;\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.configPath = _instance.configPath || '';\n    _instance.modelPath = _instance.modelPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HiFiGan,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.useGpu = _reader.readBool();\n          break;\n        case 2:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.configPath = _reader.readString();\n          break;\n        case 4:\n          _instance.modelPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HiFiGan.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: HiFiGan, _writer: BinaryWriter) {\n    if (_instance.useGpu) {\n      _writer.writeBool(1, _instance.useGpu);\n    }\n    if (_instance.batchSize) {\n      _writer.writeInt64String(2, _instance.batchSize);\n    }\n    if (_instance.configPath) {\n      _writer.writeString(3, _instance.configPath);\n    }\n    if (_instance.modelPath) {\n      _writer.writeString(4, _instance.modelPath);\n    }\n  }\n\n  private _useGpu?: boolean;\n  private _batchSize?: string;\n  private _configPath?: string;\n  private _modelPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HiFiGan to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HiFiGan.AsObject>) {\n    _value = _value || {};\n    this.useGpu = _value.useGpu;\n    this.batchSize = _value.batchSize;\n    this.configPath = _value.configPath;\n    this.modelPath = _value.modelPath;\n    HiFiGan.refineValues(this);\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HiFiGan.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HiFiGan.AsObject {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HiFiGan.AsProtobufJSON {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n}\nexport module HiFiGan {\n  /**\n   * Standard JavaScript object representation for HiFiGan\n   */\n  export interface AsObject {\n    useGpu?: boolean;\n    batchSize?: string;\n    configPath?: string;\n    modelPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for HiFiGan\n   */\n  export interface AsProtobufJSON {\n    useGpu?: boolean;\n    batchSize?: string;\n    configPath?: string;\n    modelPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.HiFiGanTriton\n */\nexport class HiFiGanTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.HiFiGanTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HiFiGanTriton();\n    HiFiGanTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HiFiGanTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HiFiGanTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HiFiGanTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: HiFiGanTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(2, _instance.tritonModelName);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonModelName?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HiFiGanTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HiFiGanTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.tritonModelName = _value.tritonModelName;\n    HiFiGanTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HiFiGanTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HiFiGanTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HiFiGanTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName\n    };\n  }\n}\nexport module HiFiGanTriton {\n  /**\n   * Standard JavaScript object representation for HiFiGanTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    tritonModelName?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for HiFiGanTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    tritonModelName?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.MbMelganTriton\n */\nexport class MbMelganTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.MbMelganTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new MbMelganTriton();\n    MbMelganTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: MbMelganTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.statsPath = _instance.statsPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: MbMelganTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.statsPath = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        case 4:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    MbMelganTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: MbMelganTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.statsPath) {\n      _writer.writeString(2, _instance.statsPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(3, _instance.tritonModelName);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(4, _instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _statsPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of MbMelganTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<MbMelganTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.statsPath = _value.statsPath;\n    this.tritonModelName = _value.tritonModelName;\n    this.tritonUrl = _value.tritonUrl;\n    MbMelganTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get statsPath(): string | undefined {\n    return this._statsPath;\n  }\n  set statsPath(value: string | undefined) {\n    this._statsPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    MbMelganTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): MbMelganTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): MbMelganTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n}\nexport module MbMelganTriton {\n  /**\n   * Standard JavaScript object representation for MbMelganTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    statsPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for MbMelganTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    statsPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Caching\n */\nexport class Caching implements GrpcMessage {\n  static id = 'ondewo.t2s.Caching';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Caching();\n    Caching.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Caching) {\n    _instance.active = _instance.active || false;\n    _instance.memoryCacheMaxSize = _instance.memoryCacheMaxSize || '0';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.loadCache = _instance.loadCache || false;\n    _instance.saveCache = _instance.saveCache || false;\n    _instance.cacheSaveDir = _instance.cacheSaveDir || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Caching,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.active = _reader.readBool();\n          break;\n        case 2:\n          _instance.memoryCacheMaxSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.loadCache = _reader.readBool();\n          break;\n        case 5:\n          _instance.saveCache = _reader.readBool();\n          break;\n        case 6:\n          _instance.cacheSaveDir = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Caching.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Caching, _writer: BinaryWriter) {\n    if (_instance.active) {\n      _writer.writeBool(1, _instance.active);\n    }\n    if (_instance.memoryCacheMaxSize) {\n      _writer.writeInt64String(2, _instance.memoryCacheMaxSize);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(3, _instance.samplingRate);\n    }\n    if (_instance.loadCache) {\n      _writer.writeBool(4, _instance.loadCache);\n    }\n    if (_instance.saveCache) {\n      _writer.writeBool(5, _instance.saveCache);\n    }\n    if (_instance.cacheSaveDir) {\n      _writer.writeString(6, _instance.cacheSaveDir);\n    }\n  }\n\n  private _active?: boolean;\n  private _memoryCacheMaxSize?: string;\n  private _samplingRate?: string;\n  private _loadCache?: boolean;\n  private _saveCache?: boolean;\n  private _cacheSaveDir?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Caching to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Caching.AsObject>) {\n    _value = _value || {};\n    this.active = _value.active;\n    this.memoryCacheMaxSize = _value.memoryCacheMaxSize;\n    this.samplingRate = _value.samplingRate;\n    this.loadCache = _value.loadCache;\n    this.saveCache = _value.saveCache;\n    this.cacheSaveDir = _value.cacheSaveDir;\n    Caching.refineValues(this);\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get memoryCacheMaxSize(): string | undefined {\n    return this._memoryCacheMaxSize;\n  }\n  set memoryCacheMaxSize(value: string | undefined) {\n    this._memoryCacheMaxSize = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get loadCache(): boolean | undefined {\n    return this._loadCache;\n  }\n  set loadCache(value: boolean | undefined) {\n    this._loadCache = value;\n  }\n  get saveCache(): boolean | undefined {\n    return this._saveCache;\n  }\n  set saveCache(value: boolean | undefined) {\n    this._saveCache = value;\n  }\n  get cacheSaveDir(): string | undefined {\n    return this._cacheSaveDir;\n  }\n  set cacheSaveDir(value: string | undefined) {\n    this._cacheSaveDir = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Caching.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Caching.AsObject {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Caching.AsProtobufJSON {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n}\nexport module Caching {\n  /**\n   * Standard JavaScript object representation for Caching\n   */\n  export interface AsObject {\n    active?: boolean;\n    memoryCacheMaxSize?: string;\n    samplingRate?: string;\n    loadCache?: boolean;\n    saveCache?: boolean;\n    cacheSaveDir?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Caching\n   */\n  export interface AsProtobufJSON {\n    active?: boolean;\n    memoryCacheMaxSize?: string;\n    samplingRate?: string;\n    loadCache?: boolean;\n    saveCache?: boolean;\n    cacheSaveDir?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.T2SNormalization\n */\nexport class T2SNormalization implements GrpcMessage {\n  static id = 'ondewo.t2s.T2SNormalization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new T2SNormalization();\n    T2SNormalization.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: T2SNormalization) {\n    _instance.language = _instance.language || '';\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.customPhonemizerId = _instance.customPhonemizerId || '';\n    _instance.arpabetMappping = _instance.arpabetMappping || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: T2SNormalization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          _instance.customPhonemizerId = _reader.readString();\n          break;\n        case 4:\n          _instance.arpabetMappping = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    T2SNormalization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: T2SNormalization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(2, _instance.pipeline);\n    }\n    if (_instance.customPhonemizerId) {\n      _writer.writeString(3, _instance.customPhonemizerId);\n    }\n    if (_instance.arpabetMappping) {\n      _writer.writeString(4, _instance.arpabetMappping);\n    }\n  }\n\n  private _language?: string;\n  private _pipeline?: string[];\n  private _customPhonemizerId?: string;\n  private _arpabetMappping?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of T2SNormalization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<T2SNormalization.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.pipeline = (_value.pipeline || []).slice();\n    this.customPhonemizerId = _value.customPhonemizerId;\n    this.arpabetMappping = _value.arpabetMappping;\n    T2SNormalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get customPhonemizerId(): string | undefined {\n    return this._customPhonemizerId;\n  }\n  set customPhonemizerId(value: string | undefined) {\n    this._customPhonemizerId = value;\n  }\n  get arpabetMappping(): string | undefined {\n    return this._arpabetMappping;\n  }\n  set arpabetMappping(value: string | undefined) {\n    this._arpabetMappping = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    T2SNormalization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): T2SNormalization.AsObject {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice(),\n      customPhonemizerId: this.customPhonemizerId,\n      arpabetMappping: this.arpabetMappping\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): T2SNormalization.AsProtobufJSON {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice(),\n      customPhonemizerId: this.customPhonemizerId,\n      arpabetMappping: this.arpabetMappping\n    };\n  }\n}\nexport module T2SNormalization {\n  /**\n   * Standard JavaScript object representation for T2SNormalization\n   */\n  export interface AsObject {\n    language?: string;\n    pipeline?: string[];\n    customPhonemizerId?: string;\n    arpabetMappping?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for T2SNormalization\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    pipeline?: string[];\n    customPhonemizerId?: string;\n    arpabetMappping?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Postprocessing\n */\nexport class Postprocessing implements GrpcMessage {\n  static id = 'ondewo.t2s.Postprocessing';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Postprocessing();\n    Postprocessing.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Postprocessing) {\n    _instance.silenceSecs = _instance.silenceSecs || 0;\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.logmmse = _instance.logmmse || undefined;\n    _instance.wiener = _instance.wiener || undefined;\n    _instance.apodization = _instance.apodization || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Postprocessing,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.silenceSecs = _reader.readFloat();\n          break;\n        case 2:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          _instance.logmmse = new Logmnse();\n          _reader.readMessage(\n            _instance.logmmse,\n            Logmnse.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.wiener = new Wiener();\n          _reader.readMessage(\n            _instance.wiener,\n            Wiener.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.apodization = new Apodization();\n          _reader.readMessage(\n            _instance.apodization,\n            Apodization.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Postprocessing.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Postprocessing,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.silenceSecs) {\n      _writer.writeFloat(1, _instance.silenceSecs);\n    }\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(2, _instance.pipeline);\n    }\n    if (_instance.logmmse) {\n      _writer.writeMessage(\n        3,\n        _instance.logmmse as any,\n        Logmnse.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wiener) {\n      _writer.writeMessage(\n        4,\n        _instance.wiener as any,\n        Wiener.serializeBinaryToWriter\n      );\n    }\n    if (_instance.apodization) {\n      _writer.writeMessage(\n        5,\n        _instance.apodization as any,\n        Apodization.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _silenceSecs?: number;\n  private _pipeline?: string[];\n  private _logmmse?: Logmnse;\n  private _wiener?: Wiener;\n  private _apodization?: Apodization;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Postprocessing to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Postprocessing.AsObject>) {\n    _value = _value || {};\n    this.silenceSecs = _value.silenceSecs;\n    this.pipeline = (_value.pipeline || []).slice();\n    this.logmmse = _value.logmmse ? new Logmnse(_value.logmmse) : undefined;\n    this.wiener = _value.wiener ? new Wiener(_value.wiener) : undefined;\n    this.apodization = _value.apodization\n      ? new Apodization(_value.apodization)\n      : undefined;\n    Postprocessing.refineValues(this);\n  }\n  get silenceSecs(): number | undefined {\n    return this._silenceSecs;\n  }\n  set silenceSecs(value: number | undefined) {\n    this._silenceSecs = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get logmmse(): Logmnse | undefined {\n    return this._logmmse;\n  }\n  set logmmse(value: Logmnse | undefined) {\n    this._logmmse = value;\n  }\n  get wiener(): Wiener | undefined {\n    return this._wiener;\n  }\n  set wiener(value: Wiener | undefined) {\n    this._wiener = value;\n  }\n  get apodization(): Apodization | undefined {\n    return this._apodization;\n  }\n  set apodization(value: Apodization | undefined) {\n    this._apodization = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Postprocessing.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Postprocessing.AsObject {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toObject() : undefined,\n      wiener: this.wiener ? this.wiener.toObject() : undefined,\n      apodization: this.apodization ? this.apodization.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Postprocessing.AsProtobufJSON {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toProtobufJSON(options) : null,\n      wiener: this.wiener ? this.wiener.toProtobufJSON(options) : null,\n      apodization: this.apodization\n        ? this.apodization.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Postprocessing {\n  /**\n   * Standard JavaScript object representation for Postprocessing\n   */\n  export interface AsObject {\n    silenceSecs?: number;\n    pipeline?: string[];\n    logmmse?: Logmnse.AsObject;\n    wiener?: Wiener.AsObject;\n    apodization?: Apodization.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Postprocessing\n   */\n  export interface AsProtobufJSON {\n    silenceSecs?: number;\n    pipeline?: string[];\n    logmmse?: Logmnse.AsProtobufJSON | null;\n    wiener?: Wiener.AsProtobufJSON | null;\n    apodization?: Apodization.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Logmnse\n */\nexport class Logmnse implements GrpcMessage {\n  static id = 'ondewo.t2s.Logmnse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Logmnse();\n    Logmnse.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Logmnse) {\n    _instance.initialNoise = _instance.initialNoise || '0';\n    _instance.windowSize = _instance.windowSize || '0';\n    _instance.noiseThreshold = _instance.noiseThreshold || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Logmnse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.initialNoise = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.windowSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.noiseThreshold = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Logmnse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Logmnse, _writer: BinaryWriter) {\n    if (_instance.initialNoise) {\n      _writer.writeInt64String(1, _instance.initialNoise);\n    }\n    if (_instance.windowSize) {\n      _writer.writeInt64String(2, _instance.windowSize);\n    }\n    if (_instance.noiseThreshold) {\n      _writer.writeFloat(3, _instance.noiseThreshold);\n    }\n  }\n\n  private _initialNoise?: string;\n  private _windowSize?: string;\n  private _noiseThreshold?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Logmnse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Logmnse.AsObject>) {\n    _value = _value || {};\n    this.initialNoise = _value.initialNoise;\n    this.windowSize = _value.windowSize;\n    this.noiseThreshold = _value.noiseThreshold;\n    Logmnse.refineValues(this);\n  }\n  get initialNoise(): string | undefined {\n    return this._initialNoise;\n  }\n  set initialNoise(value: string | undefined) {\n    this._initialNoise = value;\n  }\n  get windowSize(): string | undefined {\n    return this._windowSize;\n  }\n  set windowSize(value: string | undefined) {\n    this._windowSize = value;\n  }\n  get noiseThreshold(): number | undefined {\n    return this._noiseThreshold;\n  }\n  set noiseThreshold(value: number | undefined) {\n    this._noiseThreshold = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Logmnse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Logmnse.AsObject {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Logmnse.AsProtobufJSON {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n}\nexport module Logmnse {\n  /**\n   * Standard JavaScript object representation for Logmnse\n   */\n  export interface AsObject {\n    initialNoise?: string;\n    windowSize?: string;\n    noiseThreshold?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Logmnse\n   */\n  export interface AsProtobufJSON {\n    initialNoise?: string;\n    windowSize?: string;\n    noiseThreshold?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Wiener\n */\nexport class Wiener implements GrpcMessage {\n  static id = 'ondewo.t2s.Wiener';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wiener();\n    Wiener.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wiener) {\n    _instance.frameLen = _instance.frameLen || '0';\n    _instance.lpcOrder = _instance.lpcOrder || '0';\n    _instance.iterations = _instance.iterations || '0';\n    _instance.alpha = _instance.alpha || 0;\n    _instance.thresh = _instance.thresh || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Wiener, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.frameLen = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.lpcOrder = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.iterations = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.alpha = _reader.readFloat();\n          break;\n        case 5:\n          _instance.thresh = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wiener.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Wiener, _writer: BinaryWriter) {\n    if (_instance.frameLen) {\n      _writer.writeInt64String(1, _instance.frameLen);\n    }\n    if (_instance.lpcOrder) {\n      _writer.writeInt64String(2, _instance.lpcOrder);\n    }\n    if (_instance.iterations) {\n      _writer.writeInt64String(3, _instance.iterations);\n    }\n    if (_instance.alpha) {\n      _writer.writeFloat(4, _instance.alpha);\n    }\n    if (_instance.thresh) {\n      _writer.writeFloat(5, _instance.thresh);\n    }\n  }\n\n  private _frameLen?: string;\n  private _lpcOrder?: string;\n  private _iterations?: string;\n  private _alpha?: number;\n  private _thresh?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wiener to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wiener.AsObject>) {\n    _value = _value || {};\n    this.frameLen = _value.frameLen;\n    this.lpcOrder = _value.lpcOrder;\n    this.iterations = _value.iterations;\n    this.alpha = _value.alpha;\n    this.thresh = _value.thresh;\n    Wiener.refineValues(this);\n  }\n  get frameLen(): string | undefined {\n    return this._frameLen;\n  }\n  set frameLen(value: string | undefined) {\n    this._frameLen = value;\n  }\n  get lpcOrder(): string | undefined {\n    return this._lpcOrder;\n  }\n  set lpcOrder(value: string | undefined) {\n    this._lpcOrder = value;\n  }\n  get iterations(): string | undefined {\n    return this._iterations;\n  }\n  set iterations(value: string | undefined) {\n    this._iterations = value;\n  }\n  get alpha(): number | undefined {\n    return this._alpha;\n  }\n  set alpha(value: number | undefined) {\n    this._alpha = value;\n  }\n  get thresh(): number | undefined {\n    return this._thresh;\n  }\n  set thresh(value: number | undefined) {\n    this._thresh = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wiener.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wiener.AsObject {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wiener.AsProtobufJSON {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n}\nexport module Wiener {\n  /**\n   * Standard JavaScript object representation for Wiener\n   */\n  export interface AsObject {\n    frameLen?: string;\n    lpcOrder?: string;\n    iterations?: string;\n    alpha?: number;\n    thresh?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Wiener\n   */\n  export interface AsProtobufJSON {\n    frameLen?: string;\n    lpcOrder?: string;\n    iterations?: string;\n    alpha?: number;\n    thresh?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Apodization\n */\nexport class Apodization implements GrpcMessage {\n  static id = 'ondewo.t2s.Apodization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Apodization();\n    Apodization.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Apodization) {\n    _instance.apodizationSecs = _instance.apodizationSecs || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Apodization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.apodizationSecs = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Apodization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Apodization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.apodizationSecs) {\n      _writer.writeFloat(1, _instance.apodizationSecs);\n    }\n  }\n\n  private _apodizationSecs?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Apodization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Apodization.AsObject>) {\n    _value = _value || {};\n    this.apodizationSecs = _value.apodizationSecs;\n    Apodization.refineValues(this);\n  }\n  get apodizationSecs(): number | undefined {\n    return this._apodizationSecs;\n  }\n  set apodizationSecs(value: number | undefined) {\n    this._apodizationSecs = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Apodization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Apodization.AsObject {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Apodization.AsProtobufJSON {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n}\nexport module Apodization {\n  /**\n   * Standard JavaScript object representation for Apodization\n   */\n  export interface AsObject {\n    apodizationSecs?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Apodization\n   */\n  export interface AsProtobufJSON {\n    apodizationSecs?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.PhonemizerId\n */\nexport class PhonemizerId implements GrpcMessage {\n  static id = 'ondewo.t2s.PhonemizerId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PhonemizerId();\n    PhonemizerId.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PhonemizerId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PhonemizerId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PhonemizerId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PhonemizerId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PhonemizerId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PhonemizerId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    PhonemizerId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PhonemizerId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PhonemizerId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PhonemizerId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module PhonemizerId {\n  /**\n   * Standard JavaScript object representation for PhonemizerId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for PhonemizerId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CustomPhonemizerProto\n */\nexport class CustomPhonemizerProto implements GrpcMessage {\n  static id = 'ondewo.t2s.CustomPhonemizerProto';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CustomPhonemizerProto();\n    CustomPhonemizerProto.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CustomPhonemizerProto) {\n    _instance.id = _instance.id || '';\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CustomPhonemizerProto,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Map();\n          _reader.readMessage(\n            messageInitializer2,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer2);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CustomPhonemizerProto.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CustomPhonemizerProto,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CustomPhonemizerProto to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CustomPhonemizerProto.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    CustomPhonemizerProto.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CustomPhonemizerProto.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CustomPhonemizerProto.AsObject {\n    return {\n      id: this.id,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CustomPhonemizerProto.AsProtobufJSON {\n    return {\n      id: this.id,\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module CustomPhonemizerProto {\n  /**\n   * Standard JavaScript object representation for CustomPhonemizerProto\n   */\n  export interface AsObject {\n    id?: string;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for CustomPhonemizerProto\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Map\n */\nexport class Map implements GrpcMessage {\n  static id = 'ondewo.t2s.Map';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Map();\n    Map.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Map) {\n    _instance.word = _instance.word || '';\n    _instance.phonemeGroups = _instance.phonemeGroups || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Map, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.word = _reader.readString();\n          break;\n        case 2:\n          _instance.phonemeGroups = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Map.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Map, _writer: BinaryWriter) {\n    if (_instance.word) {\n      _writer.writeString(1, _instance.word);\n    }\n    if (_instance.phonemeGroups) {\n      _writer.writeString(2, _instance.phonemeGroups);\n    }\n  }\n\n  private _word?: string;\n  private _phonemeGroups?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Map to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Map.AsObject>) {\n    _value = _value || {};\n    this.word = _value.word;\n    this.phonemeGroups = _value.phonemeGroups;\n    Map.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get phonemeGroups(): string | undefined {\n    return this._phonemeGroups;\n  }\n  set phonemeGroups(value: string | undefined) {\n    this._phonemeGroups = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Map.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Map.AsObject {\n    return {\n      word: this.word,\n      phonemeGroups: this.phonemeGroups\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Map.AsProtobufJSON {\n    return {\n      word: this.word,\n      phonemeGroups: this.phonemeGroups\n    };\n  }\n}\nexport module Map {\n  /**\n   * Standard JavaScript object representation for Map\n   */\n  export interface AsObject {\n    word?: string;\n    phonemeGroups?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Map\n   */\n  export interface AsProtobufJSON {\n    word?: string;\n    phonemeGroups?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListCustomPhonemizerResponse\n */\nexport class ListCustomPhonemizerResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListCustomPhonemizerResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListCustomPhonemizerResponse();\n    ListCustomPhonemizerResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListCustomPhonemizerResponse) {\n    _instance.phonemizers = _instance.phonemizers || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListCustomPhonemizerResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new CustomPhonemizerProto();\n          _reader.readMessage(\n            messageInitializer1,\n            CustomPhonemizerProto.deserializeBinaryFromReader\n          );\n          (_instance.phonemizers = _instance.phonemizers || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListCustomPhonemizerResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListCustomPhonemizerResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.phonemizers && _instance.phonemizers.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.phonemizers as any,\n        CustomPhonemizerProto.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _phonemizers?: CustomPhonemizerProto[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListCustomPhonemizerResponse to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListCustomPhonemizerResponse.AsObject>\n  ) {\n    _value = _value || {};\n    this.phonemizers = (_value.phonemizers || []).map(\n      m => new CustomPhonemizerProto(m)\n    );\n    ListCustomPhonemizerResponse.refineValues(this);\n  }\n  get phonemizers(): CustomPhonemizerProto[] | undefined {\n    return this._phonemizers;\n  }\n  set phonemizers(value: CustomPhonemizerProto[] | undefined) {\n    this._phonemizers = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListCustomPhonemizerResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListCustomPhonemizerResponse.AsObject {\n    return {\n      phonemizers: (this.phonemizers || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListCustomPhonemizerResponse.AsProtobufJSON {\n    return {\n      phonemizers: (this.phonemizers || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module ListCustomPhonemizerResponse {\n  /**\n   * Standard JavaScript object representation for ListCustomPhonemizerResponse\n   */\n  export interface AsObject {\n    phonemizers?: CustomPhonemizerProto.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListCustomPhonemizerResponse\n   */\n  export interface AsProtobufJSON {\n    phonemizers?: CustomPhonemizerProto.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListCustomPhonemizerRequest\n */\nexport class ListCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListCustomPhonemizerRequest();\n    ListCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListCustomPhonemizerRequest) {\n    _instance.pipelineIds = _instance.pipelineIds || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.pipelineIds = _instance.pipelineIds || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineIds && _instance.pipelineIds.length) {\n      _writer.writeRepeatedString(1, _instance.pipelineIds);\n    }\n  }\n\n  private _pipelineIds?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListCustomPhonemizerRequest.AsObject>) {\n    _value = _value || {};\n    this.pipelineIds = (_value.pipelineIds || []).slice();\n    ListCustomPhonemizerRequest.refineValues(this);\n  }\n  get pipelineIds(): string[] | undefined {\n    return this._pipelineIds;\n  }\n  set pipelineIds(value: string[] | undefined) {\n    this._pipelineIds = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListCustomPhonemizerRequest.AsObject {\n    return {\n      pipelineIds: (this.pipelineIds || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      pipelineIds: (this.pipelineIds || []).slice()\n    };\n  }\n}\nexport module ListCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for ListCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    pipelineIds?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    pipelineIds?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.UpdateCustomPhonemizerRequest\n */\nexport class UpdateCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.UpdateCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UpdateCustomPhonemizerRequest();\n    UpdateCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UpdateCustomPhonemizerRequest) {\n    _instance.id = _instance.id || '';\n    _instance.updateMethod = _instance.updateMethod || 0;\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UpdateCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.updateMethod = _reader.readEnum();\n          break;\n        case 3:\n          const messageInitializer3 = new Map();\n          _reader.readMessage(\n            messageInitializer3,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer3);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UpdateCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UpdateCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.updateMethod) {\n      _writer.writeEnum(2, _instance.updateMethod);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _updateMethod?: UpdateCustomPhonemizerRequest.UpdateMethod;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UpdateCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<UpdateCustomPhonemizerRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.updateMethod = _value.updateMethod;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    UpdateCustomPhonemizerRequest.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get updateMethod(): UpdateCustomPhonemizerRequest.UpdateMethod | undefined {\n    return this._updateMethod;\n  }\n  set updateMethod(\n    value: UpdateCustomPhonemizerRequest.UpdateMethod | undefined\n  ) {\n    this._updateMethod = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UpdateCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UpdateCustomPhonemizerRequest.AsObject {\n    return {\n      id: this.id,\n      updateMethod: this.updateMethod,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UpdateCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      id: this.id,\n      updateMethod:\n        UpdateCustomPhonemizerRequest.UpdateMethod[\n          this.updateMethod === null || this.updateMethod === undefined\n            ? 0\n            : this.updateMethod\n        ],\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module UpdateCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for UpdateCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    id?: string;\n    updateMethod?: UpdateCustomPhonemizerRequest.UpdateMethod;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for UpdateCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    updateMethod?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n  export enum UpdateMethod {\n    extend_hard = 0,\n    extend_soft = 1,\n    replace = 2\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CreateCustomPhonemizerRequest\n */\nexport class CreateCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.CreateCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CreateCustomPhonemizerRequest();\n    CreateCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CreateCustomPhonemizerRequest) {\n    _instance.prefix = _instance.prefix || '';\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CreateCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.prefix = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Map();\n          _reader.readMessage(\n            messageInitializer2,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer2);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CreateCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CreateCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.prefix) {\n      _writer.writeString(1, _instance.prefix);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _prefix?: string;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CreateCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<CreateCustomPhonemizerRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.prefix = _value.prefix;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    CreateCustomPhonemizerRequest.refineValues(this);\n  }\n  get prefix(): string | undefined {\n    return this._prefix;\n  }\n  set prefix(value: string | undefined) {\n    this._prefix = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CreateCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CreateCustomPhonemizerRequest.AsObject {\n    return {\n      prefix: this.prefix,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CreateCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      prefix: this.prefix,\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module CreateCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for CreateCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    prefix?: string;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for CreateCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    prefix?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n// @ts-nocheck\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './text-to-speech.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport {\n  GRPC_TEXT2_SPEECH_CLIENT_SETTINGS,\n  GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS\n} from './text-to-speech.pbconf';\n/**\n * Service client implementation for ondewo.t2s.Text2Speech\n */\n@Injectable({ providedIn: 'any' })\nexport class Text2SpeechClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/Synthesize\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.SynthesizeResponse>>\n     */\n    synthesize: (\n      requestData: thisProto.SynthesizeRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.SynthesizeResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/Synthesize',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.SynthesizeRequest,\n        responseClass: thisProto.SynthesizeResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/BatchSynthesize\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.BatchSynthesizeResponse>>\n     */\n    batchSynthesize: (\n      requestData: thisProto.BatchSynthesizeRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.BatchSynthesizeResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/BatchSynthesize',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.BatchSynthesizeRequest,\n        responseClass: thisProto.BatchSynthesizeResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/GetT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Text2SpeechConfig>>\n     */\n    getT2sPipeline: (\n      requestData: thisProto.T2sPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Text2SpeechConfig>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/GetT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.T2sPipelineId,\n        responseClass: thisProto.Text2SpeechConfig\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/CreateT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.T2sPipelineId>>\n     */\n    createT2sPipeline: (\n      requestData: thisProto.Text2SpeechConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.T2sPipelineId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/CreateT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Text2SpeechConfig,\n        responseClass: thisProto.T2sPipelineId\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/DeleteT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteT2sPipeline: (\n      requestData: thisProto.T2sPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/DeleteT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.T2sPipelineId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/UpdateT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    updateT2sPipeline: (\n      requestData: thisProto.Text2SpeechConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/UpdateT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Text2SpeechConfig,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/ListT2sPipelines\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>>\n     */\n    listT2sPipelines: (\n      requestData: thisProto.ListT2sPipelinesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sPipelines',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sPipelinesRequest,\n        responseClass: thisProto.ListT2sPipelinesResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/ListT2sLanguages\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sLanguagesResponse>>\n     */\n    listT2sLanguages: (\n      requestData: thisProto.ListT2sLanguagesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sLanguagesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sLanguages',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sLanguagesRequest,\n        responseClass: thisProto.ListT2sLanguagesResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/ListT2sDomains\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sDomainsResponse>>\n     */\n    listT2sDomains: (\n      requestData: thisProto.ListT2sDomainsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sDomainsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sDomains',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sDomainsRequest,\n        responseClass: thisProto.ListT2sDomainsResponse\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.Text2Speech/GetServiceInfo\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.T2SGetServiceInfoResponse>>\n     */\n    getServiceInfo: (\n      requestData: googleProtobuf000.Empty,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.T2SGetServiceInfoResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/GetServiceInfo',\n        requestData,\n        requestMetadata,\n        requestClass: googleProtobuf000.Empty,\n        responseClass: thisProto.T2SGetServiceInfoResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_TEXT2_SPEECH_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.Text2Speech',\n      settings\n    );\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/Synthesize\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.SynthesizeResponse>\n   */\n  synthesize(\n    requestData: thisProto.SynthesizeRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.SynthesizeResponse> {\n    return this.$raw\n      .synthesize(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/BatchSynthesize\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.BatchSynthesizeResponse>\n   */\n  batchSynthesize(\n    requestData: thisProto.BatchSynthesizeRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.BatchSynthesizeResponse> {\n    return this.$raw\n      .batchSynthesize(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/GetT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Text2SpeechConfig>\n   */\n  getT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Text2SpeechConfig> {\n    return this.$raw\n      .getT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/CreateT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.T2sPipelineId>\n   */\n  createT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.T2sPipelineId> {\n    return this.$raw\n      .createT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/DeleteT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/UpdateT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  updateT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .updateT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/ListT2sPipelines\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sPipelinesResponse>\n   */\n  listT2sPipelines(\n    requestData: thisProto.ListT2sPipelinesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sPipelinesResponse> {\n    return this.$raw\n      .listT2sPipelines(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/ListT2sLanguages\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sLanguagesResponse>\n   */\n  listT2sLanguages(\n    requestData: thisProto.ListT2sLanguagesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sLanguagesResponse> {\n    return this.$raw\n      .listT2sLanguages(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/ListT2sDomains\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sDomainsResponse>\n   */\n  listT2sDomains(\n    requestData: thisProto.ListT2sDomainsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sDomainsResponse> {\n    return this.$raw\n      .listT2sDomains(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.Text2Speech/GetServiceInfo\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.T2SGetServiceInfoResponse>\n   */\n  getServiceInfo(\n    requestData: googleProtobuf000.Empty,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.T2SGetServiceInfoResponse> {\n    return this.$raw\n      .getServiceInfo(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n/**\n * Service client implementation for ondewo.t2s.CustomPhonemizers\n */\n@Injectable({ providedIn: 'any' })\nexport class CustomPhonemizersClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary call: /ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.CustomPhonemizerProto>>\n     */\n    getCustomPhonemizer: (\n      requestData: thisProto.PhonemizerId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.CustomPhonemizerProto>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.PhonemizerId,\n        responseClass: thisProto.CustomPhonemizerProto\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.PhonemizerId>>\n     */\n    createCustomPhonemizer: (\n      requestData: thisProto.CreateCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.PhonemizerId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.CreateCustomPhonemizerRequest,\n        responseClass: thisProto.PhonemizerId\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteCustomPhonemizer: (\n      requestData: thisProto.PhonemizerId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.PhonemizerId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.CustomPhonemizerProto>>\n     */\n    updateCustomPhonemizer: (\n      requestData: thisProto.UpdateCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.CustomPhonemizerProto>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.UpdateCustomPhonemizerRequest,\n        responseClass: thisProto.CustomPhonemizerProto\n      });\n    },\n    /**\n     * Unary call: /ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListCustomPhonemizerResponse>>\n     */\n    listCustomPhonemizer: (\n      requestData: thisProto.ListCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListCustomPhonemizerResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListCustomPhonemizerRequest,\n        responseClass: thisProto.ListCustomPhonemizerResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.CustomPhonemizers',\n      settings\n    );\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.CustomPhonemizerProto>\n   */\n  getCustomPhonemizer(\n    requestData: thisProto.PhonemizerId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.CustomPhonemizerProto> {\n    return this.$raw\n      .getCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.PhonemizerId>\n   */\n  createCustomPhonemizer(\n    requestData: thisProto.CreateCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.PhonemizerId> {\n    return this.$raw\n      .createCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteCustomPhonemizer(\n    requestData: thisProto.PhonemizerId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.CustomPhonemizerProto>\n   */\n  updateCustomPhonemizer(\n    requestData: thisProto.UpdateCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.CustomPhonemizerProto> {\n    return this.$raw\n      .updateCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary call @/ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListCustomPhonemizerResponse>\n   */\n  listCustomPhonemizer(\n    requestData: thisProto.ListCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListCustomPhonemizerResponse> {\n    return this.$raw\n      .listCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["thisProto.SynthesizeRequest","thisProto.SynthesizeResponse","thisProto.BatchSynthesizeRequest","thisProto.BatchSynthesizeResponse","thisProto.T2sPipelineId","thisProto.Text2SpeechConfig","thisProto.ListT2sPipelinesRequest","thisProto.ListT2sPipelinesResponse","thisProto.ListT2sLanguagesRequest","thisProto.ListT2sLanguagesResponse","thisProto.ListT2sDomainsRequest","thisProto.ListT2sDomainsResponse","thisProto.T2SGetServiceInfoResponse","thisProto.PhonemizerId","thisProto.CustomPhonemizerProto","thisProto.CreateCustomPhonemizerRequest","thisProto.UpdateCustomPhonemizerRequest","thisProto.ListCustomPhonemizerRequest","thisProto.ListCustomPhonemizerResponse"],"mappings":"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"}