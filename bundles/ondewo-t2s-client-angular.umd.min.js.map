{"version":3,"sources":["../../api/ondewo/t2s/text-to-speech.pb.ts","../../api/google/protobuf/empty.pb.ts","../../api/ondewo/t2s/text-to-speech.pbconf.ts","../../api/ondewo/t2s/text-to-speech.pbsc.ts"],"names":["AudioFormat","Pcm","SynthesizeRequest","value","this","t2sPipelineId","text","lengthScale","noiseScale","sampleRate","pcm","audioFormat","refineValues","toBinary","instance","writer","BinaryWriter","toBinaryWriter","getResultBuffer","fromBinary","bytes","fromBinaryReader","BinaryReader","reader","nextField","isEndGroup","getFieldNumber","readString","readFloat","readInt32","readEnum","skipField","writeString","writeFloat","writeInt32","writeEnum","Object","defineProperty","prototype","_t2sPipelineId","_text","_lengthScale","_noiseScale","_sampleRate","_pcm","_audioFormat","toObject","toJSON","SynthesizeResponse","audio","generationTime","audioLength","Uint8Array","readBytes","length","writeBytes","_audio","_generationTime","_audioLength","subarray","ListT2sPipelinesRequest","languages","slice","speakerSexes","pipelineOwners","speakerNames","domains","push","writeRepeatedString","_languages","_speakerSexes","_pipelineOwners","_speakerNames","_domains","ListT2sPipelinesResponse","pipelines","map","m","Text2SpeechConfig","messageInitializer1","readMessage","writeRepeatedMessage","_pipelines","T2sPipelineId","id","_id","description","Description","undefined","active","inference","Inference","normalization","Normalization","postprocessing","Postprocessing","readBool","writeMessage","writeBool","_description","_active","_inference","_normalization","_postprocessing","language","speakerSex","pipelineOwner","comments","speakerName","domain","_language","_speakerSex","_pipelineOwner","_comments","_speakerName","_domain","type","compositeInference","CompositeInference","caching","Caching","_type","_compositeInference","_caching","text2mel","Text2Mel","mel2audio","Mel2Audio","_text2mel","_mel2audio","glowTts","GlowTTS","glowTtsTriton","GlowTTSTriton","_glowTts","_glowTtsTriton","batchSize","useGpu","path","cleaners","paramConfigPath","readInt64String","writeInt64String","_batchSize","_useGpu","_path","_cleaners","_paramConfigPath","maxTextLength","tritonUrl","tritonModelName","_maxTextLength","_tritonUrl","_tritonModelName","mbMelganTriton","MbMelganTriton","hifiGan","HiFiGan","hifiGanTriton","HiFiGanTriton","_mbMelganTriton","_hifiGan","_hifiGanTriton","configPath","modelPath","_configPath","_modelPath","statsPath","_statsPath","memoryCacheMaxSize","samplingRate","loadCache","saveCache","cacheSaveDir","_memoryCacheMaxSize","_samplingRate","_loadCache","_saveCache","_cacheSaveDir","pipeline","_pipeline","silenceSecs","logmmse","Logmnse","wiener","Wiener","apodization","Apodization","_silenceSecs","_logmmse","_wiener","_apodization","initialNoise","windowSize","noiseThreshold","_initialNoise","_windowSize","_noiseThreshold","frameLen","lpcOrder","iterations","alpha","thresh","_frameLen","_lpcOrder","_iterations","_alpha","_thresh","apodizationSecs","_apodizationSecs","Empty","GRPC_TEXT2_SPEECH_CLIENT_SETTINGS","InjectionToken","Text2SpeechClient","settings","clientFactory","handler","client","createClient","synthesize","requestData","requestMetadata","synthesize$eventStream","pipe","throwStatusErrors","takeMessages","handle","GrpcCallType","unary","requestClass","thisProto.SynthesizeRequest","responseClass","thisProto.SynthesizeResponse","getT2sPipeline","getT2sPipeline$eventStream","thisProto.T2sPipelineId","thisProto.Text2SpeechConfig","createT2sPipeline","createT2sPipeline$eventStream","deleteT2sPipeline","deleteT2sPipeline$eventStream","googleProtobuf000.Empty","updateT2sPipeline","updateT2sPipeline$eventStream","listT2sPipelines","listT2sPipelines$eventStream","thisProto.ListT2sPipelinesRequest","thisProto.ListT2sPipelinesResponse","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nexport enum AudioFormat {\n  wav = 0,\n  flac = 1,\n  caf = 2,\n  mp3 = 3,\n  aac = 4,\n  ogg = 5,\n  wma = 6\n}\nexport class SynthesizeRequest implements GrpcMessage {\n  static toBinary(instance: SynthesizeRequest) {\n    const writer = new BinaryWriter();\n    SynthesizeRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new SynthesizeRequest();\n    SynthesizeRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: SynthesizeRequest) {\n    instance.t2sPipelineId = instance.t2sPipelineId || '';\n    instance.text = instance.text || '';\n    instance.lengthScale = instance.lengthScale || 0;\n    instance.noiseScale = instance.noiseScale || 0;\n    instance.sampleRate = instance.sampleRate || 0;\n    instance.pcm = instance.pcm || 0;\n    instance.audioFormat = instance.audioFormat || 0;\n  }\n\n  static fromBinaryReader(instance: SynthesizeRequest, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.t2sPipelineId = reader.readString();\n          break;\n        case 2:\n          instance.text = reader.readString();\n          break;\n        case 3:\n          instance.lengthScale = reader.readFloat();\n          break;\n        case 4:\n          instance.noiseScale = reader.readFloat();\n          break;\n        case 5:\n          instance.sampleRate = reader.readInt32();\n          break;\n        case 6:\n          instance.pcm = reader.readEnum();\n          break;\n        case 7:\n          instance.audioFormat = reader.readEnum();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    SynthesizeRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: SynthesizeRequest, writer: BinaryWriter) {\n    if (instance.t2sPipelineId) {\n      writer.writeString(1, instance.t2sPipelineId);\n    }\n    if (instance.text) {\n      writer.writeString(2, instance.text);\n    }\n    if (instance.lengthScale) {\n      writer.writeFloat(3, instance.lengthScale);\n    }\n    if (instance.noiseScale) {\n      writer.writeFloat(4, instance.noiseScale);\n    }\n    if (instance.sampleRate) {\n      writer.writeInt32(5, instance.sampleRate);\n    }\n    if (instance.pcm) {\n      writer.writeEnum(6, instance.pcm);\n    }\n    if (instance.audioFormat) {\n      writer.writeEnum(7, instance.audioFormat);\n    }\n  }\n\n  private _t2sPipelineId?: string;\n  private _text?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _sampleRate?: number;\n  private _pcm?: SynthesizeRequest.Pcm;\n  private _audioFormat?: AudioFormat;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param SynthesizeRequest value\n   */\n  constructor(value?: RecursivePartial<SynthesizeRequest>) {\n    value = value || {};\n    this.t2sPipelineId = value.t2sPipelineId;\n    this.text = value.text;\n    this.lengthScale = value.lengthScale;\n    this.noiseScale = value.noiseScale;\n    this.sampleRate = value.sampleRate;\n    this.pcm = value.pcm;\n    this.audioFormat = value.audioFormat;\n    SynthesizeRequest.refineValues(this);\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    this._sampleRate = value;\n  }\n  get pcm(): SynthesizeRequest.Pcm | undefined {\n    return this._pcm;\n  }\n  set pcm(value: SynthesizeRequest.Pcm | undefined) {\n    this._pcm = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    this._audioFormat = value;\n  }\n  toObject() {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      text: this.text,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      sampleRate: this.sampleRate,\n      pcm: this.pcm,\n      audioFormat: this.audioFormat\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module SynthesizeRequest {\n  export enum Pcm {\n    pcm16 = 0,\n    pcm24 = 1,\n    pcm32 = 2,\n    pcmS8 = 3,\n    pcmU8 = 4,\n    float = 5,\n    double = 6\n  }\n}\nexport class SynthesizeResponse implements GrpcMessage {\n  static toBinary(instance: SynthesizeResponse) {\n    const writer = new BinaryWriter();\n    SynthesizeResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new SynthesizeResponse();\n    SynthesizeResponse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: SynthesizeResponse) {\n    instance.audio = instance.audio || new Uint8Array();\n    instance.generationTime = instance.generationTime || 0;\n    instance.audioLength = instance.audioLength || 0;\n    instance.t2sPipelineId = instance.t2sPipelineId || '';\n    instance.audioFormat = instance.audioFormat || 0;\n    instance.text = instance.text || '';\n    instance.sampleRate = instance.sampleRate || 0;\n  }\n\n  static fromBinaryReader(instance: SynthesizeResponse, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.audio = reader.readBytes();\n          break;\n        case 2:\n          instance.generationTime = reader.readFloat();\n          break;\n        case 3:\n          instance.audioLength = reader.readFloat();\n          break;\n        case 4:\n          instance.t2sPipelineId = reader.readString();\n          break;\n        case 5:\n          instance.audioFormat = reader.readEnum();\n          break;\n        case 6:\n          instance.text = reader.readString();\n          break;\n        case 7:\n          instance.sampleRate = reader.readInt32();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    SynthesizeResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: SynthesizeResponse, writer: BinaryWriter) {\n    if (instance.audio && instance.audio.length) {\n      writer.writeBytes(1, instance.audio);\n    }\n    if (instance.generationTime) {\n      writer.writeFloat(2, instance.generationTime);\n    }\n    if (instance.audioLength) {\n      writer.writeFloat(3, instance.audioLength);\n    }\n    if (instance.t2sPipelineId) {\n      writer.writeString(4, instance.t2sPipelineId);\n    }\n    if (instance.audioFormat) {\n      writer.writeEnum(5, instance.audioFormat);\n    }\n    if (instance.text) {\n      writer.writeString(6, instance.text);\n    }\n    if (instance.sampleRate) {\n      writer.writeInt32(7, instance.sampleRate);\n    }\n  }\n\n  private _audio?: Uint8Array;\n  private _generationTime?: number;\n  private _audioLength?: number;\n  private _t2sPipelineId?: string;\n  private _audioFormat?: AudioFormat;\n  private _text?: string;\n  private _sampleRate?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param SynthesizeResponse value\n   */\n  constructor(value?: RecursivePartial<SynthesizeResponse>) {\n    value = value || {};\n    this.audio = value.audio;\n    this.generationTime = value.generationTime;\n    this.audioLength = value.audioLength;\n    this.t2sPipelineId = value.t2sPipelineId;\n    this.audioFormat = value.audioFormat;\n    this.text = value.text;\n    this.sampleRate = value.sampleRate;\n    SynthesizeResponse.refineValues(this);\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get generationTime(): number | undefined {\n    return this._generationTime;\n  }\n  set generationTime(value: number | undefined) {\n    this._generationTime = value;\n  }\n  get audioLength(): number | undefined {\n    return this._audioLength;\n  }\n  set audioLength(value: number | undefined) {\n    this._audioLength = value;\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    this._audioFormat = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    this._sampleRate = value;\n  }\n  toObject() {\n    return {\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      t2sPipelineId: this.t2sPipelineId,\n      audioFormat: this.audioFormat,\n      text: this.text,\n      sampleRate: this.sampleRate\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module SynthesizeResponse {}\nexport class ListT2sPipelinesRequest implements GrpcMessage {\n  static toBinary(instance: ListT2sPipelinesRequest) {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesRequest.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesRequest();\n    ListT2sPipelinesRequest.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: ListT2sPipelinesRequest) {\n    instance.languages = instance.languages || [];\n    instance.speakerSexes = instance.speakerSexes || [];\n    instance.pipelineOwners = instance.pipelineOwners || [];\n    instance.speakerNames = instance.speakerNames || [];\n    instance.domains = instance.domains || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListT2sPipelinesRequest,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          (instance.languages = instance.languages || []).push(\n            reader.readString()\n          );\n          break;\n        case 2:\n          (instance.speakerSexes = instance.speakerSexes || []).push(\n            reader.readString()\n          );\n          break;\n        case 3:\n          (instance.pipelineOwners = instance.pipelineOwners || []).push(\n            reader.readString()\n          );\n          break;\n        case 4:\n          (instance.speakerNames = instance.speakerNames || []).push(\n            reader.readString()\n          );\n          break;\n        case 5:\n          (instance.domains = instance.domains || []).push(reader.readString());\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesRequest.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListT2sPipelinesRequest,\n    writer: BinaryWriter\n  ) {\n    if (instance.languages && instance.languages.length) {\n      writer.writeRepeatedString(1, instance.languages);\n    }\n    if (instance.speakerSexes && instance.speakerSexes.length) {\n      writer.writeRepeatedString(2, instance.speakerSexes);\n    }\n    if (instance.pipelineOwners && instance.pipelineOwners.length) {\n      writer.writeRepeatedString(3, instance.pipelineOwners);\n    }\n    if (instance.speakerNames && instance.speakerNames.length) {\n      writer.writeRepeatedString(4, instance.speakerNames);\n    }\n    if (instance.domains && instance.domains.length) {\n      writer.writeRepeatedString(5, instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListT2sPipelinesRequest value\n   */\n  constructor(value?: RecursivePartial<ListT2sPipelinesRequest>) {\n    value = value || {};\n    this.languages = (value.languages || []).slice();\n    this.speakerSexes = (value.speakerSexes || []).slice();\n    this.pipelineOwners = (value.pipelineOwners || []).slice();\n    this.speakerNames = (value.speakerNames || []).slice();\n    this.domains = (value.domains || []).slice();\n    ListT2sPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n  toObject() {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListT2sPipelinesRequest {}\nexport class ListT2sPipelinesResponse implements GrpcMessage {\n  static toBinary(instance: ListT2sPipelinesResponse) {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesResponse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesResponse();\n    ListT2sPipelinesResponse.fromBinaryReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  static refineValues(instance: ListT2sPipelinesResponse) {\n    instance.pipelines = instance.pipelines || [];\n  }\n\n  static fromBinaryReader(\n    instance: ListT2sPipelinesResponse,\n    reader: BinaryReader\n  ) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Text2SpeechConfig();\n          reader.readMessage(\n            messageInitializer1,\n            Text2SpeechConfig.fromBinaryReader\n          );\n          (instance.pipelines = instance.pipelines || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesResponse.refineValues(instance);\n  }\n\n  static toBinaryWriter(\n    instance: ListT2sPipelinesResponse,\n    writer: BinaryWriter\n  ) {\n    if (instance.pipelines && instance.pipelines.length) {\n      writer.writeRepeatedMessage(\n        1,\n        instance.pipelines as any,\n        Text2SpeechConfig.toBinaryWriter\n      );\n    }\n  }\n\n  private _pipelines?: Text2SpeechConfig[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param ListT2sPipelinesResponse value\n   */\n  constructor(value?: RecursivePartial<ListT2sPipelinesResponse>) {\n    value = value || {};\n    this.pipelines = (value.pipelines || []).map(m => new Text2SpeechConfig(m));\n    ListT2sPipelinesResponse.refineValues(this);\n  }\n  get pipelines(): Text2SpeechConfig[] | undefined {\n    return this._pipelines;\n  }\n  set pipelines(value: Text2SpeechConfig[] | undefined) {\n    this._pipelines = value;\n  }\n  toObject() {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toObject())\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module ListT2sPipelinesResponse {}\nexport class T2sPipelineId implements GrpcMessage {\n  static toBinary(instance: T2sPipelineId) {\n    const writer = new BinaryWriter();\n    T2sPipelineId.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new T2sPipelineId();\n    T2sPipelineId.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: T2sPipelineId) {\n    instance.id = instance.id || '';\n  }\n\n  static fromBinaryReader(instance: T2sPipelineId, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    T2sPipelineId.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: T2sPipelineId, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param T2sPipelineId value\n   */\n  constructor(value?: RecursivePartial<T2sPipelineId>) {\n    value = value || {};\n    this.id = value.id;\n    T2sPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  toObject() {\n    return {\n      id: this.id\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module T2sPipelineId {}\nexport class Text2SpeechConfig implements GrpcMessage {\n  static toBinary(instance: Text2SpeechConfig) {\n    const writer = new BinaryWriter();\n    Text2SpeechConfig.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Text2SpeechConfig();\n    Text2SpeechConfig.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Text2SpeechConfig) {\n    instance.id = instance.id || '';\n    instance.description = instance.description || undefined;\n    instance.active = instance.active || false;\n    instance.inference = instance.inference || undefined;\n    instance.normalization = instance.normalization || undefined;\n    instance.postprocessing = instance.postprocessing || undefined;\n  }\n\n  static fromBinaryReader(instance: Text2SpeechConfig, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.id = reader.readString();\n          break;\n        case 2:\n          instance.description = new Description();\n          reader.readMessage(\n            instance.description,\n            Description.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.active = reader.readBool();\n          break;\n        case 4:\n          instance.inference = new Inference();\n          reader.readMessage(instance.inference, Inference.fromBinaryReader);\n          break;\n        case 5:\n          instance.normalization = new Normalization();\n          reader.readMessage(\n            instance.normalization,\n            Normalization.fromBinaryReader\n          );\n          break;\n        case 6:\n          instance.postprocessing = new Postprocessing();\n          reader.readMessage(\n            instance.postprocessing,\n            Postprocessing.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Text2SpeechConfig.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Text2SpeechConfig, writer: BinaryWriter) {\n    if (instance.id) {\n      writer.writeString(1, instance.id);\n    }\n    if (instance.description) {\n      writer.writeMessage(\n        2,\n        instance.description as any,\n        Description.toBinaryWriter\n      );\n    }\n    if (instance.active) {\n      writer.writeBool(3, instance.active);\n    }\n    if (instance.inference) {\n      writer.writeMessage(\n        4,\n        instance.inference as any,\n        Inference.toBinaryWriter\n      );\n    }\n    if (instance.normalization) {\n      writer.writeMessage(\n        5,\n        instance.normalization as any,\n        Normalization.toBinaryWriter\n      );\n    }\n    if (instance.postprocessing) {\n      writer.writeMessage(\n        6,\n        instance.postprocessing as any,\n        Postprocessing.toBinaryWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _normalization?: Normalization;\n  private _postprocessing?: Postprocessing;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Text2SpeechConfig value\n   */\n  constructor(value?: RecursivePartial<Text2SpeechConfig>) {\n    value = value || {};\n    this.id = value.id;\n    this.description = value.description\n      ? new Description(value.description)\n      : undefined;\n    this.active = value.active;\n    this.inference = value.inference\n      ? new Inference(value.inference)\n      : undefined;\n    this.normalization = value.normalization\n      ? new Normalization(value.normalization)\n      : undefined;\n    this.postprocessing = value.postprocessing\n      ? new Postprocessing(value.postprocessing)\n      : undefined;\n    Text2SpeechConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n  get postprocessing(): Postprocessing | undefined {\n    return this._postprocessing;\n  }\n  set postprocessing(value: Postprocessing | undefined) {\n    this._postprocessing = value;\n  }\n  toObject() {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Text2SpeechConfig {}\nexport class Description implements GrpcMessage {\n  static toBinary(instance: Description) {\n    const writer = new BinaryWriter();\n    Description.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Description) {\n    instance.language = instance.language || '';\n    instance.speakerSex = instance.speakerSex || '';\n    instance.pipelineOwner = instance.pipelineOwner || '';\n    instance.comments = instance.comments || '';\n    instance.speakerName = instance.speakerName || '';\n    instance.domain = instance.domain || '';\n  }\n\n  static fromBinaryReader(instance: Description, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        case 2:\n          instance.speakerSex = reader.readString();\n          break;\n        case 3:\n          instance.pipelineOwner = reader.readString();\n          break;\n        case 4:\n          instance.comments = reader.readString();\n          break;\n        case 5:\n          instance.speakerName = reader.readString();\n          break;\n        case 6:\n          instance.domain = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Description.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Description, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n    if (instance.speakerSex) {\n      writer.writeString(2, instance.speakerSex);\n    }\n    if (instance.pipelineOwner) {\n      writer.writeString(3, instance.pipelineOwner);\n    }\n    if (instance.comments) {\n      writer.writeString(4, instance.comments);\n    }\n    if (instance.speakerName) {\n      writer.writeString(5, instance.speakerName);\n    }\n    if (instance.domain) {\n      writer.writeString(6, instance.domain);\n    }\n  }\n\n  private _language?: string;\n  private _speakerSex?: string;\n  private _pipelineOwner?: string;\n  private _comments?: string;\n  private _speakerName?: string;\n  private _domain?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Description value\n   */\n  constructor(value?: RecursivePartial<Description>) {\n    value = value || {};\n    this.language = value.language;\n    this.speakerSex = value.speakerSex;\n    this.pipelineOwner = value.pipelineOwner;\n    this.comments = value.comments;\n    this.speakerName = value.speakerName;\n    this.domain = value.domain;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get speakerSex(): string | undefined {\n    return this._speakerSex;\n  }\n  set speakerSex(value: string | undefined) {\n    this._speakerSex = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n  get speakerName(): string | undefined {\n    return this._speakerName;\n  }\n  set speakerName(value: string | undefined) {\n    this._speakerName = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n  toObject() {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Description {}\nexport class Inference implements GrpcMessage {\n  static toBinary(instance: Inference) {\n    const writer = new BinaryWriter();\n    Inference.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Inference) {\n    instance.type = instance.type || '';\n    instance.compositeInference = instance.compositeInference || undefined;\n    instance.caching = instance.caching || undefined;\n  }\n\n  static fromBinaryReader(instance: Inference, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.compositeInference = new CompositeInference();\n          reader.readMessage(\n            instance.compositeInference,\n            CompositeInference.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.caching = new Caching();\n          reader.readMessage(instance.caching, Caching.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Inference.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Inference, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.compositeInference) {\n      writer.writeMessage(\n        2,\n        instance.compositeInference as any,\n        CompositeInference.toBinaryWriter\n      );\n    }\n    if (instance.caching) {\n      writer.writeMessage(3, instance.caching as any, Caching.toBinaryWriter);\n    }\n  }\n\n  private _type?: string;\n  private _compositeInference?: CompositeInference;\n  private _caching?: Caching;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Inference value\n   */\n  constructor(value?: RecursivePartial<Inference>) {\n    value = value || {};\n    this.type = value.type;\n    this.compositeInference = value.compositeInference\n      ? new CompositeInference(value.compositeInference)\n      : undefined;\n    this.caching = value.caching ? new Caching(value.caching) : undefined;\n    Inference.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get compositeInference(): CompositeInference | undefined {\n    return this._compositeInference;\n  }\n  set compositeInference(value: CompositeInference | undefined) {\n    this._compositeInference = value;\n  }\n  get caching(): Caching | undefined {\n    return this._caching;\n  }\n  set caching(value: Caching | undefined) {\n    this._caching = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toObject()\n        : undefined,\n      caching: this.caching ? this.caching.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Inference {}\nexport class CompositeInference implements GrpcMessage {\n  static toBinary(instance: CompositeInference) {\n    const writer = new BinaryWriter();\n    CompositeInference.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new CompositeInference();\n    CompositeInference.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: CompositeInference) {\n    instance.text2mel = instance.text2mel || undefined;\n    instance.mel2audio = instance.mel2audio || undefined;\n  }\n\n  static fromBinaryReader(instance: CompositeInference, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.text2mel = new Text2Mel();\n          reader.readMessage(instance.text2mel, Text2Mel.fromBinaryReader);\n          break;\n        case 2:\n          instance.mel2audio = new Mel2Audio();\n          reader.readMessage(instance.mel2audio, Mel2Audio.fromBinaryReader);\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    CompositeInference.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: CompositeInference, writer: BinaryWriter) {\n    if (instance.text2mel) {\n      writer.writeMessage(1, instance.text2mel as any, Text2Mel.toBinaryWriter);\n    }\n    if (instance.mel2audio) {\n      writer.writeMessage(\n        2,\n        instance.mel2audio as any,\n        Mel2Audio.toBinaryWriter\n      );\n    }\n  }\n\n  private _text2mel?: Text2Mel;\n  private _mel2audio?: Mel2Audio;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param CompositeInference value\n   */\n  constructor(value?: RecursivePartial<CompositeInference>) {\n    value = value || {};\n    this.text2mel = value.text2mel ? new Text2Mel(value.text2mel) : undefined;\n    this.mel2audio = value.mel2audio\n      ? new Mel2Audio(value.mel2audio)\n      : undefined;\n    CompositeInference.refineValues(this);\n  }\n  get text2mel(): Text2Mel | undefined {\n    return this._text2mel;\n  }\n  set text2mel(value: Text2Mel | undefined) {\n    this._text2mel = value;\n  }\n  get mel2audio(): Mel2Audio | undefined {\n    return this._mel2audio;\n  }\n  set mel2audio(value: Mel2Audio | undefined) {\n    this._mel2audio = value;\n  }\n  toObject() {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toObject() : undefined,\n      mel2audio: this.mel2audio ? this.mel2audio.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module CompositeInference {}\nexport class Text2Mel implements GrpcMessage {\n  static toBinary(instance: Text2Mel) {\n    const writer = new BinaryWriter();\n    Text2Mel.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Text2Mel();\n    Text2Mel.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Text2Mel) {\n    instance.type = instance.type || '';\n    instance.glowTts = instance.glowTts || undefined;\n    instance.glowTtsTriton = instance.glowTtsTriton || undefined;\n  }\n\n  static fromBinaryReader(instance: Text2Mel, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 3:\n          instance.glowTts = new GlowTTS();\n          reader.readMessage(instance.glowTts, GlowTTS.fromBinaryReader);\n          break;\n        case 4:\n          instance.glowTtsTriton = new GlowTTSTriton();\n          reader.readMessage(\n            instance.glowTtsTriton,\n            GlowTTSTriton.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Text2Mel.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Text2Mel, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.glowTts) {\n      writer.writeMessage(3, instance.glowTts as any, GlowTTS.toBinaryWriter);\n    }\n    if (instance.glowTtsTriton) {\n      writer.writeMessage(\n        4,\n        instance.glowTtsTriton as any,\n        GlowTTSTriton.toBinaryWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _glowTts?: GlowTTS;\n  private _glowTtsTriton?: GlowTTSTriton;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Text2Mel value\n   */\n  constructor(value?: RecursivePartial<Text2Mel>) {\n    value = value || {};\n    this.type = value.type;\n    this.glowTts = value.glowTts ? new GlowTTS(value.glowTts) : undefined;\n    this.glowTtsTriton = value.glowTtsTriton\n      ? new GlowTTSTriton(value.glowTtsTriton)\n      : undefined;\n    Text2Mel.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get glowTts(): GlowTTS | undefined {\n    return this._glowTts;\n  }\n  set glowTts(value: GlowTTS | undefined) {\n    this._glowTts = value;\n  }\n  get glowTtsTriton(): GlowTTSTriton | undefined {\n    return this._glowTtsTriton;\n  }\n  set glowTtsTriton(value: GlowTTSTriton | undefined) {\n    this._glowTtsTriton = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toObject() : undefined,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Text2Mel {}\nexport class GlowTTS implements GrpcMessage {\n  static toBinary(instance: GlowTTS) {\n    const writer = new BinaryWriter();\n    GlowTTS.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new GlowTTS();\n    GlowTTS.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: GlowTTS) {\n    instance.batchSize = instance.batchSize || '0';\n    instance.useGpu = instance.useGpu || false;\n    instance.lengthScale = instance.lengthScale || 0;\n    instance.noiseScale = instance.noiseScale || 0;\n    instance.path = instance.path || '';\n    instance.cleaners = instance.cleaners || [];\n    instance.paramConfigPath = instance.paramConfigPath || '';\n  }\n\n  static fromBinaryReader(instance: GlowTTS, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.batchSize = reader.readInt64String();\n          break;\n        case 2:\n          instance.useGpu = reader.readBool();\n          break;\n        case 3:\n          instance.lengthScale = reader.readFloat();\n          break;\n        case 4:\n          instance.noiseScale = reader.readFloat();\n          break;\n        case 5:\n          instance.path = reader.readString();\n          break;\n        case 6:\n          (instance.cleaners = instance.cleaners || []).push(\n            reader.readString()\n          );\n          break;\n        case 7:\n          instance.paramConfigPath = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    GlowTTS.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: GlowTTS, writer: BinaryWriter) {\n    if (instance.batchSize) {\n      writer.writeInt64String(1, instance.batchSize);\n    }\n    if (instance.useGpu) {\n      writer.writeBool(2, instance.useGpu);\n    }\n    if (instance.lengthScale) {\n      writer.writeFloat(3, instance.lengthScale);\n    }\n    if (instance.noiseScale) {\n      writer.writeFloat(4, instance.noiseScale);\n    }\n    if (instance.path) {\n      writer.writeString(5, instance.path);\n    }\n    if (instance.cleaners && instance.cleaners.length) {\n      writer.writeRepeatedString(6, instance.cleaners);\n    }\n    if (instance.paramConfigPath) {\n      writer.writeString(7, instance.paramConfigPath);\n    }\n  }\n\n  private _batchSize?: string;\n  private _useGpu?: boolean;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _path?: string;\n  private _cleaners?: string[];\n  private _paramConfigPath?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param GlowTTS value\n   */\n  constructor(value?: RecursivePartial<GlowTTS>) {\n    value = value || {};\n    this.batchSize = value.batchSize;\n    this.useGpu = value.useGpu;\n    this.lengthScale = value.lengthScale;\n    this.noiseScale = value.noiseScale;\n    this.path = value.path;\n    this.cleaners = (value.cleaners || []).slice();\n    this.paramConfigPath = value.paramConfigPath;\n    GlowTTS.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n  toObject() {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module GlowTTS {}\nexport class GlowTTSTriton implements GrpcMessage {\n  static toBinary(instance: GlowTTSTriton) {\n    const writer = new BinaryWriter();\n    GlowTTSTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new GlowTTSTriton();\n    GlowTTSTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: GlowTTSTriton) {\n    instance.batchSize = instance.batchSize || '0';\n    instance.lengthScale = instance.lengthScale || 0;\n    instance.noiseScale = instance.noiseScale || 0;\n    instance.cleaners = instance.cleaners || [];\n    instance.maxTextLength = instance.maxTextLength || '0';\n    instance.paramConfigPath = instance.paramConfigPath || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n    instance.tritonModelName = instance.tritonModelName || '';\n  }\n\n  static fromBinaryReader(instance: GlowTTSTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.batchSize = reader.readInt64String();\n          break;\n        case 2:\n          instance.lengthScale = reader.readFloat();\n          break;\n        case 3:\n          instance.noiseScale = reader.readFloat();\n          break;\n        case 4:\n          (instance.cleaners = instance.cleaners || []).push(\n            reader.readString()\n          );\n          break;\n        case 5:\n          instance.maxTextLength = reader.readInt64String();\n          break;\n        case 6:\n          instance.paramConfigPath = reader.readString();\n          break;\n        case 7:\n          instance.tritonUrl = reader.readString();\n          break;\n        case 8:\n          instance.tritonModelName = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    GlowTTSTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: GlowTTSTriton, writer: BinaryWriter) {\n    if (instance.batchSize) {\n      writer.writeInt64String(1, instance.batchSize);\n    }\n    if (instance.lengthScale) {\n      writer.writeFloat(2, instance.lengthScale);\n    }\n    if (instance.noiseScale) {\n      writer.writeFloat(3, instance.noiseScale);\n    }\n    if (instance.cleaners && instance.cleaners.length) {\n      writer.writeRepeatedString(4, instance.cleaners);\n    }\n    if (instance.maxTextLength) {\n      writer.writeInt64String(5, instance.maxTextLength);\n    }\n    if (instance.paramConfigPath) {\n      writer.writeString(6, instance.paramConfigPath);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(7, instance.tritonUrl);\n    }\n    if (instance.tritonModelName) {\n      writer.writeString(8, instance.tritonModelName);\n    }\n  }\n\n  private _batchSize?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _cleaners?: string[];\n  private _maxTextLength?: string;\n  private _paramConfigPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModelName?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param GlowTTSTriton value\n   */\n  constructor(value?: RecursivePartial<GlowTTSTriton>) {\n    value = value || {};\n    this.batchSize = value.batchSize;\n    this.lengthScale = value.lengthScale;\n    this.noiseScale = value.noiseScale;\n    this.cleaners = (value.cleaners || []).slice();\n    this.maxTextLength = value.maxTextLength;\n    this.paramConfigPath = value.paramConfigPath;\n    this.tritonUrl = value.tritonUrl;\n    this.tritonModelName = value.tritonModelName;\n    GlowTTSTriton.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get maxTextLength(): string | undefined {\n    return this._maxTextLength;\n  }\n  set maxTextLength(value: string | undefined) {\n    this._maxTextLength = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  toObject() {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonUrl: this.tritonUrl,\n      tritonModelName: this.tritonModelName\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module GlowTTSTriton {}\nexport class Mel2Audio implements GrpcMessage {\n  static toBinary(instance: Mel2Audio) {\n    const writer = new BinaryWriter();\n    Mel2Audio.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Mel2Audio();\n    Mel2Audio.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Mel2Audio) {\n    instance.type = instance.type || '';\n    instance.mbMelganTriton = instance.mbMelganTriton || undefined;\n    instance.hifiGan = instance.hifiGan || undefined;\n    instance.hifiGanTriton = instance.hifiGanTriton || undefined;\n  }\n\n  static fromBinaryReader(instance: Mel2Audio, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.type = reader.readString();\n          break;\n        case 2:\n          instance.mbMelganTriton = new MbMelganTriton();\n          reader.readMessage(\n            instance.mbMelganTriton,\n            MbMelganTriton.fromBinaryReader\n          );\n          break;\n        case 3:\n          instance.hifiGan = new HiFiGan();\n          reader.readMessage(instance.hifiGan, HiFiGan.fromBinaryReader);\n          break;\n        case 4:\n          instance.hifiGanTriton = new HiFiGanTriton();\n          reader.readMessage(\n            instance.hifiGanTriton,\n            HiFiGanTriton.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Mel2Audio.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Mel2Audio, writer: BinaryWriter) {\n    if (instance.type) {\n      writer.writeString(1, instance.type);\n    }\n    if (instance.mbMelganTriton) {\n      writer.writeMessage(\n        2,\n        instance.mbMelganTriton as any,\n        MbMelganTriton.toBinaryWriter\n      );\n    }\n    if (instance.hifiGan) {\n      writer.writeMessage(3, instance.hifiGan as any, HiFiGan.toBinaryWriter);\n    }\n    if (instance.hifiGanTriton) {\n      writer.writeMessage(\n        4,\n        instance.hifiGanTriton as any,\n        HiFiGanTriton.toBinaryWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _mbMelganTriton?: MbMelganTriton;\n  private _hifiGan?: HiFiGan;\n  private _hifiGanTriton?: HiFiGanTriton;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Mel2Audio value\n   */\n  constructor(value?: RecursivePartial<Mel2Audio>) {\n    value = value || {};\n    this.type = value.type;\n    this.mbMelganTriton = value.mbMelganTriton\n      ? new MbMelganTriton(value.mbMelganTriton)\n      : undefined;\n    this.hifiGan = value.hifiGan ? new HiFiGan(value.hifiGan) : undefined;\n    this.hifiGanTriton = value.hifiGanTriton\n      ? new HiFiGanTriton(value.hifiGanTriton)\n      : undefined;\n    Mel2Audio.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get mbMelganTriton(): MbMelganTriton | undefined {\n    return this._mbMelganTriton;\n  }\n  set mbMelganTriton(value: MbMelganTriton | undefined) {\n    this._mbMelganTriton = value;\n  }\n  get hifiGan(): HiFiGan | undefined {\n    return this._hifiGan;\n  }\n  set hifiGan(value: HiFiGan | undefined) {\n    this._hifiGan = value;\n  }\n  get hifiGanTriton(): HiFiGanTriton | undefined {\n    return this._hifiGanTriton;\n  }\n  set hifiGanTriton(value: HiFiGanTriton | undefined) {\n    this._hifiGanTriton = value;\n  }\n  toObject() {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toObject()\n        : undefined,\n      hifiGan: this.hifiGan ? this.hifiGan.toObject() : undefined,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toObject()\n        : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Mel2Audio {}\nexport class HiFiGan implements GrpcMessage {\n  static toBinary(instance: HiFiGan) {\n    const writer = new BinaryWriter();\n    HiFiGan.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new HiFiGan();\n    HiFiGan.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: HiFiGan) {\n    instance.useGpu = instance.useGpu || false;\n    instance.batchSize = instance.batchSize || '0';\n    instance.configPath = instance.configPath || '';\n    instance.modelPath = instance.modelPath || '';\n  }\n\n  static fromBinaryReader(instance: HiFiGan, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.useGpu = reader.readBool();\n          break;\n        case 2:\n          instance.batchSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.configPath = reader.readString();\n          break;\n        case 4:\n          instance.modelPath = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    HiFiGan.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: HiFiGan, writer: BinaryWriter) {\n    if (instance.useGpu) {\n      writer.writeBool(1, instance.useGpu);\n    }\n    if (instance.batchSize) {\n      writer.writeInt64String(2, instance.batchSize);\n    }\n    if (instance.configPath) {\n      writer.writeString(3, instance.configPath);\n    }\n    if (instance.modelPath) {\n      writer.writeString(4, instance.modelPath);\n    }\n  }\n\n  private _useGpu?: boolean;\n  private _batchSize?: string;\n  private _configPath?: string;\n  private _modelPath?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param HiFiGan value\n   */\n  constructor(value?: RecursivePartial<HiFiGan>) {\n    value = value || {};\n    this.useGpu = value.useGpu;\n    this.batchSize = value.batchSize;\n    this.configPath = value.configPath;\n    this.modelPath = value.modelPath;\n    HiFiGan.refineValues(this);\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n  toObject() {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module HiFiGan {}\nexport class HiFiGanTriton implements GrpcMessage {\n  static toBinary(instance: HiFiGanTriton) {\n    const writer = new BinaryWriter();\n    HiFiGanTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new HiFiGanTriton();\n    HiFiGanTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: HiFiGanTriton) {\n    instance.configPath = instance.configPath || '';\n    instance.tritonModelName = instance.tritonModelName || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n  }\n\n  static fromBinaryReader(instance: HiFiGanTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.tritonModelName = reader.readString();\n          break;\n        case 3:\n          instance.tritonUrl = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    HiFiGanTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: HiFiGanTriton, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.tritonModelName) {\n      writer.writeString(2, instance.tritonModelName);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(3, instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param HiFiGanTriton value\n   */\n  constructor(value?: RecursivePartial<HiFiGanTriton>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.tritonModelName = value.tritonModelName;\n    this.tritonUrl = value.tritonUrl;\n    HiFiGanTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module HiFiGanTriton {}\nexport class MbMelganTriton implements GrpcMessage {\n  static toBinary(instance: MbMelganTriton) {\n    const writer = new BinaryWriter();\n    MbMelganTriton.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new MbMelganTriton();\n    MbMelganTriton.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: MbMelganTriton) {\n    instance.configPath = instance.configPath || '';\n    instance.statsPath = instance.statsPath || '';\n    instance.tritonModelName = instance.tritonModelName || '';\n    instance.tritonUrl = instance.tritonUrl || '';\n  }\n\n  static fromBinaryReader(instance: MbMelganTriton, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.configPath = reader.readString();\n          break;\n        case 2:\n          instance.statsPath = reader.readString();\n          break;\n        case 3:\n          instance.tritonModelName = reader.readString();\n          break;\n        case 4:\n          instance.tritonUrl = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    MbMelganTriton.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: MbMelganTriton, writer: BinaryWriter) {\n    if (instance.configPath) {\n      writer.writeString(1, instance.configPath);\n    }\n    if (instance.statsPath) {\n      writer.writeString(2, instance.statsPath);\n    }\n    if (instance.tritonModelName) {\n      writer.writeString(3, instance.tritonModelName);\n    }\n    if (instance.tritonUrl) {\n      writer.writeString(4, instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _statsPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param MbMelganTriton value\n   */\n  constructor(value?: RecursivePartial<MbMelganTriton>) {\n    value = value || {};\n    this.configPath = value.configPath;\n    this.statsPath = value.statsPath;\n    this.tritonModelName = value.tritonModelName;\n    this.tritonUrl = value.tritonUrl;\n    MbMelganTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get statsPath(): string | undefined {\n    return this._statsPath;\n  }\n  set statsPath(value: string | undefined) {\n    this._statsPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  toObject() {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module MbMelganTriton {}\nexport class Caching implements GrpcMessage {\n  static toBinary(instance: Caching) {\n    const writer = new BinaryWriter();\n    Caching.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Caching();\n    Caching.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Caching) {\n    instance.active = instance.active || false;\n    instance.memoryCacheMaxSize = instance.memoryCacheMaxSize || '0';\n    instance.samplingRate = instance.samplingRate || '0';\n    instance.loadCache = instance.loadCache || false;\n    instance.saveCache = instance.saveCache || false;\n    instance.cacheSaveDir = instance.cacheSaveDir || '';\n  }\n\n  static fromBinaryReader(instance: Caching, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.active = reader.readBool();\n          break;\n        case 2:\n          instance.memoryCacheMaxSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.samplingRate = reader.readInt64String();\n          break;\n        case 4:\n          instance.loadCache = reader.readBool();\n          break;\n        case 5:\n          instance.saveCache = reader.readBool();\n          break;\n        case 6:\n          instance.cacheSaveDir = reader.readString();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Caching.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Caching, writer: BinaryWriter) {\n    if (instance.active) {\n      writer.writeBool(1, instance.active);\n    }\n    if (instance.memoryCacheMaxSize) {\n      writer.writeInt64String(2, instance.memoryCacheMaxSize);\n    }\n    if (instance.samplingRate) {\n      writer.writeInt64String(3, instance.samplingRate);\n    }\n    if (instance.loadCache) {\n      writer.writeBool(4, instance.loadCache);\n    }\n    if (instance.saveCache) {\n      writer.writeBool(5, instance.saveCache);\n    }\n    if (instance.cacheSaveDir) {\n      writer.writeString(6, instance.cacheSaveDir);\n    }\n  }\n\n  private _active?: boolean;\n  private _memoryCacheMaxSize?: string;\n  private _samplingRate?: string;\n  private _loadCache?: boolean;\n  private _saveCache?: boolean;\n  private _cacheSaveDir?: string;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Caching value\n   */\n  constructor(value?: RecursivePartial<Caching>) {\n    value = value || {};\n    this.active = value.active;\n    this.memoryCacheMaxSize = value.memoryCacheMaxSize;\n    this.samplingRate = value.samplingRate;\n    this.loadCache = value.loadCache;\n    this.saveCache = value.saveCache;\n    this.cacheSaveDir = value.cacheSaveDir;\n    Caching.refineValues(this);\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get memoryCacheMaxSize(): string | undefined {\n    return this._memoryCacheMaxSize;\n  }\n  set memoryCacheMaxSize(value: string | undefined) {\n    this._memoryCacheMaxSize = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get loadCache(): boolean | undefined {\n    return this._loadCache;\n  }\n  set loadCache(value: boolean | undefined) {\n    this._loadCache = value;\n  }\n  get saveCache(): boolean | undefined {\n    return this._saveCache;\n  }\n  set saveCache(value: boolean | undefined) {\n    this._saveCache = value;\n  }\n  get cacheSaveDir(): string | undefined {\n    return this._cacheSaveDir;\n  }\n  set cacheSaveDir(value: string | undefined) {\n    this._cacheSaveDir = value;\n  }\n  toObject() {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Caching {}\nexport class Normalization implements GrpcMessage {\n  static toBinary(instance: Normalization) {\n    const writer = new BinaryWriter();\n    Normalization.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Normalization) {\n    instance.language = instance.language || '';\n    instance.pipeline = instance.pipeline || [];\n  }\n\n  static fromBinaryReader(instance: Normalization, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.language = reader.readString();\n          break;\n        case 2:\n          (instance.pipeline = instance.pipeline || []).push(\n            reader.readString()\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Normalization, writer: BinaryWriter) {\n    if (instance.language) {\n      writer.writeString(1, instance.language);\n    }\n    if (instance.pipeline && instance.pipeline.length) {\n      writer.writeRepeatedString(2, instance.pipeline);\n    }\n  }\n\n  private _language?: string;\n  private _pipeline?: string[];\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Normalization value\n   */\n  constructor(value?: RecursivePartial<Normalization>) {\n    value = value || {};\n    this.language = value.language;\n    this.pipeline = (value.pipeline || []).slice();\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  toObject() {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice()\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Normalization {}\nexport class Postprocessing implements GrpcMessage {\n  static toBinary(instance: Postprocessing) {\n    const writer = new BinaryWriter();\n    Postprocessing.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Postprocessing();\n    Postprocessing.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Postprocessing) {\n    instance.silenceSecs = instance.silenceSecs || 0;\n    instance.pipeline = instance.pipeline || [];\n    instance.logmmse = instance.logmmse || undefined;\n    instance.wiener = instance.wiener || undefined;\n    instance.apodization = instance.apodization || undefined;\n  }\n\n  static fromBinaryReader(instance: Postprocessing, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.silenceSecs = reader.readFloat();\n          break;\n        case 2:\n          (instance.pipeline = instance.pipeline || []).push(\n            reader.readString()\n          );\n          break;\n        case 3:\n          instance.logmmse = new Logmnse();\n          reader.readMessage(instance.logmmse, Logmnse.fromBinaryReader);\n          break;\n        case 4:\n          instance.wiener = new Wiener();\n          reader.readMessage(instance.wiener, Wiener.fromBinaryReader);\n          break;\n        case 5:\n          instance.apodization = new Apodization();\n          reader.readMessage(\n            instance.apodization,\n            Apodization.fromBinaryReader\n          );\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Postprocessing.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Postprocessing, writer: BinaryWriter) {\n    if (instance.silenceSecs) {\n      writer.writeFloat(1, instance.silenceSecs);\n    }\n    if (instance.pipeline && instance.pipeline.length) {\n      writer.writeRepeatedString(2, instance.pipeline);\n    }\n    if (instance.logmmse) {\n      writer.writeMessage(3, instance.logmmse as any, Logmnse.toBinaryWriter);\n    }\n    if (instance.wiener) {\n      writer.writeMessage(4, instance.wiener as any, Wiener.toBinaryWriter);\n    }\n    if (instance.apodization) {\n      writer.writeMessage(\n        5,\n        instance.apodization as any,\n        Apodization.toBinaryWriter\n      );\n    }\n  }\n\n  private _silenceSecs?: number;\n  private _pipeline?: string[];\n  private _logmmse?: Logmnse;\n  private _wiener?: Wiener;\n  private _apodization?: Apodization;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Postprocessing value\n   */\n  constructor(value?: RecursivePartial<Postprocessing>) {\n    value = value || {};\n    this.silenceSecs = value.silenceSecs;\n    this.pipeline = (value.pipeline || []).slice();\n    this.logmmse = value.logmmse ? new Logmnse(value.logmmse) : undefined;\n    this.wiener = value.wiener ? new Wiener(value.wiener) : undefined;\n    this.apodization = value.apodization\n      ? new Apodization(value.apodization)\n      : undefined;\n    Postprocessing.refineValues(this);\n  }\n  get silenceSecs(): number | undefined {\n    return this._silenceSecs;\n  }\n  set silenceSecs(value: number | undefined) {\n    this._silenceSecs = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get logmmse(): Logmnse | undefined {\n    return this._logmmse;\n  }\n  set logmmse(value: Logmnse | undefined) {\n    this._logmmse = value;\n  }\n  get wiener(): Wiener | undefined {\n    return this._wiener;\n  }\n  set wiener(value: Wiener | undefined) {\n    this._wiener = value;\n  }\n  get apodization(): Apodization | undefined {\n    return this._apodization;\n  }\n  set apodization(value: Apodization | undefined) {\n    this._apodization = value;\n  }\n  toObject() {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toObject() : undefined,\n      wiener: this.wiener ? this.wiener.toObject() : undefined,\n      apodization: this.apodization ? this.apodization.toObject() : undefined\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Postprocessing {}\nexport class Logmnse implements GrpcMessage {\n  static toBinary(instance: Logmnse) {\n    const writer = new BinaryWriter();\n    Logmnse.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Logmnse();\n    Logmnse.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Logmnse) {\n    instance.initialNoise = instance.initialNoise || '0';\n    instance.windowSize = instance.windowSize || '0';\n    instance.noiseThreshold = instance.noiseThreshold || 0;\n  }\n\n  static fromBinaryReader(instance: Logmnse, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.initialNoise = reader.readInt64String();\n          break;\n        case 2:\n          instance.windowSize = reader.readInt64String();\n          break;\n        case 3:\n          instance.noiseThreshold = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Logmnse.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Logmnse, writer: BinaryWriter) {\n    if (instance.initialNoise) {\n      writer.writeInt64String(1, instance.initialNoise);\n    }\n    if (instance.windowSize) {\n      writer.writeInt64String(2, instance.windowSize);\n    }\n    if (instance.noiseThreshold) {\n      writer.writeFloat(3, instance.noiseThreshold);\n    }\n  }\n\n  private _initialNoise?: string;\n  private _windowSize?: string;\n  private _noiseThreshold?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Logmnse value\n   */\n  constructor(value?: RecursivePartial<Logmnse>) {\n    value = value || {};\n    this.initialNoise = value.initialNoise;\n    this.windowSize = value.windowSize;\n    this.noiseThreshold = value.noiseThreshold;\n    Logmnse.refineValues(this);\n  }\n  get initialNoise(): string | undefined {\n    return this._initialNoise;\n  }\n  set initialNoise(value: string | undefined) {\n    this._initialNoise = value;\n  }\n  get windowSize(): string | undefined {\n    return this._windowSize;\n  }\n  set windowSize(value: string | undefined) {\n    this._windowSize = value;\n  }\n  get noiseThreshold(): number | undefined {\n    return this._noiseThreshold;\n  }\n  set noiseThreshold(value: number | undefined) {\n    this._noiseThreshold = value;\n  }\n  toObject() {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Logmnse {}\nexport class Wiener implements GrpcMessage {\n  static toBinary(instance: Wiener) {\n    const writer = new BinaryWriter();\n    Wiener.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Wiener();\n    Wiener.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Wiener) {\n    instance.frameLen = instance.frameLen || '0';\n    instance.lpcOrder = instance.lpcOrder || '0';\n    instance.iterations = instance.iterations || '0';\n    instance.alpha = instance.alpha || 0;\n    instance.thresh = instance.thresh || 0;\n  }\n\n  static fromBinaryReader(instance: Wiener, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.frameLen = reader.readInt64String();\n          break;\n        case 2:\n          instance.lpcOrder = reader.readInt64String();\n          break;\n        case 3:\n          instance.iterations = reader.readInt64String();\n          break;\n        case 4:\n          instance.alpha = reader.readFloat();\n          break;\n        case 5:\n          instance.thresh = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Wiener.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Wiener, writer: BinaryWriter) {\n    if (instance.frameLen) {\n      writer.writeInt64String(1, instance.frameLen);\n    }\n    if (instance.lpcOrder) {\n      writer.writeInt64String(2, instance.lpcOrder);\n    }\n    if (instance.iterations) {\n      writer.writeInt64String(3, instance.iterations);\n    }\n    if (instance.alpha) {\n      writer.writeFloat(4, instance.alpha);\n    }\n    if (instance.thresh) {\n      writer.writeFloat(5, instance.thresh);\n    }\n  }\n\n  private _frameLen?: string;\n  private _lpcOrder?: string;\n  private _iterations?: string;\n  private _alpha?: number;\n  private _thresh?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Wiener value\n   */\n  constructor(value?: RecursivePartial<Wiener>) {\n    value = value || {};\n    this.frameLen = value.frameLen;\n    this.lpcOrder = value.lpcOrder;\n    this.iterations = value.iterations;\n    this.alpha = value.alpha;\n    this.thresh = value.thresh;\n    Wiener.refineValues(this);\n  }\n  get frameLen(): string | undefined {\n    return this._frameLen;\n  }\n  set frameLen(value: string | undefined) {\n    this._frameLen = value;\n  }\n  get lpcOrder(): string | undefined {\n    return this._lpcOrder;\n  }\n  set lpcOrder(value: string | undefined) {\n    this._lpcOrder = value;\n  }\n  get iterations(): string | undefined {\n    return this._iterations;\n  }\n  set iterations(value: string | undefined) {\n    this._iterations = value;\n  }\n  get alpha(): number | undefined {\n    return this._alpha;\n  }\n  set alpha(value: number | undefined) {\n    this._alpha = value;\n  }\n  get thresh(): number | undefined {\n    return this._thresh;\n  }\n  set thresh(value: number | undefined) {\n    this._thresh = value;\n  }\n  toObject() {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Wiener {}\nexport class Apodization implements GrpcMessage {\n  static toBinary(instance: Apodization) {\n    const writer = new BinaryWriter();\n    Apodization.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Apodization();\n    Apodization.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Apodization) {\n    instance.apodizationSecs = instance.apodizationSecs || 0;\n  }\n\n  static fromBinaryReader(instance: Apodization, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        case 1:\n          instance.apodizationSecs = reader.readFloat();\n          break;\n        default:\n          reader.skipField();\n      }\n    }\n\n    Apodization.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Apodization, writer: BinaryWriter) {\n    if (instance.apodizationSecs) {\n      writer.writeFloat(1, instance.apodizationSecs);\n    }\n  }\n\n  private _apodizationSecs?: number;\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Apodization value\n   */\n  constructor(value?: RecursivePartial<Apodization>) {\n    value = value || {};\n    this.apodizationSecs = value.apodizationSecs;\n    Apodization.refineValues(this);\n  }\n  get apodizationSecs(): number | undefined {\n    return this._apodizationSecs;\n  }\n  set apodizationSecs(value: number | undefined) {\n    this._apodizationSecs = value;\n  }\n  toObject() {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Apodization {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { GrpcMessage, RecursivePartial } from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nexport class Empty implements GrpcMessage {\n  static toBinary(instance: Empty) {\n    const writer = new BinaryWriter();\n    Empty.toBinaryWriter(instance, writer);\n    return writer.getResultBuffer();\n  }\n\n  static fromBinary(bytes: ByteSource) {\n    const instance = new Empty();\n    Empty.fromBinaryReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  static refineValues(instance: Empty) {}\n\n  static fromBinaryReader(instance: Empty, reader: BinaryReader) {\n    while (reader.nextField()) {\n      if (reader.isEndGroup()) break;\n\n      switch (reader.getFieldNumber()) {\n        default:\n          reader.skipField();\n      }\n    }\n\n    Empty.refineValues(instance);\n  }\n\n  static toBinaryWriter(instance: Empty, writer: BinaryWriter) {}\n\n  /**\n   * Creates an object and applies default Protobuf values\n   * @param Empty value\n   */\n  constructor(value?: RecursivePartial<Empty>) {\n    value = value || {};\n    Empty.refineValues(this);\n  }\n  toObject() {\n    return {};\n  }\n  toJSON() {\n    return this.toObject();\n  }\n}\nexport module Empty {}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\nimport { GrpcClientSettings } from '@ngx-grpc/common';\n/*\n  To configure the services you need to provide a configuration for each of them.\n\n  E.g. you can create a module where you configure all of them and then import this module into your AppModule:\n\n  const grpcSettings = { host: environment.grpcHost };\n\n  @NgModule({\n    providers: [\n      { provide: GRPC_TEXT2_SPEECH_CLIENT_SETTINGS, useValue: grpcSettings },\n    ],\n  })\n  export class GrpcConfigModule { }\n*/\nexport const GRPC_TEXT2_SPEECH_CLIENT_SETTINGS = new InjectionToken<\n  GrpcClientSettings\n>('GRPC_TEXT2_SPEECH_CLIENT_SETTINGS');\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcClientSettings,\n  GrpcEvent\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Metadata } from 'grpc-web';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './text-to-speech.pb';\nimport * as googleProtobuf000 from '../../google/protobuf/empty.pb';\nimport { GRPC_TEXT2_SPEECH_CLIENT_SETTINGS } from './text-to-speech.pbconf';\n@Injectable({\n  providedIn: 'root'\n})\nexport class Text2SpeechClient {\n  private client: GrpcClient;\n\n  constructor(\n    @Optional()\n    @Inject(GRPC_TEXT2_SPEECH_CLIENT_SETTINGS)\n    settings: GrpcClientSettings,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.Text2Speech',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.SynthesizeRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.SynthesizeResponse>\n   */\n  synthesize(\n    requestData: thisProto.SynthesizeRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.SynthesizeResponse> {\n    return this.synthesize$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.SynthesizeRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.SynthesizeResponse>>\n   */\n  synthesize$eventStream(\n    requestData: thisProto.SynthesizeRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.SynthesizeResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/Synthesize',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.SynthesizeRequest,\n      responseClass: thisProto.SynthesizeResponse\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<thisProto.Text2SpeechConfig>\n   */\n  getT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.Text2SpeechConfig> {\n    return this.getT2sPipeline$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.Text2SpeechConfig>>\n   */\n  getT2sPipeline$eventStream(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.Text2SpeechConfig>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/GetT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.T2sPipelineId,\n      responseClass: thisProto.Text2SpeechConfig\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<thisProto.T2sPipelineId>\n   */\n  createT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.T2sPipelineId> {\n    return this.createT2sPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.T2sPipelineId>>\n   */\n  createT2sPipeline$eventStream(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.T2sPipelineId>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/CreateT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Text2SpeechConfig,\n      responseClass: thisProto.T2sPipelineId\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  deleteT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.deleteT2sPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.T2sPipelineId request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  deleteT2sPipeline$eventStream(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/DeleteT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.T2sPipelineId,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<googleProtobuf000.Empty>\n   */\n  updateT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<googleProtobuf000.Empty> {\n    return this.updateT2sPipeline$eventStream(\n      requestData,\n      requestMetadata\n    ).pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.Text2SpeechConfig request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<googleProtobuf000.Empty>>\n   */\n  updateT2sPipeline$eventStream(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<googleProtobuf000.Empty>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/UpdateT2sPipeline',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.Text2SpeechConfig,\n      responseClass: googleProtobuf000.Empty\n    });\n  }\n\n  /**\n   * Unary RPC. Emits messages and throws errors on non-zero status codes\n   * @param thisProto.ListT2sPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<thisProto.ListT2sPipelinesResponse>\n   */\n  listT2sPipelines(\n    requestData: thisProto.ListT2sPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<thisProto.ListT2sPipelinesResponse> {\n    return this.listT2sPipelines$eventStream(requestData, requestMetadata).pipe(\n      throwStatusErrors(),\n      takeMessages()\n    );\n  }\n\n  /**\n   * Unary RPC. Emits data and status events; does not throw errors by design\n   * @param thisProto.ListT2sPipelinesRequest request\n   * @param Metadata metadata\n   * @return Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>>\n   */\n  listT2sPipelines$eventStream(\n    requestData: thisProto.ListT2sPipelinesRequest,\n    requestMetadata: Metadata = {}\n  ): Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>> {\n    return this.handler.handle({\n      type: GrpcCallType.unary,\n      client: this.client,\n      path: '/ondewo.t2s.Text2Speech/ListT2sPipelines',\n      requestData,\n      requestMetadata,\n      requestClass: thisProto.ListT2sPipelinesRequest,\n      responseClass: thisProto.ListT2sPipelinesResponse\n    });\n  }\n}\n"]}