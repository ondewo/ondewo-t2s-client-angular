{"version":3,"sources":["../../api/ondewo/t2s/text-to-speech.pb.ts","../../api/ondewo/t2s/custom-phonemizer.pb.ts","../../api/ondewo/t2s/text-to-speech.pbconf.ts","../../api/ondewo/t2s/custom-phonemizer.pbconf.ts","../../api/ondewo/t2s/text-to-speech.pbsc.ts","../../api/ondewo/t2s/custom-phonemizer.pbsc.ts"],"names":["AudioFormat","Pcm","SynthesizeRequest","_value","this","t2sPipelineId","text","lengthScale","noiseScale","sampleRate","pcm","audioFormat","refineValues","deserializeBinary","bytes","instance","deserializeBinaryFromReader","BinaryReader","_instance","_reader","nextField","isEndGroup","getFieldNumber","readString","readFloat","readInt32","readEnum","skipField","serializeBinaryToWriter","_writer","writeString","writeFloat","writeInt32","writeEnum","Object","defineProperty","prototype","_t2sPipelineId","value","_text","_lengthScale","_noiseScale","_sampleRate","_pcm","_audioFormat","serializeBinary","writer","BinaryWriter","getResultBuffer","toObject","toJSON","toProtobufJSON","options","_a","_b","SynthesizeResponse","audio","generationTime","audioLength","Uint8Array","readBytes","length","writeBytes","_audio","_generationTime","_audioLength","subarray","uint8ArrayToBase64","id","ListT2sPipelinesRequest","languages","slice","speakerSexes","pipelineOwners","speakerNames","domains","push","writeRepeatedString","_languages","_speakerSexes","_pipelineOwners","_speakerNames","_domains","ListT2sPipelinesResponse","pipelines","map","m","Text2SpeechConfig","messageInitializer1","readMessage","writeRepeatedMessage","_pipelines","ListT2sLanguagesRequest","ListT2sLanguagesResponse","ListT2sDomainsRequest","ListT2sDomainsResponse","T2sPipelineId","_id","description","Description","undefined","active","inference","Inference","normalization","Normalization","postprocessing","Postprocessing","readBool","writeMessage","writeBool","_description","_active","_inference","_normalization","_postprocessing","language","speakerSex","pipelineOwner","comments","speakerName","domain","_language","_speakerSex","_pipelineOwner","_comments","_speakerName","_domain","type","compositeInference","CompositeInference","caching","Caching","_type","_compositeInference","_caching","text2mel","Text2Mel","mel2audio","Mel2Audio","_text2mel","_mel2audio","glowTts","GlowTTS","glowTtsTriton","GlowTTSTriton","_glowTts","_glowTtsTriton","batchSize","useGpu","path","cleaners","paramConfigPath","readInt64String","writeInt64String","_batchSize","_useGpu","_path","_cleaners","_paramConfigPath","maxTextLength","tritonUrl","tritonModelName","_maxTextLength","_tritonUrl","_tritonModelName","mbMelganTriton","MbMelganTriton","hifiGan","HiFiGan","hifiGanTriton","HiFiGanTriton","_mbMelganTriton","_hifiGan","_hifiGanTriton","configPath","modelPath","_configPath","_modelPath","statsPath","_statsPath","memoryCacheMaxSize","samplingRate","loadCache","saveCache","cacheSaveDir","_memoryCacheMaxSize","_samplingRate","_loadCache","_saveCache","_cacheSaveDir","pipeline","customPhonemizerId","_pipeline","_customPhonemizerId","silenceSecs","logmmse","Logmnse","wiener","Wiener","apodization","Apodization","_silenceSecs","_logmmse","_wiener","_apodization","initialNoise","windowSize","noiseThreshold","_initialNoise","_windowSize","_noiseThreshold","frameLen","lpcOrder","iterations","alpha","thresh","_frameLen","_lpcOrder","_iterations","_alpha","_thresh","apodizationSecs","_apodizationSecs","PhonemizerId","CustomPhonemizerProto","maps","Map","messageInitializer2","_maps","word","phonemeGroups","_word","_phonemeGroups","ListCustomPhonemizerResponse","phonemizers","_phonemizers","UpdateMethod","UpdateCustomPhonemizerRequest","ListCustomPhonemizerRequest","pipelineIds","_pipelineIds","updateMethod","messageInitializer3","_updateMethod","CreateCustomPhonemizerRequest","prefix","_prefix","GRPC_TEXT2_SPEECH_CLIENT_SETTINGS","InjectionToken","GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS","Text2SpeechClient","settings","clientFactory","handler","_this","$raw","synthesize","requestData","requestMetadata","GrpcMetadata","handle","GrpcCallType","unary","client","requestClass","thisProto.SynthesizeRequest","responseClass","thisProto.SynthesizeResponse","getT2sPipeline","thisProto.T2sPipelineId","thisProto.Text2SpeechConfig","createT2sPipeline","deleteT2sPipeline","googleProtobuf000.Empty","updateT2sPipeline","listT2sPipelines","thisProto.ListT2sPipelinesRequest","thisProto.ListT2sPipelinesResponse","listT2sLanguages","thisProto.ListT2sLanguagesRequest","thisProto.ListT2sLanguagesResponse","listT2sDomains","thisProto.ListT2sDomainsRequest","thisProto.ListT2sDomainsResponse","createClient","pipe","throwStatusErrors","takeMessages","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler","CustomPhonemizersClient","getCustomPhonemizer","thisProto.PhonemizerId","thisProto.CustomPhonemizerProto","createCustomPhonemizer","thisProto.CreateCustomPhonemizerRequest","deleteCustomPhonemizer","updateCustomPhonemizer","thisProto.UpdateCustomPhonemizerRequest","listCustomPhonemizer","thisProto.ListCustomPhonemizerRequest","thisProto.ListCustomPhonemizerResponse"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nexport enum AudioFormat {\n  wav = 0,\n  flac = 1,\n  caf = 2,\n  mp3 = 3,\n  aac = 4,\n  ogg = 5,\n  wma = 6\n}\n/**\n * Message implementation for ondewo.t2s.SynthesizeRequest\n */\nexport class SynthesizeRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.SynthesizeRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SynthesizeRequest();\n    SynthesizeRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SynthesizeRequest) {\n    _instance.t2sPipelineId = _instance.t2sPipelineId || '';\n    _instance.text = _instance.text || '';\n    _instance.lengthScale = _instance.lengthScale || 0;\n    _instance.noiseScale = _instance.noiseScale || 0;\n    _instance.sampleRate = _instance.sampleRate || 0;\n    _instance.pcm = _instance.pcm || 0;\n    _instance.audioFormat = _instance.audioFormat || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SynthesizeRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.t2sPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.text = _reader.readString();\n          break;\n        case 3:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 4:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 5:\n          _instance.sampleRate = _reader.readInt32();\n          break;\n        case 6:\n          _instance.pcm = _reader.readEnum();\n          break;\n        case 7:\n          _instance.audioFormat = _reader.readEnum();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SynthesizeRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SynthesizeRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.t2sPipelineId) {\n      _writer.writeString(1, _instance.t2sPipelineId);\n    }\n    if (_instance.text) {\n      _writer.writeString(2, _instance.text);\n    }\n    if (_instance.lengthScale) {\n      _writer.writeFloat(3, _instance.lengthScale);\n    }\n    if (_instance.noiseScale) {\n      _writer.writeFloat(4, _instance.noiseScale);\n    }\n    if (_instance.sampleRate) {\n      _writer.writeInt32(5, _instance.sampleRate);\n    }\n    if (_instance.pcm) {\n      _writer.writeEnum(6, _instance.pcm);\n    }\n    if (_instance.audioFormat) {\n      _writer.writeEnum(7, _instance.audioFormat);\n    }\n  }\n\n  private _t2sPipelineId?: string;\n  private _text?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _sampleRate?: number;\n  private _pcm?: SynthesizeRequest.Pcm;\n  private _audioFormat?: AudioFormat;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SynthesizeRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SynthesizeRequest.AsObject>) {\n    _value = _value || {};\n    this.t2sPipelineId = _value.t2sPipelineId;\n    this.text = _value.text;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.sampleRate = _value.sampleRate;\n    this.pcm = _value.pcm;\n    this.audioFormat = _value.audioFormat;\n    SynthesizeRequest.refineValues(this);\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    this._sampleRate = value;\n  }\n  get pcm(): SynthesizeRequest.Pcm | undefined {\n    return this._pcm;\n  }\n  set pcm(value: SynthesizeRequest.Pcm | undefined) {\n    this._pcm = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    this._audioFormat = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SynthesizeRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SynthesizeRequest.AsObject {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      text: this.text,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      sampleRate: this.sampleRate,\n      pcm: this.pcm,\n      audioFormat: this.audioFormat\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SynthesizeRequest.AsProtobufJSON {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      text: this.text,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      sampleRate: this.sampleRate,\n      pcm: SynthesizeRequest.Pcm[this.pcm ?? 0],\n      audioFormat: AudioFormat[this.audioFormat ?? 0]\n    };\n  }\n}\nexport module SynthesizeRequest {\n  /**\n   * Standard JavaScript object representation for SynthesizeRequest\n   */\n  export interface AsObject {\n    t2sPipelineId?: string;\n    text?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    sampleRate?: number;\n    pcm?: SynthesizeRequest.Pcm;\n    audioFormat?: AudioFormat;\n  }\n\n  /**\n   * Protobuf JSON representation for SynthesizeRequest\n   */\n  export interface AsProtobufJSON {\n    t2sPipelineId?: string;\n    text?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    sampleRate?: number;\n    pcm?: string;\n    audioFormat?: string;\n  }\n  export enum Pcm {\n    PCM_16 = 0,\n    PCM_24 = 1,\n    PCM_32 = 2,\n    PCM_S8 = 3,\n    PCM_U8 = 4,\n    FLOAT = 5,\n    DOUBLE = 6\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.SynthesizeResponse\n */\nexport class SynthesizeResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.SynthesizeResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SynthesizeResponse();\n    SynthesizeResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SynthesizeResponse) {\n    _instance.audio = _instance.audio || new Uint8Array();\n    _instance.generationTime = _instance.generationTime || 0;\n    _instance.audioLength = _instance.audioLength || 0;\n    _instance.t2sPipelineId = _instance.t2sPipelineId || '';\n    _instance.audioFormat = _instance.audioFormat || 0;\n    _instance.text = _instance.text || '';\n    _instance.sampleRate = _instance.sampleRate || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SynthesizeResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.audio = _reader.readBytes();\n          break;\n        case 2:\n          _instance.generationTime = _reader.readFloat();\n          break;\n        case 3:\n          _instance.audioLength = _reader.readFloat();\n          break;\n        case 4:\n          _instance.t2sPipelineId = _reader.readString();\n          break;\n        case 5:\n          _instance.audioFormat = _reader.readEnum();\n          break;\n        case 6:\n          _instance.text = _reader.readString();\n          break;\n        case 7:\n          _instance.sampleRate = _reader.readInt32();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SynthesizeResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SynthesizeResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.audio && _instance.audio.length) {\n      _writer.writeBytes(1, _instance.audio);\n    }\n    if (_instance.generationTime) {\n      _writer.writeFloat(2, _instance.generationTime);\n    }\n    if (_instance.audioLength) {\n      _writer.writeFloat(3, _instance.audioLength);\n    }\n    if (_instance.t2sPipelineId) {\n      _writer.writeString(4, _instance.t2sPipelineId);\n    }\n    if (_instance.audioFormat) {\n      _writer.writeEnum(5, _instance.audioFormat);\n    }\n    if (_instance.text) {\n      _writer.writeString(6, _instance.text);\n    }\n    if (_instance.sampleRate) {\n      _writer.writeInt32(7, _instance.sampleRate);\n    }\n  }\n\n  private _audio?: Uint8Array;\n  private _generationTime?: number;\n  private _audioLength?: number;\n  private _t2sPipelineId?: string;\n  private _audioFormat?: AudioFormat;\n  private _text?: string;\n  private _sampleRate?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SynthesizeResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SynthesizeResponse.AsObject>) {\n    _value = _value || {};\n    this.audio = _value.audio;\n    this.generationTime = _value.generationTime;\n    this.audioLength = _value.audioLength;\n    this.t2sPipelineId = _value.t2sPipelineId;\n    this.audioFormat = _value.audioFormat;\n    this.text = _value.text;\n    this.sampleRate = _value.sampleRate;\n    SynthesizeResponse.refineValues(this);\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get generationTime(): number | undefined {\n    return this._generationTime;\n  }\n  set generationTime(value: number | undefined) {\n    this._generationTime = value;\n  }\n  get audioLength(): number | undefined {\n    return this._audioLength;\n  }\n  set audioLength(value: number | undefined) {\n    this._audioLength = value;\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    this._audioFormat = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    this._sampleRate = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SynthesizeResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SynthesizeResponse.AsObject {\n    return {\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      t2sPipelineId: this.t2sPipelineId,\n      audioFormat: this.audioFormat,\n      text: this.text,\n      sampleRate: this.sampleRate\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SynthesizeResponse.AsProtobufJSON {\n    return {\n      audio: this.audio ? uint8ArrayToBase64(this.audio) : '',\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      t2sPipelineId: this.t2sPipelineId,\n      audioFormat: AudioFormat[this.audioFormat ?? 0],\n      text: this.text,\n      sampleRate: this.sampleRate\n    };\n  }\n}\nexport module SynthesizeResponse {\n  /**\n   * Standard JavaScript object representation for SynthesizeResponse\n   */\n  export interface AsObject {\n    audio?: Uint8Array;\n    generationTime?: number;\n    audioLength?: number;\n    t2sPipelineId?: string;\n    audioFormat?: AudioFormat;\n    text?: string;\n    sampleRate?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for SynthesizeResponse\n   */\n  export interface AsProtobufJSON {\n    audio?: string;\n    generationTime?: number;\n    audioLength?: number;\n    t2sPipelineId?: string;\n    audioFormat?: string;\n    text?: string;\n    sampleRate?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sPipelinesRequest\n */\nexport class ListT2sPipelinesRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sPipelinesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesRequest();\n    ListT2sPipelinesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sPipelinesRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sPipelinesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 5:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sPipelinesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(2, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(3, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(4, _instance.speakerNames);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(5, _instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sPipelinesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sPipelinesRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListT2sPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sPipelinesRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sPipelinesRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sPipelinesRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sPipelinesRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sPipelinesRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sPipelinesResponse\n */\nexport class ListT2sPipelinesResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sPipelinesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesResponse();\n    ListT2sPipelinesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sPipelinesResponse) {\n    _instance.pipelines = _instance.pipelines || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sPipelinesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Text2SpeechConfig();\n          _reader.readMessage(\n            messageInitializer1,\n            Text2SpeechConfig.deserializeBinaryFromReader\n          );\n          (_instance.pipelines = _instance.pipelines || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sPipelinesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelines && _instance.pipelines.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.pipelines as any,\n        Text2SpeechConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipelines?: Text2SpeechConfig[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sPipelinesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sPipelinesResponse.AsObject>) {\n    _value = _value || {};\n    this.pipelines = (_value.pipelines || []).map(\n      m => new Text2SpeechConfig(m)\n    );\n    ListT2sPipelinesResponse.refineValues(this);\n  }\n  get pipelines(): Text2SpeechConfig[] | undefined {\n    return this._pipelines;\n  }\n  set pipelines(value: Text2SpeechConfig[] | undefined) {\n    this._pipelines = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sPipelinesResponse.AsObject {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sPipelinesResponse.AsProtobufJSON {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module ListT2sPipelinesResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sPipelinesResponse\n   */\n  export interface AsObject {\n    pipelines?: Text2SpeechConfig.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sPipelinesResponse\n   */\n  export interface AsProtobufJSON {\n    pipelines?: Text2SpeechConfig.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sLanguagesRequest\n */\nexport class ListT2sLanguagesRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sLanguagesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sLanguagesRequest();\n    ListT2sLanguagesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sLanguagesRequest) {\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sLanguagesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sLanguagesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sLanguagesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(1, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(3, _instance.speakerNames);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(4, _instance.domains);\n    }\n  }\n\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sLanguagesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sLanguagesRequest.AsObject>) {\n    _value = _value || {};\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListT2sLanguagesRequest.refineValues(this);\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sLanguagesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sLanguagesRequest.AsObject {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sLanguagesRequest.AsProtobufJSON {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sLanguagesRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sLanguagesRequest\n   */\n  export interface AsObject {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sLanguagesRequest\n   */\n  export interface AsProtobufJSON {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sLanguagesResponse\n */\nexport class ListT2sLanguagesResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sLanguagesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sLanguagesResponse();\n    ListT2sLanguagesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sLanguagesResponse) {\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sLanguagesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sLanguagesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sLanguagesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sLanguagesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sLanguagesResponse.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    ListT2sLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sLanguagesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sLanguagesResponse.AsObject {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sLanguagesResponse.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListT2sLanguagesResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sLanguagesResponse\n   */\n  export interface AsObject {\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sLanguagesResponse\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sDomainsRequest\n */\nexport class ListT2sDomainsRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sDomainsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sDomainsRequest();\n    ListT2sDomainsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sDomainsRequest) {\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sDomainsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sDomainsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sDomainsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(1, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(3, _instance.speakerNames);\n    }\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(4, _instance.languages);\n    }\n  }\n\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sDomainsRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sDomainsRequest.AsObject>) {\n    _value = _value || {};\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.languages = (_value.languages || []).slice();\n    ListT2sDomainsRequest.refineValues(this);\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sDomainsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sDomainsRequest.AsObject {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sDomainsRequest.AsProtobufJSON {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListT2sDomainsRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sDomainsRequest\n   */\n  export interface AsObject {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sDomainsRequest\n   */\n  export interface AsProtobufJSON {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sDomainsResponse\n */\nexport class ListT2sDomainsResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sDomainsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sDomainsResponse();\n    ListT2sDomainsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sDomainsResponse) {\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sDomainsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sDomainsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sDomainsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sDomainsResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sDomainsResponse.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    ListT2sDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sDomainsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sDomainsResponse.AsObject {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sDomainsResponse.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sDomainsResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sDomainsResponse\n   */\n  export interface AsObject {\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sDomainsResponse\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.T2sPipelineId\n */\nexport class T2sPipelineId implements GrpcMessage {\n  static id = 'ondewo.t2s.T2sPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new T2sPipelineId();\n    T2sPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: T2sPipelineId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: T2sPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    T2sPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: T2sPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of T2sPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<T2sPipelineId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    T2sPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    T2sPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): T2sPipelineId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): T2sPipelineId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module T2sPipelineId {\n  /**\n   * Standard JavaScript object representation for T2sPipelineId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for T2sPipelineId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Text2SpeechConfig\n */\nexport class Text2SpeechConfig implements GrpcMessage {\n  static id = 'ondewo.t2s.Text2SpeechConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Text2SpeechConfig();\n    Text2SpeechConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Text2SpeechConfig) {\n    _instance.id = _instance.id || '';\n    _instance.description = _instance.description || undefined;\n    _instance.active = _instance.active || false;\n    _instance.inference = _instance.inference || undefined;\n    _instance.normalization = _instance.normalization || undefined;\n    _instance.postprocessing = _instance.postprocessing || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Text2SpeechConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.description = new Description();\n          _reader.readMessage(\n            _instance.description,\n            Description.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.active = _reader.readBool();\n          break;\n        case 4:\n          _instance.inference = new Inference();\n          _reader.readMessage(\n            _instance.inference,\n            Inference.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.normalization = new Normalization();\n          _reader.readMessage(\n            _instance.normalization,\n            Normalization.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.postprocessing = new Postprocessing();\n          _reader.readMessage(\n            _instance.postprocessing,\n            Postprocessing.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Text2SpeechConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Text2SpeechConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.description) {\n      _writer.writeMessage(\n        2,\n        _instance.description as any,\n        Description.serializeBinaryToWriter\n      );\n    }\n    if (_instance.active) {\n      _writer.writeBool(3, _instance.active);\n    }\n    if (_instance.inference) {\n      _writer.writeMessage(\n        4,\n        _instance.inference as any,\n        Inference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalization) {\n      _writer.writeMessage(\n        5,\n        _instance.normalization as any,\n        Normalization.serializeBinaryToWriter\n      );\n    }\n    if (_instance.postprocessing) {\n      _writer.writeMessage(\n        6,\n        _instance.postprocessing as any,\n        Postprocessing.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _normalization?: Normalization;\n  private _postprocessing?: Postprocessing;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Text2SpeechConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Text2SpeechConfig.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.description = _value.description\n      ? new Description(_value.description)\n      : undefined;\n    this.active = _value.active;\n    this.inference = _value.inference\n      ? new Inference(_value.inference)\n      : undefined;\n    this.normalization = _value.normalization\n      ? new Normalization(_value.normalization)\n      : undefined;\n    this.postprocessing = _value.postprocessing\n      ? new Postprocessing(_value.postprocessing)\n      : undefined;\n    Text2SpeechConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n  get postprocessing(): Postprocessing | undefined {\n    return this._postprocessing;\n  }\n  set postprocessing(value: Postprocessing | undefined) {\n    this._postprocessing = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Text2SpeechConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Text2SpeechConfig.AsObject {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Text2SpeechConfig.AsProtobufJSON {\n    return {\n      id: this.id,\n      description: this.description\n        ? this.description.toProtobufJSON(options)\n        : null,\n      active: this.active,\n      inference: this.inference ? this.inference.toProtobufJSON(options) : null,\n      normalization: this.normalization\n        ? this.normalization.toProtobufJSON(options)\n        : null,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Text2SpeechConfig {\n  /**\n   * Standard JavaScript object representation for Text2SpeechConfig\n   */\n  export interface AsObject {\n    id?: string;\n    description?: Description.AsObject;\n    active?: boolean;\n    inference?: Inference.AsObject;\n    normalization?: Normalization.AsObject;\n    postprocessing?: Postprocessing.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Text2SpeechConfig\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    description?: Description.AsProtobufJSON | null;\n    active?: boolean;\n    inference?: Inference.AsProtobufJSON | null;\n    normalization?: Normalization.AsProtobufJSON | null;\n    postprocessing?: Postprocessing.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Description\n */\nexport class Description implements GrpcMessage {\n  static id = 'ondewo.t2s.Description';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Description) {\n    _instance.language = _instance.language || '';\n    _instance.speakerSex = _instance.speakerSex || '';\n    _instance.pipelineOwner = _instance.pipelineOwner || '';\n    _instance.comments = _instance.comments || '';\n    _instance.speakerName = _instance.speakerName || '';\n    _instance.domain = _instance.domain || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Description,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          _instance.speakerSex = _reader.readString();\n          break;\n        case 3:\n          _instance.pipelineOwner = _reader.readString();\n          break;\n        case 4:\n          _instance.comments = _reader.readString();\n          break;\n        case 5:\n          _instance.speakerName = _reader.readString();\n          break;\n        case 6:\n          _instance.domain = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Description.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Description,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.speakerSex) {\n      _writer.writeString(2, _instance.speakerSex);\n    }\n    if (_instance.pipelineOwner) {\n      _writer.writeString(3, _instance.pipelineOwner);\n    }\n    if (_instance.comments) {\n      _writer.writeString(4, _instance.comments);\n    }\n    if (_instance.speakerName) {\n      _writer.writeString(5, _instance.speakerName);\n    }\n    if (_instance.domain) {\n      _writer.writeString(6, _instance.domain);\n    }\n  }\n\n  private _language?: string;\n  private _speakerSex?: string;\n  private _pipelineOwner?: string;\n  private _comments?: string;\n  private _speakerName?: string;\n  private _domain?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Description to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Description.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.speakerSex = _value.speakerSex;\n    this.pipelineOwner = _value.pipelineOwner;\n    this.comments = _value.comments;\n    this.speakerName = _value.speakerName;\n    this.domain = _value.domain;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get speakerSex(): string | undefined {\n    return this._speakerSex;\n  }\n  set speakerSex(value: string | undefined) {\n    this._speakerSex = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n  get speakerName(): string | undefined {\n    return this._speakerName;\n  }\n  set speakerName(value: string | undefined) {\n    this._speakerName = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Description.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Description.AsObject {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Description.AsProtobufJSON {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n}\nexport module Description {\n  /**\n   * Standard JavaScript object representation for Description\n   */\n  export interface AsObject {\n    language?: string;\n    speakerSex?: string;\n    pipelineOwner?: string;\n    comments?: string;\n    speakerName?: string;\n    domain?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Description\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    speakerSex?: string;\n    pipelineOwner?: string;\n    comments?: string;\n    speakerName?: string;\n    domain?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Inference\n */\nexport class Inference implements GrpcMessage {\n  static id = 'ondewo.t2s.Inference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Inference) {\n    _instance.type = _instance.type || '';\n    _instance.compositeInference = _instance.compositeInference || undefined;\n    _instance.caching = _instance.caching || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Inference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.compositeInference = new CompositeInference();\n          _reader.readMessage(\n            _instance.compositeInference,\n            CompositeInference.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.caching = new Caching();\n          _reader.readMessage(\n            _instance.caching,\n            Caching.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Inference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Inference, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.compositeInference) {\n      _writer.writeMessage(\n        2,\n        _instance.compositeInference as any,\n        CompositeInference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.caching) {\n      _writer.writeMessage(\n        3,\n        _instance.caching as any,\n        Caching.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _compositeInference?: CompositeInference;\n  private _caching?: Caching;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Inference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Inference.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.compositeInference = _value.compositeInference\n      ? new CompositeInference(_value.compositeInference)\n      : undefined;\n    this.caching = _value.caching ? new Caching(_value.caching) : undefined;\n    Inference.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get compositeInference(): CompositeInference | undefined {\n    return this._compositeInference;\n  }\n  set compositeInference(value: CompositeInference | undefined) {\n    this._compositeInference = value;\n  }\n  get caching(): Caching | undefined {\n    return this._caching;\n  }\n  set caching(value: Caching | undefined) {\n    this._caching = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Inference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Inference.AsObject {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toObject()\n        : undefined,\n      caching: this.caching ? this.caching.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Inference.AsProtobufJSON {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toProtobufJSON(options)\n        : null,\n      caching: this.caching ? this.caching.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module Inference {\n  /**\n   * Standard JavaScript object representation for Inference\n   */\n  export interface AsObject {\n    type?: string;\n    compositeInference?: CompositeInference.AsObject;\n    caching?: Caching.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Inference\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    compositeInference?: CompositeInference.AsProtobufJSON | null;\n    caching?: Caching.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CompositeInference\n */\nexport class CompositeInference implements GrpcMessage {\n  static id = 'ondewo.t2s.CompositeInference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CompositeInference();\n    CompositeInference.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CompositeInference) {\n    _instance.text2mel = _instance.text2mel || undefined;\n    _instance.mel2audio = _instance.mel2audio || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CompositeInference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.text2mel = new Text2Mel();\n          _reader.readMessage(\n            _instance.text2mel,\n            Text2Mel.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.mel2audio = new Mel2Audio();\n          _reader.readMessage(\n            _instance.mel2audio,\n            Mel2Audio.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CompositeInference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CompositeInference,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.text2mel) {\n      _writer.writeMessage(\n        1,\n        _instance.text2mel as any,\n        Text2Mel.serializeBinaryToWriter\n      );\n    }\n    if (_instance.mel2audio) {\n      _writer.writeMessage(\n        2,\n        _instance.mel2audio as any,\n        Mel2Audio.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _text2mel?: Text2Mel;\n  private _mel2audio?: Mel2Audio;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CompositeInference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CompositeInference.AsObject>) {\n    _value = _value || {};\n    this.text2mel = _value.text2mel ? new Text2Mel(_value.text2mel) : undefined;\n    this.mel2audio = _value.mel2audio\n      ? new Mel2Audio(_value.mel2audio)\n      : undefined;\n    CompositeInference.refineValues(this);\n  }\n  get text2mel(): Text2Mel | undefined {\n    return this._text2mel;\n  }\n  set text2mel(value: Text2Mel | undefined) {\n    this._text2mel = value;\n  }\n  get mel2audio(): Mel2Audio | undefined {\n    return this._mel2audio;\n  }\n  set mel2audio(value: Mel2Audio | undefined) {\n    this._mel2audio = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CompositeInference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CompositeInference.AsObject {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toObject() : undefined,\n      mel2audio: this.mel2audio ? this.mel2audio.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CompositeInference.AsProtobufJSON {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toProtobufJSON(options) : null,\n      mel2audio: this.mel2audio ? this.mel2audio.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CompositeInference {\n  /**\n   * Standard JavaScript object representation for CompositeInference\n   */\n  export interface AsObject {\n    text2mel?: Text2Mel.AsObject;\n    mel2audio?: Mel2Audio.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CompositeInference\n   */\n  export interface AsProtobufJSON {\n    text2mel?: Text2Mel.AsProtobufJSON | null;\n    mel2audio?: Mel2Audio.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Text2Mel\n */\nexport class Text2Mel implements GrpcMessage {\n  static id = 'ondewo.t2s.Text2Mel';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Text2Mel();\n    Text2Mel.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Text2Mel) {\n    _instance.type = _instance.type || '';\n    _instance.glowTts = _instance.glowTts || undefined;\n    _instance.glowTtsTriton = _instance.glowTtsTriton || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Text2Mel,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 3:\n          _instance.glowTts = new GlowTTS();\n          _reader.readMessage(\n            _instance.glowTts,\n            GlowTTS.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.glowTtsTriton = new GlowTTSTriton();\n          _reader.readMessage(\n            _instance.glowTtsTriton,\n            GlowTTSTriton.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Text2Mel.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Text2Mel, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.glowTts) {\n      _writer.writeMessage(\n        3,\n        _instance.glowTts as any,\n        GlowTTS.serializeBinaryToWriter\n      );\n    }\n    if (_instance.glowTtsTriton) {\n      _writer.writeMessage(\n        4,\n        _instance.glowTtsTriton as any,\n        GlowTTSTriton.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _glowTts?: GlowTTS;\n  private _glowTtsTriton?: GlowTTSTriton;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Text2Mel to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Text2Mel.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.glowTts = _value.glowTts ? new GlowTTS(_value.glowTts) : undefined;\n    this.glowTtsTriton = _value.glowTtsTriton\n      ? new GlowTTSTriton(_value.glowTtsTriton)\n      : undefined;\n    Text2Mel.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get glowTts(): GlowTTS | undefined {\n    return this._glowTts;\n  }\n  set glowTts(value: GlowTTS | undefined) {\n    this._glowTts = value;\n  }\n  get glowTtsTriton(): GlowTTSTriton | undefined {\n    return this._glowTtsTriton;\n  }\n  set glowTtsTriton(value: GlowTTSTriton | undefined) {\n    this._glowTtsTriton = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Text2Mel.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Text2Mel.AsObject {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toObject() : undefined,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Text2Mel.AsProtobufJSON {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toProtobufJSON(options) : null,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Text2Mel {\n  /**\n   * Standard JavaScript object representation for Text2Mel\n   */\n  export interface AsObject {\n    type?: string;\n    glowTts?: GlowTTS.AsObject;\n    glowTtsTriton?: GlowTTSTriton.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Text2Mel\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    glowTts?: GlowTTS.AsProtobufJSON | null;\n    glowTtsTriton?: GlowTTSTriton.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.GlowTTS\n */\nexport class GlowTTS implements GrpcMessage {\n  static id = 'ondewo.t2s.GlowTTS';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GlowTTS();\n    GlowTTS.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GlowTTS) {\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.useGpu = _instance.useGpu || false;\n    _instance.lengthScale = _instance.lengthScale || 0;\n    _instance.noiseScale = _instance.noiseScale || 0;\n    _instance.path = _instance.path || '';\n    _instance.cleaners = _instance.cleaners || [];\n    _instance.paramConfigPath = _instance.paramConfigPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GlowTTS,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.useGpu = _reader.readBool();\n          break;\n        case 3:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 4:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 5:\n          _instance.path = _reader.readString();\n          break;\n        case 6:\n          (_instance.cleaners = _instance.cleaners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 7:\n          _instance.paramConfigPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GlowTTS.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: GlowTTS, _writer: BinaryWriter) {\n    if (_instance.batchSize) {\n      _writer.writeInt64String(1, _instance.batchSize);\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(2, _instance.useGpu);\n    }\n    if (_instance.lengthScale) {\n      _writer.writeFloat(3, _instance.lengthScale);\n    }\n    if (_instance.noiseScale) {\n      _writer.writeFloat(4, _instance.noiseScale);\n    }\n    if (_instance.path) {\n      _writer.writeString(5, _instance.path);\n    }\n    if (_instance.cleaners && _instance.cleaners.length) {\n      _writer.writeRepeatedString(6, _instance.cleaners);\n    }\n    if (_instance.paramConfigPath) {\n      _writer.writeString(7, _instance.paramConfigPath);\n    }\n  }\n\n  private _batchSize?: string;\n  private _useGpu?: boolean;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _path?: string;\n  private _cleaners?: string[];\n  private _paramConfigPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GlowTTS to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GlowTTS.AsObject>) {\n    _value = _value || {};\n    this.batchSize = _value.batchSize;\n    this.useGpu = _value.useGpu;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.path = _value.path;\n    this.cleaners = (_value.cleaners || []).slice();\n    this.paramConfigPath = _value.paramConfigPath;\n    GlowTTS.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GlowTTS.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GlowTTS.AsObject {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GlowTTS.AsProtobufJSON {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n}\nexport module GlowTTS {\n  /**\n   * Standard JavaScript object representation for GlowTTS\n   */\n  export interface AsObject {\n    batchSize?: string;\n    useGpu?: boolean;\n    lengthScale?: number;\n    noiseScale?: number;\n    path?: string;\n    cleaners?: string[];\n    paramConfigPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GlowTTS\n   */\n  export interface AsProtobufJSON {\n    batchSize?: string;\n    useGpu?: boolean;\n    lengthScale?: number;\n    noiseScale?: number;\n    path?: string;\n    cleaners?: string[];\n    paramConfigPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.GlowTTSTriton\n */\nexport class GlowTTSTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.GlowTTSTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GlowTTSTriton();\n    GlowTTSTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GlowTTSTriton) {\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.lengthScale = _instance.lengthScale || 0;\n    _instance.noiseScale = _instance.noiseScale || 0;\n    _instance.cleaners = _instance.cleaners || [];\n    _instance.maxTextLength = _instance.maxTextLength || '0';\n    _instance.paramConfigPath = _instance.paramConfigPath || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GlowTTSTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 3:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 4:\n          (_instance.cleaners = _instance.cleaners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 5:\n          _instance.maxTextLength = _reader.readInt64String();\n          break;\n        case 6:\n          _instance.paramConfigPath = _reader.readString();\n          break;\n        case 7:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        case 8:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GlowTTSTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GlowTTSTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.batchSize) {\n      _writer.writeInt64String(1, _instance.batchSize);\n    }\n    if (_instance.lengthScale) {\n      _writer.writeFloat(2, _instance.lengthScale);\n    }\n    if (_instance.noiseScale) {\n      _writer.writeFloat(3, _instance.noiseScale);\n    }\n    if (_instance.cleaners && _instance.cleaners.length) {\n      _writer.writeRepeatedString(4, _instance.cleaners);\n    }\n    if (_instance.maxTextLength) {\n      _writer.writeInt64String(5, _instance.maxTextLength);\n    }\n    if (_instance.paramConfigPath) {\n      _writer.writeString(6, _instance.paramConfigPath);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(7, _instance.tritonUrl);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(8, _instance.tritonModelName);\n    }\n  }\n\n  private _batchSize?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _cleaners?: string[];\n  private _maxTextLength?: string;\n  private _paramConfigPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModelName?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GlowTTSTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GlowTTSTriton.AsObject>) {\n    _value = _value || {};\n    this.batchSize = _value.batchSize;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.cleaners = (_value.cleaners || []).slice();\n    this.maxTextLength = _value.maxTextLength;\n    this.paramConfigPath = _value.paramConfigPath;\n    this.tritonUrl = _value.tritonUrl;\n    this.tritonModelName = _value.tritonModelName;\n    GlowTTSTriton.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get maxTextLength(): string | undefined {\n    return this._maxTextLength;\n  }\n  set maxTextLength(value: string | undefined) {\n    this._maxTextLength = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GlowTTSTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GlowTTSTriton.AsObject {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonUrl: this.tritonUrl,\n      tritonModelName: this.tritonModelName\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GlowTTSTriton.AsProtobufJSON {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonUrl: this.tritonUrl,\n      tritonModelName: this.tritonModelName\n    };\n  }\n}\nexport module GlowTTSTriton {\n  /**\n   * Standard JavaScript object representation for GlowTTSTriton\n   */\n  export interface AsObject {\n    batchSize?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    cleaners?: string[];\n    maxTextLength?: string;\n    paramConfigPath?: string;\n    tritonUrl?: string;\n    tritonModelName?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GlowTTSTriton\n   */\n  export interface AsProtobufJSON {\n    batchSize?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    cleaners?: string[];\n    maxTextLength?: string;\n    paramConfigPath?: string;\n    tritonUrl?: string;\n    tritonModelName?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Mel2Audio\n */\nexport class Mel2Audio implements GrpcMessage {\n  static id = 'ondewo.t2s.Mel2Audio';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Mel2Audio();\n    Mel2Audio.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Mel2Audio) {\n    _instance.type = _instance.type || '';\n    _instance.mbMelganTriton = _instance.mbMelganTriton || undefined;\n    _instance.hifiGan = _instance.hifiGan || undefined;\n    _instance.hifiGanTriton = _instance.hifiGanTriton || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Mel2Audio,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.mbMelganTriton = new MbMelganTriton();\n          _reader.readMessage(\n            _instance.mbMelganTriton,\n            MbMelganTriton.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.hifiGan = new HiFiGan();\n          _reader.readMessage(\n            _instance.hifiGan,\n            HiFiGan.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.hifiGanTriton = new HiFiGanTriton();\n          _reader.readMessage(\n            _instance.hifiGanTriton,\n            HiFiGanTriton.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Mel2Audio.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Mel2Audio, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.mbMelganTriton) {\n      _writer.writeMessage(\n        2,\n        _instance.mbMelganTriton as any,\n        MbMelganTriton.serializeBinaryToWriter\n      );\n    }\n    if (_instance.hifiGan) {\n      _writer.writeMessage(\n        3,\n        _instance.hifiGan as any,\n        HiFiGan.serializeBinaryToWriter\n      );\n    }\n    if (_instance.hifiGanTriton) {\n      _writer.writeMessage(\n        4,\n        _instance.hifiGanTriton as any,\n        HiFiGanTriton.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _mbMelganTriton?: MbMelganTriton;\n  private _hifiGan?: HiFiGan;\n  private _hifiGanTriton?: HiFiGanTriton;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Mel2Audio to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Mel2Audio.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.mbMelganTriton = _value.mbMelganTriton\n      ? new MbMelganTriton(_value.mbMelganTriton)\n      : undefined;\n    this.hifiGan = _value.hifiGan ? new HiFiGan(_value.hifiGan) : undefined;\n    this.hifiGanTriton = _value.hifiGanTriton\n      ? new HiFiGanTriton(_value.hifiGanTriton)\n      : undefined;\n    Mel2Audio.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get mbMelganTriton(): MbMelganTriton | undefined {\n    return this._mbMelganTriton;\n  }\n  set mbMelganTriton(value: MbMelganTriton | undefined) {\n    this._mbMelganTriton = value;\n  }\n  get hifiGan(): HiFiGan | undefined {\n    return this._hifiGan;\n  }\n  set hifiGan(value: HiFiGan | undefined) {\n    this._hifiGan = value;\n  }\n  get hifiGanTriton(): HiFiGanTriton | undefined {\n    return this._hifiGanTriton;\n  }\n  set hifiGanTriton(value: HiFiGanTriton | undefined) {\n    this._hifiGanTriton = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Mel2Audio.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Mel2Audio.AsObject {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toObject()\n        : undefined,\n      hifiGan: this.hifiGan ? this.hifiGan.toObject() : undefined,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Mel2Audio.AsProtobufJSON {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toProtobufJSON(options)\n        : null,\n      hifiGan: this.hifiGan ? this.hifiGan.toProtobufJSON(options) : null,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Mel2Audio {\n  /**\n   * Standard JavaScript object representation for Mel2Audio\n   */\n  export interface AsObject {\n    type?: string;\n    mbMelganTriton?: MbMelganTriton.AsObject;\n    hifiGan?: HiFiGan.AsObject;\n    hifiGanTriton?: HiFiGanTriton.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Mel2Audio\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    mbMelganTriton?: MbMelganTriton.AsProtobufJSON | null;\n    hifiGan?: HiFiGan.AsProtobufJSON | null;\n    hifiGanTriton?: HiFiGanTriton.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.HiFiGan\n */\nexport class HiFiGan implements GrpcMessage {\n  static id = 'ondewo.t2s.HiFiGan';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HiFiGan();\n    HiFiGan.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HiFiGan) {\n    _instance.useGpu = _instance.useGpu || false;\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.configPath = _instance.configPath || '';\n    _instance.modelPath = _instance.modelPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HiFiGan,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.useGpu = _reader.readBool();\n          break;\n        case 2:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.configPath = _reader.readString();\n          break;\n        case 4:\n          _instance.modelPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HiFiGan.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: HiFiGan, _writer: BinaryWriter) {\n    if (_instance.useGpu) {\n      _writer.writeBool(1, _instance.useGpu);\n    }\n    if (_instance.batchSize) {\n      _writer.writeInt64String(2, _instance.batchSize);\n    }\n    if (_instance.configPath) {\n      _writer.writeString(3, _instance.configPath);\n    }\n    if (_instance.modelPath) {\n      _writer.writeString(4, _instance.modelPath);\n    }\n  }\n\n  private _useGpu?: boolean;\n  private _batchSize?: string;\n  private _configPath?: string;\n  private _modelPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HiFiGan to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HiFiGan.AsObject>) {\n    _value = _value || {};\n    this.useGpu = _value.useGpu;\n    this.batchSize = _value.batchSize;\n    this.configPath = _value.configPath;\n    this.modelPath = _value.modelPath;\n    HiFiGan.refineValues(this);\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HiFiGan.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HiFiGan.AsObject {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HiFiGan.AsProtobufJSON {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n}\nexport module HiFiGan {\n  /**\n   * Standard JavaScript object representation for HiFiGan\n   */\n  export interface AsObject {\n    useGpu?: boolean;\n    batchSize?: string;\n    configPath?: string;\n    modelPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for HiFiGan\n   */\n  export interface AsProtobufJSON {\n    useGpu?: boolean;\n    batchSize?: string;\n    configPath?: string;\n    modelPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.HiFiGanTriton\n */\nexport class HiFiGanTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.HiFiGanTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HiFiGanTriton();\n    HiFiGanTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HiFiGanTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HiFiGanTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HiFiGanTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: HiFiGanTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(2, _instance.tritonModelName);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(3, _instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HiFiGanTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HiFiGanTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.tritonModelName = _value.tritonModelName;\n    this.tritonUrl = _value.tritonUrl;\n    HiFiGanTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HiFiGanTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HiFiGanTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HiFiGanTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n}\nexport module HiFiGanTriton {\n  /**\n   * Standard JavaScript object representation for HiFiGanTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for HiFiGanTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.MbMelganTriton\n */\nexport class MbMelganTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.MbMelganTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new MbMelganTriton();\n    MbMelganTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: MbMelganTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.statsPath = _instance.statsPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: MbMelganTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.statsPath = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        case 4:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    MbMelganTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: MbMelganTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.statsPath) {\n      _writer.writeString(2, _instance.statsPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(3, _instance.tritonModelName);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(4, _instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _statsPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of MbMelganTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<MbMelganTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.statsPath = _value.statsPath;\n    this.tritonModelName = _value.tritonModelName;\n    this.tritonUrl = _value.tritonUrl;\n    MbMelganTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get statsPath(): string | undefined {\n    return this._statsPath;\n  }\n  set statsPath(value: string | undefined) {\n    this._statsPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    MbMelganTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): MbMelganTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): MbMelganTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n}\nexport module MbMelganTriton {\n  /**\n   * Standard JavaScript object representation for MbMelganTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    statsPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for MbMelganTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    statsPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Caching\n */\nexport class Caching implements GrpcMessage {\n  static id = 'ondewo.t2s.Caching';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Caching();\n    Caching.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Caching) {\n    _instance.active = _instance.active || false;\n    _instance.memoryCacheMaxSize = _instance.memoryCacheMaxSize || '0';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.loadCache = _instance.loadCache || false;\n    _instance.saveCache = _instance.saveCache || false;\n    _instance.cacheSaveDir = _instance.cacheSaveDir || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Caching,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.active = _reader.readBool();\n          break;\n        case 2:\n          _instance.memoryCacheMaxSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.loadCache = _reader.readBool();\n          break;\n        case 5:\n          _instance.saveCache = _reader.readBool();\n          break;\n        case 6:\n          _instance.cacheSaveDir = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Caching.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Caching, _writer: BinaryWriter) {\n    if (_instance.active) {\n      _writer.writeBool(1, _instance.active);\n    }\n    if (_instance.memoryCacheMaxSize) {\n      _writer.writeInt64String(2, _instance.memoryCacheMaxSize);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(3, _instance.samplingRate);\n    }\n    if (_instance.loadCache) {\n      _writer.writeBool(4, _instance.loadCache);\n    }\n    if (_instance.saveCache) {\n      _writer.writeBool(5, _instance.saveCache);\n    }\n    if (_instance.cacheSaveDir) {\n      _writer.writeString(6, _instance.cacheSaveDir);\n    }\n  }\n\n  private _active?: boolean;\n  private _memoryCacheMaxSize?: string;\n  private _samplingRate?: string;\n  private _loadCache?: boolean;\n  private _saveCache?: boolean;\n  private _cacheSaveDir?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Caching to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Caching.AsObject>) {\n    _value = _value || {};\n    this.active = _value.active;\n    this.memoryCacheMaxSize = _value.memoryCacheMaxSize;\n    this.samplingRate = _value.samplingRate;\n    this.loadCache = _value.loadCache;\n    this.saveCache = _value.saveCache;\n    this.cacheSaveDir = _value.cacheSaveDir;\n    Caching.refineValues(this);\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get memoryCacheMaxSize(): string | undefined {\n    return this._memoryCacheMaxSize;\n  }\n  set memoryCacheMaxSize(value: string | undefined) {\n    this._memoryCacheMaxSize = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get loadCache(): boolean | undefined {\n    return this._loadCache;\n  }\n  set loadCache(value: boolean | undefined) {\n    this._loadCache = value;\n  }\n  get saveCache(): boolean | undefined {\n    return this._saveCache;\n  }\n  set saveCache(value: boolean | undefined) {\n    this._saveCache = value;\n  }\n  get cacheSaveDir(): string | undefined {\n    return this._cacheSaveDir;\n  }\n  set cacheSaveDir(value: string | undefined) {\n    this._cacheSaveDir = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Caching.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Caching.AsObject {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Caching.AsProtobufJSON {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n}\nexport module Caching {\n  /**\n   * Standard JavaScript object representation for Caching\n   */\n  export interface AsObject {\n    active?: boolean;\n    memoryCacheMaxSize?: string;\n    samplingRate?: string;\n    loadCache?: boolean;\n    saveCache?: boolean;\n    cacheSaveDir?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Caching\n   */\n  export interface AsProtobufJSON {\n    active?: boolean;\n    memoryCacheMaxSize?: string;\n    samplingRate?: string;\n    loadCache?: boolean;\n    saveCache?: boolean;\n    cacheSaveDir?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Normalization\n */\nexport class Normalization implements GrpcMessage {\n  static id = 'ondewo.t2s.Normalization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Normalization) {\n    _instance.language = _instance.language || '';\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.customPhonemizerId = _instance.customPhonemizerId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Normalization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          _instance.customPhonemizerId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Normalization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(2, _instance.pipeline);\n    }\n    if (_instance.customPhonemizerId) {\n      _writer.writeString(3, _instance.customPhonemizerId);\n    }\n  }\n\n  private _language?: string;\n  private _pipeline?: string[];\n  private _customPhonemizerId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Normalization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Normalization.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.pipeline = (_value.pipeline || []).slice();\n    this.customPhonemizerId = _value.customPhonemizerId;\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get customPhonemizerId(): string | undefined {\n    return this._customPhonemizerId;\n  }\n  set customPhonemizerId(value: string | undefined) {\n    this._customPhonemizerId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Normalization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Normalization.AsObject {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice(),\n      customPhonemizerId: this.customPhonemizerId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Normalization.AsProtobufJSON {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice(),\n      customPhonemizerId: this.customPhonemizerId\n    };\n  }\n}\nexport module Normalization {\n  /**\n   * Standard JavaScript object representation for Normalization\n   */\n  export interface AsObject {\n    language?: string;\n    pipeline?: string[];\n    customPhonemizerId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Normalization\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    pipeline?: string[];\n    customPhonemizerId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Postprocessing\n */\nexport class Postprocessing implements GrpcMessage {\n  static id = 'ondewo.t2s.Postprocessing';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Postprocessing();\n    Postprocessing.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Postprocessing) {\n    _instance.silenceSecs = _instance.silenceSecs || 0;\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.logmmse = _instance.logmmse || undefined;\n    _instance.wiener = _instance.wiener || undefined;\n    _instance.apodization = _instance.apodization || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Postprocessing,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.silenceSecs = _reader.readFloat();\n          break;\n        case 2:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          _instance.logmmse = new Logmnse();\n          _reader.readMessage(\n            _instance.logmmse,\n            Logmnse.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.wiener = new Wiener();\n          _reader.readMessage(\n            _instance.wiener,\n            Wiener.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.apodization = new Apodization();\n          _reader.readMessage(\n            _instance.apodization,\n            Apodization.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Postprocessing.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Postprocessing,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.silenceSecs) {\n      _writer.writeFloat(1, _instance.silenceSecs);\n    }\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(2, _instance.pipeline);\n    }\n    if (_instance.logmmse) {\n      _writer.writeMessage(\n        3,\n        _instance.logmmse as any,\n        Logmnse.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wiener) {\n      _writer.writeMessage(\n        4,\n        _instance.wiener as any,\n        Wiener.serializeBinaryToWriter\n      );\n    }\n    if (_instance.apodization) {\n      _writer.writeMessage(\n        5,\n        _instance.apodization as any,\n        Apodization.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _silenceSecs?: number;\n  private _pipeline?: string[];\n  private _logmmse?: Logmnse;\n  private _wiener?: Wiener;\n  private _apodization?: Apodization;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Postprocessing to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Postprocessing.AsObject>) {\n    _value = _value || {};\n    this.silenceSecs = _value.silenceSecs;\n    this.pipeline = (_value.pipeline || []).slice();\n    this.logmmse = _value.logmmse ? new Logmnse(_value.logmmse) : undefined;\n    this.wiener = _value.wiener ? new Wiener(_value.wiener) : undefined;\n    this.apodization = _value.apodization\n      ? new Apodization(_value.apodization)\n      : undefined;\n    Postprocessing.refineValues(this);\n  }\n  get silenceSecs(): number | undefined {\n    return this._silenceSecs;\n  }\n  set silenceSecs(value: number | undefined) {\n    this._silenceSecs = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get logmmse(): Logmnse | undefined {\n    return this._logmmse;\n  }\n  set logmmse(value: Logmnse | undefined) {\n    this._logmmse = value;\n  }\n  get wiener(): Wiener | undefined {\n    return this._wiener;\n  }\n  set wiener(value: Wiener | undefined) {\n    this._wiener = value;\n  }\n  get apodization(): Apodization | undefined {\n    return this._apodization;\n  }\n  set apodization(value: Apodization | undefined) {\n    this._apodization = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Postprocessing.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Postprocessing.AsObject {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toObject() : undefined,\n      wiener: this.wiener ? this.wiener.toObject() : undefined,\n      apodization: this.apodization ? this.apodization.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Postprocessing.AsProtobufJSON {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toProtobufJSON(options) : null,\n      wiener: this.wiener ? this.wiener.toProtobufJSON(options) : null,\n      apodization: this.apodization\n        ? this.apodization.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Postprocessing {\n  /**\n   * Standard JavaScript object representation for Postprocessing\n   */\n  export interface AsObject {\n    silenceSecs?: number;\n    pipeline?: string[];\n    logmmse?: Logmnse.AsObject;\n    wiener?: Wiener.AsObject;\n    apodization?: Apodization.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Postprocessing\n   */\n  export interface AsProtobufJSON {\n    silenceSecs?: number;\n    pipeline?: string[];\n    logmmse?: Logmnse.AsProtobufJSON | null;\n    wiener?: Wiener.AsProtobufJSON | null;\n    apodization?: Apodization.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Logmnse\n */\nexport class Logmnse implements GrpcMessage {\n  static id = 'ondewo.t2s.Logmnse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Logmnse();\n    Logmnse.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Logmnse) {\n    _instance.initialNoise = _instance.initialNoise || '0';\n    _instance.windowSize = _instance.windowSize || '0';\n    _instance.noiseThreshold = _instance.noiseThreshold || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Logmnse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.initialNoise = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.windowSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.noiseThreshold = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Logmnse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Logmnse, _writer: BinaryWriter) {\n    if (_instance.initialNoise) {\n      _writer.writeInt64String(1, _instance.initialNoise);\n    }\n    if (_instance.windowSize) {\n      _writer.writeInt64String(2, _instance.windowSize);\n    }\n    if (_instance.noiseThreshold) {\n      _writer.writeFloat(3, _instance.noiseThreshold);\n    }\n  }\n\n  private _initialNoise?: string;\n  private _windowSize?: string;\n  private _noiseThreshold?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Logmnse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Logmnse.AsObject>) {\n    _value = _value || {};\n    this.initialNoise = _value.initialNoise;\n    this.windowSize = _value.windowSize;\n    this.noiseThreshold = _value.noiseThreshold;\n    Logmnse.refineValues(this);\n  }\n  get initialNoise(): string | undefined {\n    return this._initialNoise;\n  }\n  set initialNoise(value: string | undefined) {\n    this._initialNoise = value;\n  }\n  get windowSize(): string | undefined {\n    return this._windowSize;\n  }\n  set windowSize(value: string | undefined) {\n    this._windowSize = value;\n  }\n  get noiseThreshold(): number | undefined {\n    return this._noiseThreshold;\n  }\n  set noiseThreshold(value: number | undefined) {\n    this._noiseThreshold = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Logmnse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Logmnse.AsObject {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Logmnse.AsProtobufJSON {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n}\nexport module Logmnse {\n  /**\n   * Standard JavaScript object representation for Logmnse\n   */\n  export interface AsObject {\n    initialNoise?: string;\n    windowSize?: string;\n    noiseThreshold?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Logmnse\n   */\n  export interface AsProtobufJSON {\n    initialNoise?: string;\n    windowSize?: string;\n    noiseThreshold?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Wiener\n */\nexport class Wiener implements GrpcMessage {\n  static id = 'ondewo.t2s.Wiener';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wiener();\n    Wiener.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wiener) {\n    _instance.frameLen = _instance.frameLen || '0';\n    _instance.lpcOrder = _instance.lpcOrder || '0';\n    _instance.iterations = _instance.iterations || '0';\n    _instance.alpha = _instance.alpha || 0;\n    _instance.thresh = _instance.thresh || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Wiener, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.frameLen = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.lpcOrder = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.iterations = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.alpha = _reader.readFloat();\n          break;\n        case 5:\n          _instance.thresh = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wiener.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Wiener, _writer: BinaryWriter) {\n    if (_instance.frameLen) {\n      _writer.writeInt64String(1, _instance.frameLen);\n    }\n    if (_instance.lpcOrder) {\n      _writer.writeInt64String(2, _instance.lpcOrder);\n    }\n    if (_instance.iterations) {\n      _writer.writeInt64String(3, _instance.iterations);\n    }\n    if (_instance.alpha) {\n      _writer.writeFloat(4, _instance.alpha);\n    }\n    if (_instance.thresh) {\n      _writer.writeFloat(5, _instance.thresh);\n    }\n  }\n\n  private _frameLen?: string;\n  private _lpcOrder?: string;\n  private _iterations?: string;\n  private _alpha?: number;\n  private _thresh?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wiener to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wiener.AsObject>) {\n    _value = _value || {};\n    this.frameLen = _value.frameLen;\n    this.lpcOrder = _value.lpcOrder;\n    this.iterations = _value.iterations;\n    this.alpha = _value.alpha;\n    this.thresh = _value.thresh;\n    Wiener.refineValues(this);\n  }\n  get frameLen(): string | undefined {\n    return this._frameLen;\n  }\n  set frameLen(value: string | undefined) {\n    this._frameLen = value;\n  }\n  get lpcOrder(): string | undefined {\n    return this._lpcOrder;\n  }\n  set lpcOrder(value: string | undefined) {\n    this._lpcOrder = value;\n  }\n  get iterations(): string | undefined {\n    return this._iterations;\n  }\n  set iterations(value: string | undefined) {\n    this._iterations = value;\n  }\n  get alpha(): number | undefined {\n    return this._alpha;\n  }\n  set alpha(value: number | undefined) {\n    this._alpha = value;\n  }\n  get thresh(): number | undefined {\n    return this._thresh;\n  }\n  set thresh(value: number | undefined) {\n    this._thresh = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wiener.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wiener.AsObject {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wiener.AsProtobufJSON {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n}\nexport module Wiener {\n  /**\n   * Standard JavaScript object representation for Wiener\n   */\n  export interface AsObject {\n    frameLen?: string;\n    lpcOrder?: string;\n    iterations?: string;\n    alpha?: number;\n    thresh?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Wiener\n   */\n  export interface AsProtobufJSON {\n    frameLen?: string;\n    lpcOrder?: string;\n    iterations?: string;\n    alpha?: number;\n    thresh?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Apodization\n */\nexport class Apodization implements GrpcMessage {\n  static id = 'ondewo.t2s.Apodization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Apodization();\n    Apodization.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Apodization) {\n    _instance.apodizationSecs = _instance.apodizationSecs || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Apodization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.apodizationSecs = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Apodization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Apodization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.apodizationSecs) {\n      _writer.writeFloat(1, _instance.apodizationSecs);\n    }\n  }\n\n  private _apodizationSecs?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Apodization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Apodization.AsObject>) {\n    _value = _value || {};\n    this.apodizationSecs = _value.apodizationSecs;\n    Apodization.refineValues(this);\n  }\n  get apodizationSecs(): number | undefined {\n    return this._apodizationSecs;\n  }\n  set apodizationSecs(value: number | undefined) {\n    this._apodizationSecs = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Apodization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Apodization.AsObject {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Apodization.AsProtobufJSON {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n}\nexport module Apodization {\n  /**\n   * Standard JavaScript object representation for Apodization\n   */\n  export interface AsObject {\n    apodizationSecs?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Apodization\n   */\n  export interface AsProtobufJSON {\n    apodizationSecs?: number;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\n/**\n * Message implementation for ondewo.t2s.PhonemizerId\n */\nexport class PhonemizerId implements GrpcMessage {\n  static id = 'ondewo.t2s.PhonemizerId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PhonemizerId();\n    PhonemizerId.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PhonemizerId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PhonemizerId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PhonemizerId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PhonemizerId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PhonemizerId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PhonemizerId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    PhonemizerId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PhonemizerId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PhonemizerId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PhonemizerId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module PhonemizerId {\n  /**\n   * Standard JavaScript object representation for PhonemizerId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for PhonemizerId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CustomPhonemizerProto\n */\nexport class CustomPhonemizerProto implements GrpcMessage {\n  static id = 'ondewo.t2s.CustomPhonemizerProto';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CustomPhonemizerProto();\n    CustomPhonemizerProto.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CustomPhonemizerProto) {\n    _instance.id = _instance.id || '';\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CustomPhonemizerProto,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Map();\n          _reader.readMessage(\n            messageInitializer2,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer2);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CustomPhonemizerProto.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CustomPhonemizerProto,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CustomPhonemizerProto to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CustomPhonemizerProto.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    CustomPhonemizerProto.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CustomPhonemizerProto.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CustomPhonemizerProto.AsObject {\n    return {\n      id: this.id,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CustomPhonemizerProto.AsProtobufJSON {\n    return {\n      id: this.id,\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module CustomPhonemizerProto {\n  /**\n   * Standard JavaScript object representation for CustomPhonemizerProto\n   */\n  export interface AsObject {\n    id?: string;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for CustomPhonemizerProto\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Map\n */\nexport class Map implements GrpcMessage {\n  static id = 'ondewo.t2s.Map';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Map();\n    Map.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Map) {\n    _instance.word = _instance.word || '';\n    _instance.phonemeGroups = _instance.phonemeGroups || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Map, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.word = _reader.readString();\n          break;\n        case 2:\n          _instance.phonemeGroups = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Map.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Map, _writer: BinaryWriter) {\n    if (_instance.word) {\n      _writer.writeString(1, _instance.word);\n    }\n    if (_instance.phonemeGroups) {\n      _writer.writeString(2, _instance.phonemeGroups);\n    }\n  }\n\n  private _word?: string;\n  private _phonemeGroups?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Map to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Map.AsObject>) {\n    _value = _value || {};\n    this.word = _value.word;\n    this.phonemeGroups = _value.phonemeGroups;\n    Map.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get phonemeGroups(): string | undefined {\n    return this._phonemeGroups;\n  }\n  set phonemeGroups(value: string | undefined) {\n    this._phonemeGroups = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Map.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Map.AsObject {\n    return {\n      word: this.word,\n      phonemeGroups: this.phonemeGroups\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Map.AsProtobufJSON {\n    return {\n      word: this.word,\n      phonemeGroups: this.phonemeGroups\n    };\n  }\n}\nexport module Map {\n  /**\n   * Standard JavaScript object representation for Map\n   */\n  export interface AsObject {\n    word?: string;\n    phonemeGroups?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Map\n   */\n  export interface AsProtobufJSON {\n    word?: string;\n    phonemeGroups?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListCustomPhonemizerResponse\n */\nexport class ListCustomPhonemizerResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListCustomPhonemizerResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListCustomPhonemizerResponse();\n    ListCustomPhonemizerResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListCustomPhonemizerResponse) {\n    _instance.phonemizers = _instance.phonemizers || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListCustomPhonemizerResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new CustomPhonemizerProto();\n          _reader.readMessage(\n            messageInitializer1,\n            CustomPhonemizerProto.deserializeBinaryFromReader\n          );\n          (_instance.phonemizers = _instance.phonemizers || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListCustomPhonemizerResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListCustomPhonemizerResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.phonemizers && _instance.phonemizers.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.phonemizers as any,\n        CustomPhonemizerProto.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _phonemizers?: CustomPhonemizerProto[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListCustomPhonemizerResponse to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListCustomPhonemizerResponse.AsObject>\n  ) {\n    _value = _value || {};\n    this.phonemizers = (_value.phonemizers || []).map(\n      m => new CustomPhonemizerProto(m)\n    );\n    ListCustomPhonemizerResponse.refineValues(this);\n  }\n  get phonemizers(): CustomPhonemizerProto[] | undefined {\n    return this._phonemizers;\n  }\n  set phonemizers(value: CustomPhonemizerProto[] | undefined) {\n    this._phonemizers = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListCustomPhonemizerResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListCustomPhonemizerResponse.AsObject {\n    return {\n      phonemizers: (this.phonemizers || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListCustomPhonemizerResponse.AsProtobufJSON {\n    return {\n      phonemizers: (this.phonemizers || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module ListCustomPhonemizerResponse {\n  /**\n   * Standard JavaScript object representation for ListCustomPhonemizerResponse\n   */\n  export interface AsObject {\n    phonemizers?: CustomPhonemizerProto.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListCustomPhonemizerResponse\n   */\n  export interface AsProtobufJSON {\n    phonemizers?: CustomPhonemizerProto.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListCustomPhonemizerRequest\n */\nexport class ListCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListCustomPhonemizerRequest();\n    ListCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListCustomPhonemizerRequest) {\n    _instance.pipelineIds = _instance.pipelineIds || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.pipelineIds = _instance.pipelineIds || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineIds && _instance.pipelineIds.length) {\n      _writer.writeRepeatedString(1, _instance.pipelineIds);\n    }\n  }\n\n  private _pipelineIds?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListCustomPhonemizerRequest.AsObject>) {\n    _value = _value || {};\n    this.pipelineIds = (_value.pipelineIds || []).slice();\n    ListCustomPhonemizerRequest.refineValues(this);\n  }\n  get pipelineIds(): string[] | undefined {\n    return this._pipelineIds;\n  }\n  set pipelineIds(value: string[] | undefined) {\n    this._pipelineIds = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListCustomPhonemizerRequest.AsObject {\n    return {\n      pipelineIds: (this.pipelineIds || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      pipelineIds: (this.pipelineIds || []).slice()\n    };\n  }\n}\nexport module ListCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for ListCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    pipelineIds?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    pipelineIds?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.UpdateCustomPhonemizerRequest\n */\nexport class UpdateCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.UpdateCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UpdateCustomPhonemizerRequest();\n    UpdateCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UpdateCustomPhonemizerRequest) {\n    _instance.id = _instance.id || '';\n    _instance.updateMethod = _instance.updateMethod || 0;\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UpdateCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.updateMethod = _reader.readEnum();\n          break;\n        case 3:\n          const messageInitializer3 = new Map();\n          _reader.readMessage(\n            messageInitializer3,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer3);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UpdateCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UpdateCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.updateMethod) {\n      _writer.writeEnum(2, _instance.updateMethod);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _updateMethod?: UpdateCustomPhonemizerRequest.UpdateMethod;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UpdateCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<UpdateCustomPhonemizerRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.updateMethod = _value.updateMethod;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    UpdateCustomPhonemizerRequest.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get updateMethod(): UpdateCustomPhonemizerRequest.UpdateMethod | undefined {\n    return this._updateMethod;\n  }\n  set updateMethod(\n    value: UpdateCustomPhonemizerRequest.UpdateMethod | undefined\n  ) {\n    this._updateMethod = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UpdateCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UpdateCustomPhonemizerRequest.AsObject {\n    return {\n      id: this.id,\n      updateMethod: this.updateMethod,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UpdateCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      id: this.id,\n      updateMethod:\n        UpdateCustomPhonemizerRequest.UpdateMethod[this.updateMethod ?? 0],\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module UpdateCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for UpdateCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    id?: string;\n    updateMethod?: UpdateCustomPhonemizerRequest.UpdateMethod;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for UpdateCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    updateMethod?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n  export enum UpdateMethod {\n    extend_hard = 0,\n    extend_soft = 1,\n    replace = 2\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CreateCustomPhonemizerRequest\n */\nexport class CreateCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.CreateCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CreateCustomPhonemizerRequest();\n    CreateCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CreateCustomPhonemizerRequest) {\n    _instance.prefix = _instance.prefix || '';\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CreateCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.prefix = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Map();\n          _reader.readMessage(\n            messageInitializer2,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer2);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CreateCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CreateCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.prefix) {\n      _writer.writeString(1, _instance.prefix);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _prefix?: string;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CreateCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<CreateCustomPhonemizerRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.prefix = _value.prefix;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    CreateCustomPhonemizerRequest.refineValues(this);\n  }\n  get prefix(): string | undefined {\n    return this._prefix;\n  }\n  set prefix(value: string | undefined) {\n    this._prefix = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CreateCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CreateCustomPhonemizerRequest.AsObject {\n    return {\n      prefix: this.prefix,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CreateCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      prefix: this.prefix,\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module CreateCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for CreateCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    prefix?: string;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for CreateCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    prefix?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Text2Speech.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_TEXT2_SPEECH_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_TEXT2_SPEECH_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for CustomPhonemizers.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './text-to-speech.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_TEXT2_SPEECH_CLIENT_SETTINGS } from './text-to-speech.pbconf';\n/**\n * Service client implementation for ondewo.t2s.Text2Speech\n */\n@Injectable({ providedIn: 'any' })\nexport class Text2SpeechClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/Synthesize\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.SynthesizeResponse>>\n     */\n    synthesize: (\n      requestData: thisProto.SynthesizeRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.SynthesizeResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/Synthesize',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.SynthesizeRequest,\n        responseClass: thisProto.SynthesizeResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/GetT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Text2SpeechConfig>>\n     */\n    getT2sPipeline: (\n      requestData: thisProto.T2sPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Text2SpeechConfig>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/GetT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.T2sPipelineId,\n        responseClass: thisProto.Text2SpeechConfig\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/CreateT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.T2sPipelineId>>\n     */\n    createT2sPipeline: (\n      requestData: thisProto.Text2SpeechConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.T2sPipelineId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/CreateT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Text2SpeechConfig,\n        responseClass: thisProto.T2sPipelineId\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/DeleteT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteT2sPipeline: (\n      requestData: thisProto.T2sPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/DeleteT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.T2sPipelineId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/UpdateT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    updateT2sPipeline: (\n      requestData: thisProto.Text2SpeechConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/UpdateT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Text2SpeechConfig,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sPipelines\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>>\n     */\n    listT2sPipelines: (\n      requestData: thisProto.ListT2sPipelinesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sPipelines',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sPipelinesRequest,\n        responseClass: thisProto.ListT2sPipelinesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sLanguages\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sLanguagesResponse>>\n     */\n    listT2sLanguages: (\n      requestData: thisProto.ListT2sLanguagesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sLanguagesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sLanguages',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sLanguagesRequest,\n        responseClass: thisProto.ListT2sLanguagesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sDomains\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sDomainsResponse>>\n     */\n    listT2sDomains: (\n      requestData: thisProto.ListT2sDomainsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sDomainsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sDomains',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sDomainsRequest,\n        responseClass: thisProto.ListT2sDomainsResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_TEXT2_SPEECH_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.Text2Speech',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/Synthesize\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.SynthesizeResponse>\n   */\n  synthesize(\n    requestData: thisProto.SynthesizeRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.SynthesizeResponse> {\n    return this.$raw\n      .synthesize(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/GetT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Text2SpeechConfig>\n   */\n  getT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Text2SpeechConfig> {\n    return this.$raw\n      .getT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/CreateT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.T2sPipelineId>\n   */\n  createT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.T2sPipelineId> {\n    return this.$raw\n      .createT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/DeleteT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/UpdateT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  updateT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .updateT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sPipelines\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sPipelinesResponse>\n   */\n  listT2sPipelines(\n    requestData: thisProto.ListT2sPipelinesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sPipelinesResponse> {\n    return this.$raw\n      .listT2sPipelines(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sLanguages\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sLanguagesResponse>\n   */\n  listT2sLanguages(\n    requestData: thisProto.ListT2sLanguagesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sLanguagesResponse> {\n    return this.$raw\n      .listT2sLanguages(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sDomains\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sDomainsResponse>\n   */\n  listT2sDomains(\n    requestData: thisProto.ListT2sDomainsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sDomainsResponse> {\n    return this.$raw\n      .listT2sDomains(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './custom-phonemizer.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS } from './custom-phonemizer.pbconf';\n/**\n * Service client implementation for ondewo.t2s.CustomPhonemizers\n */\n@Injectable({ providedIn: 'any' })\nexport class CustomPhonemizersClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.CustomPhonemizerProto>>\n     */\n    getCustomPhonemizer: (\n      requestData: thisProto.PhonemizerId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.CustomPhonemizerProto>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.PhonemizerId,\n        responseClass: thisProto.CustomPhonemizerProto\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.PhonemizerId>>\n     */\n    createCustomPhonemizer: (\n      requestData: thisProto.CreateCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.PhonemizerId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.CreateCustomPhonemizerRequest,\n        responseClass: thisProto.PhonemizerId\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteCustomPhonemizer: (\n      requestData: thisProto.PhonemizerId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.PhonemizerId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.CustomPhonemizerProto>>\n     */\n    updateCustomPhonemizer: (\n      requestData: thisProto.UpdateCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.CustomPhonemizerProto>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.UpdateCustomPhonemizerRequest,\n        responseClass: thisProto.CustomPhonemizerProto\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListCustomPhonemizerResponse>>\n     */\n    listCustomPhonemizer: (\n      requestData: thisProto.ListCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListCustomPhonemizerResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListCustomPhonemizerRequest,\n        responseClass: thisProto.ListCustomPhonemizerResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.CustomPhonemizers',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.CustomPhonemizerProto>\n   */\n  getCustomPhonemizer(\n    requestData: thisProto.PhonemizerId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.CustomPhonemizerProto> {\n    return this.$raw\n      .getCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.PhonemizerId>\n   */\n  createCustomPhonemizer(\n    requestData: thisProto.CreateCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.PhonemizerId> {\n    return this.$raw\n      .createCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteCustomPhonemizer(\n    requestData: thisProto.PhonemizerId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.CustomPhonemizerProto>\n   */\n  updateCustomPhonemizer(\n    requestData: thisProto.UpdateCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.CustomPhonemizerProto> {\n    return this.$raw\n      .updateCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListCustomPhonemizerResponse>\n   */\n  listCustomPhonemizer(\n    requestData: thisProto.ListCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListCustomPhonemizerResponse> {\n    return this.$raw\n      .listCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n"]}