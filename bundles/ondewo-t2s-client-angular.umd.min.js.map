{"version":3,"sources":["../../api/ondewo/t2s/text-to-speech.pb.ts","../../api/ondewo/t2s/custom-phonemizer.pb.ts","../../api/ondewo/t2s/text-to-speech.pbconf.ts","../../api/ondewo/t2s/custom-phonemizer.pbconf.ts","../../api/ondewo/t2s/text-to-speech.pbsc.ts","../../api/ondewo/t2s/custom-phonemizer.pbsc.ts"],"names":["Pcm","AudioFormat","SynthesizeRequest","_value","this","text","config","RequestConfig","undefined","refineValues","deserializeBinary","bytes","instance","deserializeBinaryFromReader","BinaryReader","_instance","_reader","nextField","isEndGroup","getFieldNumber","readString","readMessage","skipField","serializeBinaryToWriter","_writer","writeString","writeMessage","Object","defineProperty","prototype","_text","value","_config","serializeBinary","writer","BinaryWriter","getResultBuffer","toObject","toJSON","toProtobufJSON","options","id","BatchSynthesizeRequest","batchRequest","map","m","messageInitializer1","push","length","writeRepeatedMessage","_batchRequest","OneofUseCacheCase","OneofAudioFormatCase","OneofPcmCase","OneofSampleRateCase","OneofNoiseScaleCase","OneofLengthScaleCase","BatchSynthesizeResponse","batchResponse","SynthesizeResponse","_batchResponse","_oneofLengthScale","none","_oneofNoiseScale","_oneofSampleRate","_oneofPcm","_oneofAudioFormat","_oneofUseCache","t2sPipelineId","lengthScale","noiseScale","sampleRate","pcm","audioFormat","useCache","readFloat","readInt32","readEnum","readBool","writeFloat","writeInt32","writeEnum","writeBool","_t2sPipelineId","_lengthScale","_noiseScale","_sampleRate","_pcm","_audioFormat","_useCache","_a","_b","_c","_d","_e","audioUuid","audio","generationTime","audioLength","Uint8Array","readBytes","writeBytes","_audioUuid","_audio","_generationTime","_audioLength","subarray","uint8ArrayToBase64","GetServiceInfoResponse","version","_version","ListT2sPipelinesRequest","languages","slice","speakerSexes","pipelineOwners","speakerNames","domains","writeRepeatedString","_languages","_speakerSexes","_pipelineOwners","_speakerNames","_domains","ListT2sPipelinesResponse","pipelines","Text2SpeechConfig","_pipelines","ListT2sLanguagesRequest","ListT2sLanguagesResponse","ListT2sDomainsRequest","ListT2sDomainsResponse","T2sPipelineId","_id","description","Description","active","inference","Inference","normalization","Normalization","postprocessing","Postprocessing","_description","_active","_inference","_normalization","_postprocessing","language","speakerSex","pipelineOwner","comments","speakerName","domain","_language","_speakerSex","_pipelineOwner","_comments","_speakerName","_domain","type","compositeInference","CompositeInference","caching","Caching","_type","_compositeInference","_caching","text2mel","Text2Mel","mel2audio","Mel2Audio","_text2mel","_mel2audio","glowTts","GlowTTS","glowTtsTriton","GlowTTSTriton","_glowTts","_glowTtsTriton","batchSize","useGpu","path","cleaners","paramConfigPath","readInt64String","writeInt64String","_batchSize","_useGpu","_path","_cleaners","_paramConfigPath","maxTextLength","tritonUrl","tritonModelName","_maxTextLength","_tritonUrl","_tritonModelName","mbMelganTriton","MbMelganTriton","hifiGan","HiFiGan","hifiGanTriton","HiFiGanTriton","_mbMelganTriton","_hifiGan","_hifiGanTriton","configPath","modelPath","_configPath","_modelPath","statsPath","_statsPath","memoryCacheMaxSize","samplingRate","loadCache","saveCache","cacheSaveDir","_memoryCacheMaxSize","_samplingRate","_loadCache","_saveCache","_cacheSaveDir","pipeline","customPhonemizerId","_pipeline","_customPhonemizerId","silenceSecs","logmmse","Logmnse","wiener","Wiener","apodization","Apodization","_silenceSecs","_logmmse","_wiener","_apodization","initialNoise","windowSize","noiseThreshold","_initialNoise","_windowSize","_noiseThreshold","frameLen","lpcOrder","iterations","alpha","thresh","_frameLen","_lpcOrder","_iterations","_alpha","_thresh","apodizationSecs","_apodizationSecs","PhonemizerId","CustomPhonemizerProto","maps","Map","messageInitializer2","_maps","word","phonemeGroups","_word","_phonemeGroups","ListCustomPhonemizerResponse","phonemizers","_phonemizers","UpdateMethod","UpdateCustomPhonemizerRequest","ListCustomPhonemizerRequest","pipelineIds","_pipelineIds","updateMethod","messageInitializer3","_updateMethod","CreateCustomPhonemizerRequest","prefix","_prefix","GRPC_TEXT2_SPEECH_CLIENT_SETTINGS","InjectionToken","GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS","Text2SpeechClient","settings","clientFactory","handler","_this","$raw","synthesize","requestData","requestMetadata","GrpcMetadata","handle","GrpcCallType","unary","client","requestClass","thisProto.SynthesizeRequest","responseClass","thisProto.SynthesizeResponse","batchSynthesize","thisProto.BatchSynthesizeRequest","thisProto.BatchSynthesizeResponse","getT2sPipeline","thisProto.T2sPipelineId","thisProto.Text2SpeechConfig","createT2sPipeline","deleteT2sPipeline","googleProtobuf000.Empty","updateT2sPipeline","listT2sPipelines","thisProto.ListT2sPipelinesRequest","thisProto.ListT2sPipelinesResponse","listT2sLanguages","thisProto.ListT2sLanguagesRequest","thisProto.ListT2sLanguagesResponse","listT2sDomains","thisProto.ListT2sDomainsRequest","thisProto.ListT2sDomainsResponse","createClient","pipe","throwStatusErrors","takeMessages","Injectable","args","providedIn","Optional","Inject","GRPC_CLIENT_FACTORY","GrpcHandler","CustomPhonemizersClient","getCustomPhonemizer","thisProto.PhonemizerId","thisProto.CustomPhonemizerProto","createCustomPhonemizer","thisProto.CreateCustomPhonemizerRequest","deleteCustomPhonemizer","updateCustomPhonemizer","thisProto.UpdateCustomPhonemizerRequest","listCustomPhonemizer","thisProto.ListCustomPhonemizerRequest","thisProto.ListCustomPhonemizerResponse"],"mappings":"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","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions,\n  uint8ArrayToBase64\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nexport enum Pcm {\n  PCM_16 = 0,\n  PCM_24 = 1,\n  PCM_32 = 2,\n  PCM_S8 = 3,\n  PCM_U8 = 4,\n  FLOAT = 5,\n  DOUBLE = 6\n}\nexport enum AudioFormat {\n  wav = 0,\n  flac = 1,\n  caf = 2,\n  mp3 = 3,\n  aac = 4,\n  ogg = 5,\n  wma = 6\n}\n/**\n * Message implementation for ondewo.t2s.SynthesizeRequest\n */\nexport class SynthesizeRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.SynthesizeRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SynthesizeRequest();\n    SynthesizeRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SynthesizeRequest) {\n    _instance.text = _instance.text || '';\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SynthesizeRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.text = _reader.readString();\n          break;\n        case 2:\n          _instance.config = new RequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            RequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SynthesizeRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SynthesizeRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.text) {\n      _writer.writeString(1, _instance.text);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        2,\n        _instance.config as any,\n        RequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _text?: string;\n  private _config?: RequestConfig;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SynthesizeRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SynthesizeRequest.AsObject>) {\n    _value = _value || {};\n    this.text = _value.text;\n    this.config = _value.config ? new RequestConfig(_value.config) : undefined;\n    SynthesizeRequest.refineValues(this);\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get config(): RequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: RequestConfig | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SynthesizeRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SynthesizeRequest.AsObject {\n    return {\n      text: this.text,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SynthesizeRequest.AsProtobufJSON {\n    return {\n      text: this.text,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module SynthesizeRequest {\n  /**\n   * Standard JavaScript object representation for SynthesizeRequest\n   */\n  export interface AsObject {\n    text?: string;\n    config?: RequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for SynthesizeRequest\n   */\n  export interface AsProtobufJSON {\n    text?: string;\n    config?: RequestConfig.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.BatchSynthesizeRequest\n */\nexport class BatchSynthesizeRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.BatchSynthesizeRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new BatchSynthesizeRequest();\n    BatchSynthesizeRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: BatchSynthesizeRequest) {\n    _instance.batchRequest = _instance.batchRequest || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: BatchSynthesizeRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new SynthesizeRequest();\n          _reader.readMessage(\n            messageInitializer1,\n            SynthesizeRequest.deserializeBinaryFromReader\n          );\n          (_instance.batchRequest = _instance.batchRequest || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    BatchSynthesizeRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: BatchSynthesizeRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.batchRequest && _instance.batchRequest.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.batchRequest as any,\n        SynthesizeRequest.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _batchRequest?: SynthesizeRequest[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of BatchSynthesizeRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<BatchSynthesizeRequest.AsObject>) {\n    _value = _value || {};\n    this.batchRequest = (_value.batchRequest || []).map(\n      m => new SynthesizeRequest(m)\n    );\n    BatchSynthesizeRequest.refineValues(this);\n  }\n  get batchRequest(): SynthesizeRequest[] | undefined {\n    return this._batchRequest;\n  }\n  set batchRequest(value: SynthesizeRequest[] | undefined) {\n    this._batchRequest = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    BatchSynthesizeRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): BatchSynthesizeRequest.AsObject {\n    return {\n      batchRequest: (this.batchRequest || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): BatchSynthesizeRequest.AsProtobufJSON {\n    return {\n      batchRequest: (this.batchRequest || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module BatchSynthesizeRequest {\n  /**\n   * Standard JavaScript object representation for BatchSynthesizeRequest\n   */\n  export interface AsObject {\n    batchRequest?: SynthesizeRequest.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for BatchSynthesizeRequest\n   */\n  export interface AsProtobufJSON {\n    batchRequest?: SynthesizeRequest.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.BatchSynthesizeResponse\n */\nexport class BatchSynthesizeResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.BatchSynthesizeResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new BatchSynthesizeResponse();\n    BatchSynthesizeResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: BatchSynthesizeResponse) {\n    _instance.batchResponse = _instance.batchResponse || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: BatchSynthesizeResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new SynthesizeResponse();\n          _reader.readMessage(\n            messageInitializer1,\n            SynthesizeResponse.deserializeBinaryFromReader\n          );\n          (_instance.batchResponse = _instance.batchResponse || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    BatchSynthesizeResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: BatchSynthesizeResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.batchResponse && _instance.batchResponse.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.batchResponse as any,\n        SynthesizeResponse.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _batchResponse?: SynthesizeResponse[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of BatchSynthesizeResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<BatchSynthesizeResponse.AsObject>) {\n    _value = _value || {};\n    this.batchResponse = (_value.batchResponse || []).map(\n      m => new SynthesizeResponse(m)\n    );\n    BatchSynthesizeResponse.refineValues(this);\n  }\n  get batchResponse(): SynthesizeResponse[] | undefined {\n    return this._batchResponse;\n  }\n  set batchResponse(value: SynthesizeResponse[] | undefined) {\n    this._batchResponse = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    BatchSynthesizeResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): BatchSynthesizeResponse.AsObject {\n    return {\n      batchResponse: (this.batchResponse || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): BatchSynthesizeResponse.AsProtobufJSON {\n    return {\n      batchResponse: (this.batchResponse || []).map(m =>\n        m.toProtobufJSON(options)\n      )\n    };\n  }\n}\nexport module BatchSynthesizeResponse {\n  /**\n   * Standard JavaScript object representation for BatchSynthesizeResponse\n   */\n  export interface AsObject {\n    batchResponse?: SynthesizeResponse.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for BatchSynthesizeResponse\n   */\n  export interface AsProtobufJSON {\n    batchResponse?: SynthesizeResponse.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.RequestConfig\n */\nexport class RequestConfig implements GrpcMessage {\n  static id = 'ondewo.t2s.RequestConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new RequestConfig();\n    RequestConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: RequestConfig) {\n    _instance.t2sPipelineId = _instance.t2sPipelineId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: RequestConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.t2sPipelineId = _reader.readString();\n          break;\n        case 2:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 3:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 4:\n          _instance.sampleRate = _reader.readInt32();\n          break;\n        case 5:\n          _instance.pcm = _reader.readEnum();\n          break;\n        case 6:\n          _instance.audioFormat = _reader.readEnum();\n          break;\n        case 7:\n          _instance.useCache = _reader.readBool();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    RequestConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: RequestConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.t2sPipelineId) {\n      _writer.writeString(1, _instance.t2sPipelineId);\n    }\n    if (_instance.lengthScale || _instance.lengthScale === 0) {\n      _writer.writeFloat(2, _instance.lengthScale);\n    }\n    if (_instance.noiseScale || _instance.noiseScale === 0) {\n      _writer.writeFloat(3, _instance.noiseScale);\n    }\n    if (_instance.sampleRate || _instance.sampleRate === 0) {\n      _writer.writeInt32(4, _instance.sampleRate);\n    }\n    if (_instance.pcm || _instance.pcm === 0) {\n      _writer.writeEnum(5, _instance.pcm);\n    }\n    if (_instance.audioFormat || _instance.audioFormat === 0) {\n      _writer.writeEnum(6, _instance.audioFormat);\n    }\n    if (_instance.useCache || _instance.useCache === false) {\n      _writer.writeBool(7, _instance.useCache);\n    }\n  }\n\n  private _t2sPipelineId?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _sampleRate?: number;\n  private _pcm?: Pcm;\n  private _audioFormat?: AudioFormat;\n  private _useCache?: boolean;\n\n  private _oneofLengthScale: RequestConfig.OneofLengthScaleCase =\n    RequestConfig.OneofLengthScaleCase.none;\n  private _oneofNoiseScale: RequestConfig.OneofNoiseScaleCase =\n    RequestConfig.OneofNoiseScaleCase.none;\n  private _oneofSampleRate: RequestConfig.OneofSampleRateCase =\n    RequestConfig.OneofSampleRateCase.none;\n  private _oneofPcm: RequestConfig.OneofPcmCase =\n    RequestConfig.OneofPcmCase.none;\n  private _oneofAudioFormat: RequestConfig.OneofAudioFormatCase =\n    RequestConfig.OneofAudioFormatCase.none;\n  private _oneofUseCache: RequestConfig.OneofUseCacheCase =\n    RequestConfig.OneofUseCacheCase.none;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of RequestConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<RequestConfig.AsObject>) {\n    _value = _value || {};\n    this.t2sPipelineId = _value.t2sPipelineId;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.sampleRate = _value.sampleRate;\n    this.pcm = _value.pcm;\n    this.audioFormat = _value.audioFormat;\n    this.useCache = _value.useCache;\n    RequestConfig.refineValues(this);\n  }\n  get t2sPipelineId(): string | undefined {\n    return this._t2sPipelineId;\n  }\n  set t2sPipelineId(value: string | undefined) {\n    this._t2sPipelineId = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofLengthScale = RequestConfig.OneofLengthScaleCase.lengthScale;\n    }\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofNoiseScale = RequestConfig.OneofNoiseScaleCase.noiseScale;\n    }\n    this._noiseScale = value;\n  }\n  get sampleRate(): number | undefined {\n    return this._sampleRate;\n  }\n  set sampleRate(value: number | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofSampleRate = RequestConfig.OneofSampleRateCase.sampleRate;\n    }\n    this._sampleRate = value;\n  }\n  get pcm(): Pcm | undefined {\n    return this._pcm;\n  }\n  set pcm(value: Pcm | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofPcm = RequestConfig.OneofPcmCase.pcm;\n    }\n    this._pcm = value;\n  }\n  get audioFormat(): AudioFormat | undefined {\n    return this._audioFormat;\n  }\n  set audioFormat(value: AudioFormat | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofAudioFormat = RequestConfig.OneofAudioFormatCase.audioFormat;\n    }\n    this._audioFormat = value;\n  }\n  get useCache(): boolean | undefined {\n    return this._useCache;\n  }\n  set useCache(value: boolean | undefined) {\n    if (value !== undefined && value !== null) {\n      this._oneofUseCache = RequestConfig.OneofUseCacheCase.useCache;\n    }\n    this._useCache = value;\n  }\n  get oneofLengthScale() {\n    return this._oneofLengthScale;\n  }\n  get oneofNoiseScale() {\n    return this._oneofNoiseScale;\n  }\n  get oneofSampleRate() {\n    return this._oneofSampleRate;\n  }\n  get oneofPcm() {\n    return this._oneofPcm;\n  }\n  get oneofAudioFormat() {\n    return this._oneofAudioFormat;\n  }\n  get oneofUseCache() {\n    return this._oneofUseCache;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    RequestConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): RequestConfig.AsObject {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      sampleRate: this.sampleRate,\n      pcm: this.pcm,\n      audioFormat: this.audioFormat,\n      useCache: this.useCache\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): RequestConfig.AsProtobufJSON {\n    return {\n      t2sPipelineId: this.t2sPipelineId,\n      lengthScale: this.lengthScale ?? null,\n      noiseScale: this.noiseScale ?? null,\n      sampleRate: this.sampleRate ?? null,\n      pcm: this.pcm === undefined ? null : Pcm[this.pcm ?? 0],\n      audioFormat:\n        this.audioFormat === undefined\n          ? null\n          : AudioFormat[this.audioFormat ?? 0],\n      useCache: this.useCache\n    };\n  }\n}\nexport module RequestConfig {\n  /**\n   * Standard JavaScript object representation for RequestConfig\n   */\n  export interface AsObject {\n    t2sPipelineId?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    sampleRate?: number;\n    pcm?: Pcm;\n    audioFormat?: AudioFormat;\n    useCache?: boolean;\n  }\n\n  /**\n   * Protobuf JSON representation for RequestConfig\n   */\n  export interface AsProtobufJSON {\n    t2sPipelineId?: string;\n    lengthScale?: number | null;\n    noiseScale?: number | null;\n    sampleRate?: number | null;\n    pcm?: string | null;\n    audioFormat?: string | null;\n    useCache?: boolean;\n  }\n  export enum OneofLengthScaleCase {\n    none = 0,\n    lengthScale = 1\n  }\n  export enum OneofNoiseScaleCase {\n    none = 0,\n    noiseScale = 1\n  }\n  export enum OneofSampleRateCase {\n    none = 0,\n    sampleRate = 1\n  }\n  export enum OneofPcmCase {\n    none = 0,\n    pcm = 1\n  }\n  export enum OneofAudioFormatCase {\n    none = 0,\n    audioFormat = 1\n  }\n  export enum OneofUseCacheCase {\n    none = 0,\n    useCache = 1\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.SynthesizeResponse\n */\nexport class SynthesizeResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.SynthesizeResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new SynthesizeResponse();\n    SynthesizeResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: SynthesizeResponse) {\n    _instance.audioUuid = _instance.audioUuid || '';\n    _instance.audio = _instance.audio || new Uint8Array();\n    _instance.generationTime = _instance.generationTime || 0;\n    _instance.audioLength = _instance.audioLength || 0;\n    _instance.text = _instance.text || '';\n    _instance.config = _instance.config || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: SynthesizeResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.audioUuid = _reader.readString();\n          break;\n        case 2:\n          _instance.audio = _reader.readBytes();\n          break;\n        case 3:\n          _instance.generationTime = _reader.readFloat();\n          break;\n        case 4:\n          _instance.audioLength = _reader.readFloat();\n          break;\n        case 5:\n          _instance.text = _reader.readString();\n          break;\n        case 6:\n          _instance.config = new RequestConfig();\n          _reader.readMessage(\n            _instance.config,\n            RequestConfig.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    SynthesizeResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: SynthesizeResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.audioUuid) {\n      _writer.writeString(1, _instance.audioUuid);\n    }\n    if (_instance.audio && _instance.audio.length) {\n      _writer.writeBytes(2, _instance.audio);\n    }\n    if (_instance.generationTime) {\n      _writer.writeFloat(3, _instance.generationTime);\n    }\n    if (_instance.audioLength) {\n      _writer.writeFloat(4, _instance.audioLength);\n    }\n    if (_instance.text) {\n      _writer.writeString(5, _instance.text);\n    }\n    if (_instance.config) {\n      _writer.writeMessage(\n        6,\n        _instance.config as any,\n        RequestConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _audioUuid?: string;\n  private _audio?: Uint8Array;\n  private _generationTime?: number;\n  private _audioLength?: number;\n  private _text?: string;\n  private _config?: RequestConfig;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of SynthesizeResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<SynthesizeResponse.AsObject>) {\n    _value = _value || {};\n    this.audioUuid = _value.audioUuid;\n    this.audio = _value.audio;\n    this.generationTime = _value.generationTime;\n    this.audioLength = _value.audioLength;\n    this.text = _value.text;\n    this.config = _value.config ? new RequestConfig(_value.config) : undefined;\n    SynthesizeResponse.refineValues(this);\n  }\n  get audioUuid(): string | undefined {\n    return this._audioUuid;\n  }\n  set audioUuid(value: string | undefined) {\n    this._audioUuid = value;\n  }\n  get audio(): Uint8Array | undefined {\n    return this._audio;\n  }\n  set audio(value: Uint8Array | undefined) {\n    this._audio = value;\n  }\n  get generationTime(): number | undefined {\n    return this._generationTime;\n  }\n  set generationTime(value: number | undefined) {\n    this._generationTime = value;\n  }\n  get audioLength(): number | undefined {\n    return this._audioLength;\n  }\n  set audioLength(value: number | undefined) {\n    this._audioLength = value;\n  }\n  get text(): string | undefined {\n    return this._text;\n  }\n  set text(value: string | undefined) {\n    this._text = value;\n  }\n  get config(): RequestConfig | undefined {\n    return this._config;\n  }\n  set config(value: RequestConfig | undefined) {\n    this._config = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    SynthesizeResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): SynthesizeResponse.AsObject {\n    return {\n      audioUuid: this.audioUuid,\n      audio: this.audio ? this.audio.subarray(0) : new Uint8Array(),\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      text: this.text,\n      config: this.config ? this.config.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): SynthesizeResponse.AsProtobufJSON {\n    return {\n      audioUuid: this.audioUuid,\n      audio: this.audio ? uint8ArrayToBase64(this.audio) : '',\n      generationTime: this.generationTime,\n      audioLength: this.audioLength,\n      text: this.text,\n      config: this.config ? this.config.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module SynthesizeResponse {\n  /**\n   * Standard JavaScript object representation for SynthesizeResponse\n   */\n  export interface AsObject {\n    audioUuid?: string;\n    audio?: Uint8Array;\n    generationTime?: number;\n    audioLength?: number;\n    text?: string;\n    config?: RequestConfig.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for SynthesizeResponse\n   */\n  export interface AsProtobufJSON {\n    audioUuid?: string;\n    audio?: string;\n    generationTime?: number;\n    audioLength?: number;\n    text?: string;\n    config?: RequestConfig.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.GetServiceInfoResponse\n */\nexport class GetServiceInfoResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.GetServiceInfoResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GetServiceInfoResponse();\n    GetServiceInfoResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GetServiceInfoResponse) {\n    _instance.version = _instance.version || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GetServiceInfoResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.version = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GetServiceInfoResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GetServiceInfoResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.version) {\n      _writer.writeString(1, _instance.version);\n    }\n  }\n\n  private _version?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GetServiceInfoResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GetServiceInfoResponse.AsObject>) {\n    _value = _value || {};\n    this.version = _value.version;\n    GetServiceInfoResponse.refineValues(this);\n  }\n  get version(): string | undefined {\n    return this._version;\n  }\n  set version(value: string | undefined) {\n    this._version = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GetServiceInfoResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GetServiceInfoResponse.AsObject {\n    return {\n      version: this.version\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GetServiceInfoResponse.AsProtobufJSON {\n    return {\n      version: this.version\n    };\n  }\n}\nexport module GetServiceInfoResponse {\n  /**\n   * Standard JavaScript object representation for GetServiceInfoResponse\n   */\n  export interface AsObject {\n    version?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GetServiceInfoResponse\n   */\n  export interface AsProtobufJSON {\n    version?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sPipelinesRequest\n */\nexport class ListT2sPipelinesRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sPipelinesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesRequest();\n    ListT2sPipelinesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sPipelinesRequest) {\n    _instance.languages = _instance.languages || [];\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sPipelinesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 5:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sPipelinesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(2, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(3, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(4, _instance.speakerNames);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(5, _instance.domains);\n    }\n  }\n\n  private _languages?: string[];\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sPipelinesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sPipelinesRequest.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListT2sPipelinesRequest.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sPipelinesRequest.AsObject {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sPipelinesRequest.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice(),\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sPipelinesRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sPipelinesRequest\n   */\n  export interface AsObject {\n    languages?: string[];\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sPipelinesRequest\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sPipelinesResponse\n */\nexport class ListT2sPipelinesResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sPipelinesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sPipelinesResponse();\n    ListT2sPipelinesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sPipelinesResponse) {\n    _instance.pipelines = _instance.pipelines || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sPipelinesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new Text2SpeechConfig();\n          _reader.readMessage(\n            messageInitializer1,\n            Text2SpeechConfig.deserializeBinaryFromReader\n          );\n          (_instance.pipelines = _instance.pipelines || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sPipelinesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sPipelinesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelines && _instance.pipelines.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.pipelines as any,\n        Text2SpeechConfig.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _pipelines?: Text2SpeechConfig[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sPipelinesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sPipelinesResponse.AsObject>) {\n    _value = _value || {};\n    this.pipelines = (_value.pipelines || []).map(\n      m => new Text2SpeechConfig(m)\n    );\n    ListT2sPipelinesResponse.refineValues(this);\n  }\n  get pipelines(): Text2SpeechConfig[] | undefined {\n    return this._pipelines;\n  }\n  set pipelines(value: Text2SpeechConfig[] | undefined) {\n    this._pipelines = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sPipelinesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sPipelinesResponse.AsObject {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sPipelinesResponse.AsProtobufJSON {\n    return {\n      pipelines: (this.pipelines || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module ListT2sPipelinesResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sPipelinesResponse\n   */\n  export interface AsObject {\n    pipelines?: Text2SpeechConfig.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sPipelinesResponse\n   */\n  export interface AsProtobufJSON {\n    pipelines?: Text2SpeechConfig.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sLanguagesRequest\n */\nexport class ListT2sLanguagesRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sLanguagesRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sLanguagesRequest();\n    ListT2sLanguagesRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sLanguagesRequest) {\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sLanguagesRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sLanguagesRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sLanguagesRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(1, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(3, _instance.speakerNames);\n    }\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(4, _instance.domains);\n    }\n  }\n\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sLanguagesRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sLanguagesRequest.AsObject>) {\n    _value = _value || {};\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.domains = (_value.domains || []).slice();\n    ListT2sLanguagesRequest.refineValues(this);\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sLanguagesRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sLanguagesRequest.AsObject {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sLanguagesRequest.AsProtobufJSON {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sLanguagesRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sLanguagesRequest\n   */\n  export interface AsObject {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sLanguagesRequest\n   */\n  export interface AsProtobufJSON {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sLanguagesResponse\n */\nexport class ListT2sLanguagesResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sLanguagesResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sLanguagesResponse();\n    ListT2sLanguagesResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sLanguagesResponse) {\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sLanguagesResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sLanguagesResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sLanguagesResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(1, _instance.languages);\n    }\n  }\n\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sLanguagesResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sLanguagesResponse.AsObject>) {\n    _value = _value || {};\n    this.languages = (_value.languages || []).slice();\n    ListT2sLanguagesResponse.refineValues(this);\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sLanguagesResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sLanguagesResponse.AsObject {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sLanguagesResponse.AsProtobufJSON {\n    return {\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListT2sLanguagesResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sLanguagesResponse\n   */\n  export interface AsObject {\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sLanguagesResponse\n   */\n  export interface AsProtobufJSON {\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sDomainsRequest\n */\nexport class ListT2sDomainsRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sDomainsRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sDomainsRequest();\n    ListT2sDomainsRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sDomainsRequest) {\n    _instance.speakerSexes = _instance.speakerSexes || [];\n    _instance.pipelineOwners = _instance.pipelineOwners || [];\n    _instance.speakerNames = _instance.speakerNames || [];\n    _instance.languages = _instance.languages || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sDomainsRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.speakerSexes = _instance.speakerSexes || []).push(\n            _reader.readString()\n          );\n          break;\n        case 2:\n          (_instance.pipelineOwners = _instance.pipelineOwners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          (_instance.speakerNames = _instance.speakerNames || []).push(\n            _reader.readString()\n          );\n          break;\n        case 4:\n          (_instance.languages = _instance.languages || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sDomainsRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sDomainsRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.speakerSexes && _instance.speakerSexes.length) {\n      _writer.writeRepeatedString(1, _instance.speakerSexes);\n    }\n    if (_instance.pipelineOwners && _instance.pipelineOwners.length) {\n      _writer.writeRepeatedString(2, _instance.pipelineOwners);\n    }\n    if (_instance.speakerNames && _instance.speakerNames.length) {\n      _writer.writeRepeatedString(3, _instance.speakerNames);\n    }\n    if (_instance.languages && _instance.languages.length) {\n      _writer.writeRepeatedString(4, _instance.languages);\n    }\n  }\n\n  private _speakerSexes?: string[];\n  private _pipelineOwners?: string[];\n  private _speakerNames?: string[];\n  private _languages?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sDomainsRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sDomainsRequest.AsObject>) {\n    _value = _value || {};\n    this.speakerSexes = (_value.speakerSexes || []).slice();\n    this.pipelineOwners = (_value.pipelineOwners || []).slice();\n    this.speakerNames = (_value.speakerNames || []).slice();\n    this.languages = (_value.languages || []).slice();\n    ListT2sDomainsRequest.refineValues(this);\n  }\n  get speakerSexes(): string[] | undefined {\n    return this._speakerSexes;\n  }\n  set speakerSexes(value: string[] | undefined) {\n    this._speakerSexes = value;\n  }\n  get pipelineOwners(): string[] | undefined {\n    return this._pipelineOwners;\n  }\n  set pipelineOwners(value: string[] | undefined) {\n    this._pipelineOwners = value;\n  }\n  get speakerNames(): string[] | undefined {\n    return this._speakerNames;\n  }\n  set speakerNames(value: string[] | undefined) {\n    this._speakerNames = value;\n  }\n  get languages(): string[] | undefined {\n    return this._languages;\n  }\n  set languages(value: string[] | undefined) {\n    this._languages = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sDomainsRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sDomainsRequest.AsObject {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      languages: (this.languages || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sDomainsRequest.AsProtobufJSON {\n    return {\n      speakerSexes: (this.speakerSexes || []).slice(),\n      pipelineOwners: (this.pipelineOwners || []).slice(),\n      speakerNames: (this.speakerNames || []).slice(),\n      languages: (this.languages || []).slice()\n    };\n  }\n}\nexport module ListT2sDomainsRequest {\n  /**\n   * Standard JavaScript object representation for ListT2sDomainsRequest\n   */\n  export interface AsObject {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    languages?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sDomainsRequest\n   */\n  export interface AsProtobufJSON {\n    speakerSexes?: string[];\n    pipelineOwners?: string[];\n    speakerNames?: string[];\n    languages?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListT2sDomainsResponse\n */\nexport class ListT2sDomainsResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListT2sDomainsResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListT2sDomainsResponse();\n    ListT2sDomainsResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListT2sDomainsResponse) {\n    _instance.domains = _instance.domains || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListT2sDomainsResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.domains = _instance.domains || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListT2sDomainsResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListT2sDomainsResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.domains && _instance.domains.length) {\n      _writer.writeRepeatedString(1, _instance.domains);\n    }\n  }\n\n  private _domains?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListT2sDomainsResponse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListT2sDomainsResponse.AsObject>) {\n    _value = _value || {};\n    this.domains = (_value.domains || []).slice();\n    ListT2sDomainsResponse.refineValues(this);\n  }\n  get domains(): string[] | undefined {\n    return this._domains;\n  }\n  set domains(value: string[] | undefined) {\n    this._domains = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListT2sDomainsResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListT2sDomainsResponse.AsObject {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListT2sDomainsResponse.AsProtobufJSON {\n    return {\n      domains: (this.domains || []).slice()\n    };\n  }\n}\nexport module ListT2sDomainsResponse {\n  /**\n   * Standard JavaScript object representation for ListT2sDomainsResponse\n   */\n  export interface AsObject {\n    domains?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListT2sDomainsResponse\n   */\n  export interface AsProtobufJSON {\n    domains?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.T2sPipelineId\n */\nexport class T2sPipelineId implements GrpcMessage {\n  static id = 'ondewo.t2s.T2sPipelineId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new T2sPipelineId();\n    T2sPipelineId.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: T2sPipelineId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: T2sPipelineId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    T2sPipelineId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: T2sPipelineId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of T2sPipelineId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<T2sPipelineId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    T2sPipelineId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    T2sPipelineId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): T2sPipelineId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): T2sPipelineId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module T2sPipelineId {\n  /**\n   * Standard JavaScript object representation for T2sPipelineId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for T2sPipelineId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Text2SpeechConfig\n */\nexport class Text2SpeechConfig implements GrpcMessage {\n  static id = 'ondewo.t2s.Text2SpeechConfig';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Text2SpeechConfig();\n    Text2SpeechConfig.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Text2SpeechConfig) {\n    _instance.id = _instance.id || '';\n    _instance.description = _instance.description || undefined;\n    _instance.active = _instance.active || false;\n    _instance.inference = _instance.inference || undefined;\n    _instance.normalization = _instance.normalization || undefined;\n    _instance.postprocessing = _instance.postprocessing || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Text2SpeechConfig,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.description = new Description();\n          _reader.readMessage(\n            _instance.description,\n            Description.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.active = _reader.readBool();\n          break;\n        case 4:\n          _instance.inference = new Inference();\n          _reader.readMessage(\n            _instance.inference,\n            Inference.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.normalization = new Normalization();\n          _reader.readMessage(\n            _instance.normalization,\n            Normalization.deserializeBinaryFromReader\n          );\n          break;\n        case 6:\n          _instance.postprocessing = new Postprocessing();\n          _reader.readMessage(\n            _instance.postprocessing,\n            Postprocessing.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Text2SpeechConfig.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Text2SpeechConfig,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.description) {\n      _writer.writeMessage(\n        2,\n        _instance.description as any,\n        Description.serializeBinaryToWriter\n      );\n    }\n    if (_instance.active) {\n      _writer.writeBool(3, _instance.active);\n    }\n    if (_instance.inference) {\n      _writer.writeMessage(\n        4,\n        _instance.inference as any,\n        Inference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.normalization) {\n      _writer.writeMessage(\n        5,\n        _instance.normalization as any,\n        Normalization.serializeBinaryToWriter\n      );\n    }\n    if (_instance.postprocessing) {\n      _writer.writeMessage(\n        6,\n        _instance.postprocessing as any,\n        Postprocessing.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _description?: Description;\n  private _active?: boolean;\n  private _inference?: Inference;\n  private _normalization?: Normalization;\n  private _postprocessing?: Postprocessing;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Text2SpeechConfig to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Text2SpeechConfig.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.description = _value.description\n      ? new Description(_value.description)\n      : undefined;\n    this.active = _value.active;\n    this.inference = _value.inference\n      ? new Inference(_value.inference)\n      : undefined;\n    this.normalization = _value.normalization\n      ? new Normalization(_value.normalization)\n      : undefined;\n    this.postprocessing = _value.postprocessing\n      ? new Postprocessing(_value.postprocessing)\n      : undefined;\n    Text2SpeechConfig.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get description(): Description | undefined {\n    return this._description;\n  }\n  set description(value: Description | undefined) {\n    this._description = value;\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get inference(): Inference | undefined {\n    return this._inference;\n  }\n  set inference(value: Inference | undefined) {\n    this._inference = value;\n  }\n  get normalization(): Normalization | undefined {\n    return this._normalization;\n  }\n  set normalization(value: Normalization | undefined) {\n    this._normalization = value;\n  }\n  get postprocessing(): Postprocessing | undefined {\n    return this._postprocessing;\n  }\n  set postprocessing(value: Postprocessing | undefined) {\n    this._postprocessing = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Text2SpeechConfig.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Text2SpeechConfig.AsObject {\n    return {\n      id: this.id,\n      description: this.description ? this.description.toObject() : undefined,\n      active: this.active,\n      inference: this.inference ? this.inference.toObject() : undefined,\n      normalization: this.normalization\n        ? this.normalization.toObject()\n        : undefined,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Text2SpeechConfig.AsProtobufJSON {\n    return {\n      id: this.id,\n      description: this.description\n        ? this.description.toProtobufJSON(options)\n        : null,\n      active: this.active,\n      inference: this.inference ? this.inference.toProtobufJSON(options) : null,\n      normalization: this.normalization\n        ? this.normalization.toProtobufJSON(options)\n        : null,\n      postprocessing: this.postprocessing\n        ? this.postprocessing.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Text2SpeechConfig {\n  /**\n   * Standard JavaScript object representation for Text2SpeechConfig\n   */\n  export interface AsObject {\n    id?: string;\n    description?: Description.AsObject;\n    active?: boolean;\n    inference?: Inference.AsObject;\n    normalization?: Normalization.AsObject;\n    postprocessing?: Postprocessing.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Text2SpeechConfig\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    description?: Description.AsProtobufJSON | null;\n    active?: boolean;\n    inference?: Inference.AsProtobufJSON | null;\n    normalization?: Normalization.AsProtobufJSON | null;\n    postprocessing?: Postprocessing.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Description\n */\nexport class Description implements GrpcMessage {\n  static id = 'ondewo.t2s.Description';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Description();\n    Description.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Description) {\n    _instance.language = _instance.language || '';\n    _instance.speakerSex = _instance.speakerSex || '';\n    _instance.pipelineOwner = _instance.pipelineOwner || '';\n    _instance.comments = _instance.comments || '';\n    _instance.speakerName = _instance.speakerName || '';\n    _instance.domain = _instance.domain || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Description,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          _instance.speakerSex = _reader.readString();\n          break;\n        case 3:\n          _instance.pipelineOwner = _reader.readString();\n          break;\n        case 4:\n          _instance.comments = _reader.readString();\n          break;\n        case 5:\n          _instance.speakerName = _reader.readString();\n          break;\n        case 6:\n          _instance.domain = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Description.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Description,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.speakerSex) {\n      _writer.writeString(2, _instance.speakerSex);\n    }\n    if (_instance.pipelineOwner) {\n      _writer.writeString(3, _instance.pipelineOwner);\n    }\n    if (_instance.comments) {\n      _writer.writeString(4, _instance.comments);\n    }\n    if (_instance.speakerName) {\n      _writer.writeString(5, _instance.speakerName);\n    }\n    if (_instance.domain) {\n      _writer.writeString(6, _instance.domain);\n    }\n  }\n\n  private _language?: string;\n  private _speakerSex?: string;\n  private _pipelineOwner?: string;\n  private _comments?: string;\n  private _speakerName?: string;\n  private _domain?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Description to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Description.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.speakerSex = _value.speakerSex;\n    this.pipelineOwner = _value.pipelineOwner;\n    this.comments = _value.comments;\n    this.speakerName = _value.speakerName;\n    this.domain = _value.domain;\n    Description.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get speakerSex(): string | undefined {\n    return this._speakerSex;\n  }\n  set speakerSex(value: string | undefined) {\n    this._speakerSex = value;\n  }\n  get pipelineOwner(): string | undefined {\n    return this._pipelineOwner;\n  }\n  set pipelineOwner(value: string | undefined) {\n    this._pipelineOwner = value;\n  }\n  get comments(): string | undefined {\n    return this._comments;\n  }\n  set comments(value: string | undefined) {\n    this._comments = value;\n  }\n  get speakerName(): string | undefined {\n    return this._speakerName;\n  }\n  set speakerName(value: string | undefined) {\n    this._speakerName = value;\n  }\n  get domain(): string | undefined {\n    return this._domain;\n  }\n  set domain(value: string | undefined) {\n    this._domain = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Description.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Description.AsObject {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Description.AsProtobufJSON {\n    return {\n      language: this.language,\n      speakerSex: this.speakerSex,\n      pipelineOwner: this.pipelineOwner,\n      comments: this.comments,\n      speakerName: this.speakerName,\n      domain: this.domain\n    };\n  }\n}\nexport module Description {\n  /**\n   * Standard JavaScript object representation for Description\n   */\n  export interface AsObject {\n    language?: string;\n    speakerSex?: string;\n    pipelineOwner?: string;\n    comments?: string;\n    speakerName?: string;\n    domain?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Description\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    speakerSex?: string;\n    pipelineOwner?: string;\n    comments?: string;\n    speakerName?: string;\n    domain?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Inference\n */\nexport class Inference implements GrpcMessage {\n  static id = 'ondewo.t2s.Inference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Inference();\n    Inference.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Inference) {\n    _instance.type = _instance.type || '';\n    _instance.compositeInference = _instance.compositeInference || undefined;\n    _instance.caching = _instance.caching || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Inference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.compositeInference = new CompositeInference();\n          _reader.readMessage(\n            _instance.compositeInference,\n            CompositeInference.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.caching = new Caching();\n          _reader.readMessage(\n            _instance.caching,\n            Caching.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Inference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Inference, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.compositeInference) {\n      _writer.writeMessage(\n        2,\n        _instance.compositeInference as any,\n        CompositeInference.serializeBinaryToWriter\n      );\n    }\n    if (_instance.caching) {\n      _writer.writeMessage(\n        3,\n        _instance.caching as any,\n        Caching.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _compositeInference?: CompositeInference;\n  private _caching?: Caching;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Inference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Inference.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.compositeInference = _value.compositeInference\n      ? new CompositeInference(_value.compositeInference)\n      : undefined;\n    this.caching = _value.caching ? new Caching(_value.caching) : undefined;\n    Inference.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get compositeInference(): CompositeInference | undefined {\n    return this._compositeInference;\n  }\n  set compositeInference(value: CompositeInference | undefined) {\n    this._compositeInference = value;\n  }\n  get caching(): Caching | undefined {\n    return this._caching;\n  }\n  set caching(value: Caching | undefined) {\n    this._caching = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Inference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Inference.AsObject {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toObject()\n        : undefined,\n      caching: this.caching ? this.caching.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Inference.AsProtobufJSON {\n    return {\n      type: this.type,\n      compositeInference: this.compositeInference\n        ? this.compositeInference.toProtobufJSON(options)\n        : null,\n      caching: this.caching ? this.caching.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module Inference {\n  /**\n   * Standard JavaScript object representation for Inference\n   */\n  export interface AsObject {\n    type?: string;\n    compositeInference?: CompositeInference.AsObject;\n    caching?: Caching.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Inference\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    compositeInference?: CompositeInference.AsProtobufJSON | null;\n    caching?: Caching.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CompositeInference\n */\nexport class CompositeInference implements GrpcMessage {\n  static id = 'ondewo.t2s.CompositeInference';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CompositeInference();\n    CompositeInference.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CompositeInference) {\n    _instance.text2mel = _instance.text2mel || undefined;\n    _instance.mel2audio = _instance.mel2audio || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CompositeInference,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.text2mel = new Text2Mel();\n          _reader.readMessage(\n            _instance.text2mel,\n            Text2Mel.deserializeBinaryFromReader\n          );\n          break;\n        case 2:\n          _instance.mel2audio = new Mel2Audio();\n          _reader.readMessage(\n            _instance.mel2audio,\n            Mel2Audio.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CompositeInference.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CompositeInference,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.text2mel) {\n      _writer.writeMessage(\n        1,\n        _instance.text2mel as any,\n        Text2Mel.serializeBinaryToWriter\n      );\n    }\n    if (_instance.mel2audio) {\n      _writer.writeMessage(\n        2,\n        _instance.mel2audio as any,\n        Mel2Audio.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _text2mel?: Text2Mel;\n  private _mel2audio?: Mel2Audio;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CompositeInference to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CompositeInference.AsObject>) {\n    _value = _value || {};\n    this.text2mel = _value.text2mel ? new Text2Mel(_value.text2mel) : undefined;\n    this.mel2audio = _value.mel2audio\n      ? new Mel2Audio(_value.mel2audio)\n      : undefined;\n    CompositeInference.refineValues(this);\n  }\n  get text2mel(): Text2Mel | undefined {\n    return this._text2mel;\n  }\n  set text2mel(value: Text2Mel | undefined) {\n    this._text2mel = value;\n  }\n  get mel2audio(): Mel2Audio | undefined {\n    return this._mel2audio;\n  }\n  set mel2audio(value: Mel2Audio | undefined) {\n    this._mel2audio = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CompositeInference.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CompositeInference.AsObject {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toObject() : undefined,\n      mel2audio: this.mel2audio ? this.mel2audio.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CompositeInference.AsProtobufJSON {\n    return {\n      text2mel: this.text2mel ? this.text2mel.toProtobufJSON(options) : null,\n      mel2audio: this.mel2audio ? this.mel2audio.toProtobufJSON(options) : null\n    };\n  }\n}\nexport module CompositeInference {\n  /**\n   * Standard JavaScript object representation for CompositeInference\n   */\n  export interface AsObject {\n    text2mel?: Text2Mel.AsObject;\n    mel2audio?: Mel2Audio.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for CompositeInference\n   */\n  export interface AsProtobufJSON {\n    text2mel?: Text2Mel.AsProtobufJSON | null;\n    mel2audio?: Mel2Audio.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Text2Mel\n */\nexport class Text2Mel implements GrpcMessage {\n  static id = 'ondewo.t2s.Text2Mel';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Text2Mel();\n    Text2Mel.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Text2Mel) {\n    _instance.type = _instance.type || '';\n    _instance.glowTts = _instance.glowTts || undefined;\n    _instance.glowTtsTriton = _instance.glowTtsTriton || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Text2Mel,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.glowTts = new GlowTTS();\n          _reader.readMessage(\n            _instance.glowTts,\n            GlowTTS.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.glowTtsTriton = new GlowTTSTriton();\n          _reader.readMessage(\n            _instance.glowTtsTriton,\n            GlowTTSTriton.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Text2Mel.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Text2Mel, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.glowTts) {\n      _writer.writeMessage(\n        2,\n        _instance.glowTts as any,\n        GlowTTS.serializeBinaryToWriter\n      );\n    }\n    if (_instance.glowTtsTriton) {\n      _writer.writeMessage(\n        3,\n        _instance.glowTtsTriton as any,\n        GlowTTSTriton.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _glowTts?: GlowTTS;\n  private _glowTtsTriton?: GlowTTSTriton;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Text2Mel to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Text2Mel.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.glowTts = _value.glowTts ? new GlowTTS(_value.glowTts) : undefined;\n    this.glowTtsTriton = _value.glowTtsTriton\n      ? new GlowTTSTriton(_value.glowTtsTriton)\n      : undefined;\n    Text2Mel.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get glowTts(): GlowTTS | undefined {\n    return this._glowTts;\n  }\n  set glowTts(value: GlowTTS | undefined) {\n    this._glowTts = value;\n  }\n  get glowTtsTriton(): GlowTTSTriton | undefined {\n    return this._glowTtsTriton;\n  }\n  set glowTtsTriton(value: GlowTTSTriton | undefined) {\n    this._glowTtsTriton = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Text2Mel.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Text2Mel.AsObject {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toObject() : undefined,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Text2Mel.AsProtobufJSON {\n    return {\n      type: this.type,\n      glowTts: this.glowTts ? this.glowTts.toProtobufJSON(options) : null,\n      glowTtsTriton: this.glowTtsTriton\n        ? this.glowTtsTriton.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Text2Mel {\n  /**\n   * Standard JavaScript object representation for Text2Mel\n   */\n  export interface AsObject {\n    type?: string;\n    glowTts?: GlowTTS.AsObject;\n    glowTtsTriton?: GlowTTSTriton.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Text2Mel\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    glowTts?: GlowTTS.AsProtobufJSON | null;\n    glowTtsTriton?: GlowTTSTriton.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.GlowTTS\n */\nexport class GlowTTS implements GrpcMessage {\n  static id = 'ondewo.t2s.GlowTTS';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GlowTTS();\n    GlowTTS.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GlowTTS) {\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.useGpu = _instance.useGpu || false;\n    _instance.lengthScale = _instance.lengthScale || 0;\n    _instance.noiseScale = _instance.noiseScale || 0;\n    _instance.path = _instance.path || '';\n    _instance.cleaners = _instance.cleaners || [];\n    _instance.paramConfigPath = _instance.paramConfigPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GlowTTS,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.useGpu = _reader.readBool();\n          break;\n        case 3:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 4:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 5:\n          _instance.path = _reader.readString();\n          break;\n        case 6:\n          (_instance.cleaners = _instance.cleaners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 7:\n          _instance.paramConfigPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GlowTTS.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: GlowTTS, _writer: BinaryWriter) {\n    if (_instance.batchSize) {\n      _writer.writeInt64String(1, _instance.batchSize);\n    }\n    if (_instance.useGpu) {\n      _writer.writeBool(2, _instance.useGpu);\n    }\n    if (_instance.lengthScale) {\n      _writer.writeFloat(3, _instance.lengthScale);\n    }\n    if (_instance.noiseScale) {\n      _writer.writeFloat(4, _instance.noiseScale);\n    }\n    if (_instance.path) {\n      _writer.writeString(5, _instance.path);\n    }\n    if (_instance.cleaners && _instance.cleaners.length) {\n      _writer.writeRepeatedString(6, _instance.cleaners);\n    }\n    if (_instance.paramConfigPath) {\n      _writer.writeString(7, _instance.paramConfigPath);\n    }\n  }\n\n  private _batchSize?: string;\n  private _useGpu?: boolean;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _path?: string;\n  private _cleaners?: string[];\n  private _paramConfigPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GlowTTS to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GlowTTS.AsObject>) {\n    _value = _value || {};\n    this.batchSize = _value.batchSize;\n    this.useGpu = _value.useGpu;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.path = _value.path;\n    this.cleaners = (_value.cleaners || []).slice();\n    this.paramConfigPath = _value.paramConfigPath;\n    GlowTTS.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get path(): string | undefined {\n    return this._path;\n  }\n  set path(value: string | undefined) {\n    this._path = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GlowTTS.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GlowTTS.AsObject {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GlowTTS.AsProtobufJSON {\n    return {\n      batchSize: this.batchSize,\n      useGpu: this.useGpu,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      path: this.path,\n      cleaners: (this.cleaners || []).slice(),\n      paramConfigPath: this.paramConfigPath\n    };\n  }\n}\nexport module GlowTTS {\n  /**\n   * Standard JavaScript object representation for GlowTTS\n   */\n  export interface AsObject {\n    batchSize?: string;\n    useGpu?: boolean;\n    lengthScale?: number;\n    noiseScale?: number;\n    path?: string;\n    cleaners?: string[];\n    paramConfigPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GlowTTS\n   */\n  export interface AsProtobufJSON {\n    batchSize?: string;\n    useGpu?: boolean;\n    lengthScale?: number;\n    noiseScale?: number;\n    path?: string;\n    cleaners?: string[];\n    paramConfigPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.GlowTTSTriton\n */\nexport class GlowTTSTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.GlowTTSTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new GlowTTSTriton();\n    GlowTTSTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: GlowTTSTriton) {\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.lengthScale = _instance.lengthScale || 0;\n    _instance.noiseScale = _instance.noiseScale || 0;\n    _instance.cleaners = _instance.cleaners || [];\n    _instance.maxTextLength = _instance.maxTextLength || '0';\n    _instance.paramConfigPath = _instance.paramConfigPath || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: GlowTTSTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.lengthScale = _reader.readFloat();\n          break;\n        case 3:\n          _instance.noiseScale = _reader.readFloat();\n          break;\n        case 4:\n          (_instance.cleaners = _instance.cleaners || []).push(\n            _reader.readString()\n          );\n          break;\n        case 5:\n          _instance.maxTextLength = _reader.readInt64String();\n          break;\n        case 6:\n          _instance.paramConfigPath = _reader.readString();\n          break;\n        case 7:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        case 8:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    GlowTTSTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: GlowTTSTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.batchSize) {\n      _writer.writeInt64String(1, _instance.batchSize);\n    }\n    if (_instance.lengthScale) {\n      _writer.writeFloat(2, _instance.lengthScale);\n    }\n    if (_instance.noiseScale) {\n      _writer.writeFloat(3, _instance.noiseScale);\n    }\n    if (_instance.cleaners && _instance.cleaners.length) {\n      _writer.writeRepeatedString(4, _instance.cleaners);\n    }\n    if (_instance.maxTextLength) {\n      _writer.writeInt64String(5, _instance.maxTextLength);\n    }\n    if (_instance.paramConfigPath) {\n      _writer.writeString(6, _instance.paramConfigPath);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(7, _instance.tritonUrl);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(8, _instance.tritonModelName);\n    }\n  }\n\n  private _batchSize?: string;\n  private _lengthScale?: number;\n  private _noiseScale?: number;\n  private _cleaners?: string[];\n  private _maxTextLength?: string;\n  private _paramConfigPath?: string;\n  private _tritonUrl?: string;\n  private _tritonModelName?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of GlowTTSTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<GlowTTSTriton.AsObject>) {\n    _value = _value || {};\n    this.batchSize = _value.batchSize;\n    this.lengthScale = _value.lengthScale;\n    this.noiseScale = _value.noiseScale;\n    this.cleaners = (_value.cleaners || []).slice();\n    this.maxTextLength = _value.maxTextLength;\n    this.paramConfigPath = _value.paramConfigPath;\n    this.tritonUrl = _value.tritonUrl;\n    this.tritonModelName = _value.tritonModelName;\n    GlowTTSTriton.refineValues(this);\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get lengthScale(): number | undefined {\n    return this._lengthScale;\n  }\n  set lengthScale(value: number | undefined) {\n    this._lengthScale = value;\n  }\n  get noiseScale(): number | undefined {\n    return this._noiseScale;\n  }\n  set noiseScale(value: number | undefined) {\n    this._noiseScale = value;\n  }\n  get cleaners(): string[] | undefined {\n    return this._cleaners;\n  }\n  set cleaners(value: string[] | undefined) {\n    this._cleaners = value;\n  }\n  get maxTextLength(): string | undefined {\n    return this._maxTextLength;\n  }\n  set maxTextLength(value: string | undefined) {\n    this._maxTextLength = value;\n  }\n  get paramConfigPath(): string | undefined {\n    return this._paramConfigPath;\n  }\n  set paramConfigPath(value: string | undefined) {\n    this._paramConfigPath = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    GlowTTSTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): GlowTTSTriton.AsObject {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonUrl: this.tritonUrl,\n      tritonModelName: this.tritonModelName\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): GlowTTSTriton.AsProtobufJSON {\n    return {\n      batchSize: this.batchSize,\n      lengthScale: this.lengthScale,\n      noiseScale: this.noiseScale,\n      cleaners: (this.cleaners || []).slice(),\n      maxTextLength: this.maxTextLength,\n      paramConfigPath: this.paramConfigPath,\n      tritonUrl: this.tritonUrl,\n      tritonModelName: this.tritonModelName\n    };\n  }\n}\nexport module GlowTTSTriton {\n  /**\n   * Standard JavaScript object representation for GlowTTSTriton\n   */\n  export interface AsObject {\n    batchSize?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    cleaners?: string[];\n    maxTextLength?: string;\n    paramConfigPath?: string;\n    tritonUrl?: string;\n    tritonModelName?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for GlowTTSTriton\n   */\n  export interface AsProtobufJSON {\n    batchSize?: string;\n    lengthScale?: number;\n    noiseScale?: number;\n    cleaners?: string[];\n    maxTextLength?: string;\n    paramConfigPath?: string;\n    tritonUrl?: string;\n    tritonModelName?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Mel2Audio\n */\nexport class Mel2Audio implements GrpcMessage {\n  static id = 'ondewo.t2s.Mel2Audio';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Mel2Audio();\n    Mel2Audio.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Mel2Audio) {\n    _instance.type = _instance.type || '';\n    _instance.mbMelganTriton = _instance.mbMelganTriton || undefined;\n    _instance.hifiGan = _instance.hifiGan || undefined;\n    _instance.hifiGanTriton = _instance.hifiGanTriton || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Mel2Audio,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.type = _reader.readString();\n          break;\n        case 2:\n          _instance.mbMelganTriton = new MbMelganTriton();\n          _reader.readMessage(\n            _instance.mbMelganTriton,\n            MbMelganTriton.deserializeBinaryFromReader\n          );\n          break;\n        case 3:\n          _instance.hifiGan = new HiFiGan();\n          _reader.readMessage(\n            _instance.hifiGan,\n            HiFiGan.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.hifiGanTriton = new HiFiGanTriton();\n          _reader.readMessage(\n            _instance.hifiGanTriton,\n            HiFiGanTriton.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Mel2Audio.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Mel2Audio, _writer: BinaryWriter) {\n    if (_instance.type) {\n      _writer.writeString(1, _instance.type);\n    }\n    if (_instance.mbMelganTriton) {\n      _writer.writeMessage(\n        2,\n        _instance.mbMelganTriton as any,\n        MbMelganTriton.serializeBinaryToWriter\n      );\n    }\n    if (_instance.hifiGan) {\n      _writer.writeMessage(\n        3,\n        _instance.hifiGan as any,\n        HiFiGan.serializeBinaryToWriter\n      );\n    }\n    if (_instance.hifiGanTriton) {\n      _writer.writeMessage(\n        4,\n        _instance.hifiGanTriton as any,\n        HiFiGanTriton.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _type?: string;\n  private _mbMelganTriton?: MbMelganTriton;\n  private _hifiGan?: HiFiGan;\n  private _hifiGanTriton?: HiFiGanTriton;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Mel2Audio to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Mel2Audio.AsObject>) {\n    _value = _value || {};\n    this.type = _value.type;\n    this.mbMelganTriton = _value.mbMelganTriton\n      ? new MbMelganTriton(_value.mbMelganTriton)\n      : undefined;\n    this.hifiGan = _value.hifiGan ? new HiFiGan(_value.hifiGan) : undefined;\n    this.hifiGanTriton = _value.hifiGanTriton\n      ? new HiFiGanTriton(_value.hifiGanTriton)\n      : undefined;\n    Mel2Audio.refineValues(this);\n  }\n  get type(): string | undefined {\n    return this._type;\n  }\n  set type(value: string | undefined) {\n    this._type = value;\n  }\n  get mbMelganTriton(): MbMelganTriton | undefined {\n    return this._mbMelganTriton;\n  }\n  set mbMelganTriton(value: MbMelganTriton | undefined) {\n    this._mbMelganTriton = value;\n  }\n  get hifiGan(): HiFiGan | undefined {\n    return this._hifiGan;\n  }\n  set hifiGan(value: HiFiGan | undefined) {\n    this._hifiGan = value;\n  }\n  get hifiGanTriton(): HiFiGanTriton | undefined {\n    return this._hifiGanTriton;\n  }\n  set hifiGanTriton(value: HiFiGanTriton | undefined) {\n    this._hifiGanTriton = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Mel2Audio.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Mel2Audio.AsObject {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toObject()\n        : undefined,\n      hifiGan: this.hifiGan ? this.hifiGan.toObject() : undefined,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toObject()\n        : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Mel2Audio.AsProtobufJSON {\n    return {\n      type: this.type,\n      mbMelganTriton: this.mbMelganTriton\n        ? this.mbMelganTriton.toProtobufJSON(options)\n        : null,\n      hifiGan: this.hifiGan ? this.hifiGan.toProtobufJSON(options) : null,\n      hifiGanTriton: this.hifiGanTriton\n        ? this.hifiGanTriton.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Mel2Audio {\n  /**\n   * Standard JavaScript object representation for Mel2Audio\n   */\n  export interface AsObject {\n    type?: string;\n    mbMelganTriton?: MbMelganTriton.AsObject;\n    hifiGan?: HiFiGan.AsObject;\n    hifiGanTriton?: HiFiGanTriton.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Mel2Audio\n   */\n  export interface AsProtobufJSON {\n    type?: string;\n    mbMelganTriton?: MbMelganTriton.AsProtobufJSON | null;\n    hifiGan?: HiFiGan.AsProtobufJSON | null;\n    hifiGanTriton?: HiFiGanTriton.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.HiFiGan\n */\nexport class HiFiGan implements GrpcMessage {\n  static id = 'ondewo.t2s.HiFiGan';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HiFiGan();\n    HiFiGan.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HiFiGan) {\n    _instance.useGpu = _instance.useGpu || false;\n    _instance.batchSize = _instance.batchSize || '0';\n    _instance.configPath = _instance.configPath || '';\n    _instance.modelPath = _instance.modelPath || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HiFiGan,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.useGpu = _reader.readBool();\n          break;\n        case 2:\n          _instance.batchSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.configPath = _reader.readString();\n          break;\n        case 4:\n          _instance.modelPath = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HiFiGan.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: HiFiGan, _writer: BinaryWriter) {\n    if (_instance.useGpu) {\n      _writer.writeBool(1, _instance.useGpu);\n    }\n    if (_instance.batchSize) {\n      _writer.writeInt64String(2, _instance.batchSize);\n    }\n    if (_instance.configPath) {\n      _writer.writeString(3, _instance.configPath);\n    }\n    if (_instance.modelPath) {\n      _writer.writeString(4, _instance.modelPath);\n    }\n  }\n\n  private _useGpu?: boolean;\n  private _batchSize?: string;\n  private _configPath?: string;\n  private _modelPath?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HiFiGan to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HiFiGan.AsObject>) {\n    _value = _value || {};\n    this.useGpu = _value.useGpu;\n    this.batchSize = _value.batchSize;\n    this.configPath = _value.configPath;\n    this.modelPath = _value.modelPath;\n    HiFiGan.refineValues(this);\n  }\n  get useGpu(): boolean | undefined {\n    return this._useGpu;\n  }\n  set useGpu(value: boolean | undefined) {\n    this._useGpu = value;\n  }\n  get batchSize(): string | undefined {\n    return this._batchSize;\n  }\n  set batchSize(value: string | undefined) {\n    this._batchSize = value;\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get modelPath(): string | undefined {\n    return this._modelPath;\n  }\n  set modelPath(value: string | undefined) {\n    this._modelPath = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HiFiGan.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HiFiGan.AsObject {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HiFiGan.AsProtobufJSON {\n    return {\n      useGpu: this.useGpu,\n      batchSize: this.batchSize,\n      configPath: this.configPath,\n      modelPath: this.modelPath\n    };\n  }\n}\nexport module HiFiGan {\n  /**\n   * Standard JavaScript object representation for HiFiGan\n   */\n  export interface AsObject {\n    useGpu?: boolean;\n    batchSize?: string;\n    configPath?: string;\n    modelPath?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for HiFiGan\n   */\n  export interface AsProtobufJSON {\n    useGpu?: boolean;\n    batchSize?: string;\n    configPath?: string;\n    modelPath?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.HiFiGanTriton\n */\nexport class HiFiGanTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.HiFiGanTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new HiFiGanTriton();\n    HiFiGanTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: HiFiGanTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: HiFiGanTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    HiFiGanTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: HiFiGanTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(2, _instance.tritonModelName);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(3, _instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of HiFiGanTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<HiFiGanTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.tritonModelName = _value.tritonModelName;\n    this.tritonUrl = _value.tritonUrl;\n    HiFiGanTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    HiFiGanTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): HiFiGanTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): HiFiGanTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n}\nexport module HiFiGanTriton {\n  /**\n   * Standard JavaScript object representation for HiFiGanTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for HiFiGanTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.MbMelganTriton\n */\nexport class MbMelganTriton implements GrpcMessage {\n  static id = 'ondewo.t2s.MbMelganTriton';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new MbMelganTriton();\n    MbMelganTriton.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: MbMelganTriton) {\n    _instance.configPath = _instance.configPath || '';\n    _instance.statsPath = _instance.statsPath || '';\n    _instance.tritonModelName = _instance.tritonModelName || '';\n    _instance.tritonUrl = _instance.tritonUrl || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: MbMelganTriton,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.configPath = _reader.readString();\n          break;\n        case 2:\n          _instance.statsPath = _reader.readString();\n          break;\n        case 3:\n          _instance.tritonModelName = _reader.readString();\n          break;\n        case 4:\n          _instance.tritonUrl = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    MbMelganTriton.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: MbMelganTriton,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.configPath) {\n      _writer.writeString(1, _instance.configPath);\n    }\n    if (_instance.statsPath) {\n      _writer.writeString(2, _instance.statsPath);\n    }\n    if (_instance.tritonModelName) {\n      _writer.writeString(3, _instance.tritonModelName);\n    }\n    if (_instance.tritonUrl) {\n      _writer.writeString(4, _instance.tritonUrl);\n    }\n  }\n\n  private _configPath?: string;\n  private _statsPath?: string;\n  private _tritonModelName?: string;\n  private _tritonUrl?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of MbMelganTriton to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<MbMelganTriton.AsObject>) {\n    _value = _value || {};\n    this.configPath = _value.configPath;\n    this.statsPath = _value.statsPath;\n    this.tritonModelName = _value.tritonModelName;\n    this.tritonUrl = _value.tritonUrl;\n    MbMelganTriton.refineValues(this);\n  }\n  get configPath(): string | undefined {\n    return this._configPath;\n  }\n  set configPath(value: string | undefined) {\n    this._configPath = value;\n  }\n  get statsPath(): string | undefined {\n    return this._statsPath;\n  }\n  set statsPath(value: string | undefined) {\n    this._statsPath = value;\n  }\n  get tritonModelName(): string | undefined {\n    return this._tritonModelName;\n  }\n  set tritonModelName(value: string | undefined) {\n    this._tritonModelName = value;\n  }\n  get tritonUrl(): string | undefined {\n    return this._tritonUrl;\n  }\n  set tritonUrl(value: string | undefined) {\n    this._tritonUrl = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    MbMelganTriton.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): MbMelganTriton.AsObject {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): MbMelganTriton.AsProtobufJSON {\n    return {\n      configPath: this.configPath,\n      statsPath: this.statsPath,\n      tritonModelName: this.tritonModelName,\n      tritonUrl: this.tritonUrl\n    };\n  }\n}\nexport module MbMelganTriton {\n  /**\n   * Standard JavaScript object representation for MbMelganTriton\n   */\n  export interface AsObject {\n    configPath?: string;\n    statsPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for MbMelganTriton\n   */\n  export interface AsProtobufJSON {\n    configPath?: string;\n    statsPath?: string;\n    tritonModelName?: string;\n    tritonUrl?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Caching\n */\nexport class Caching implements GrpcMessage {\n  static id = 'ondewo.t2s.Caching';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Caching();\n    Caching.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Caching) {\n    _instance.active = _instance.active || false;\n    _instance.memoryCacheMaxSize = _instance.memoryCacheMaxSize || '0';\n    _instance.samplingRate = _instance.samplingRate || '0';\n    _instance.loadCache = _instance.loadCache || false;\n    _instance.saveCache = _instance.saveCache || false;\n    _instance.cacheSaveDir = _instance.cacheSaveDir || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Caching,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.active = _reader.readBool();\n          break;\n        case 2:\n          _instance.memoryCacheMaxSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.samplingRate = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.loadCache = _reader.readBool();\n          break;\n        case 5:\n          _instance.saveCache = _reader.readBool();\n          break;\n        case 6:\n          _instance.cacheSaveDir = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Caching.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Caching, _writer: BinaryWriter) {\n    if (_instance.active) {\n      _writer.writeBool(1, _instance.active);\n    }\n    if (_instance.memoryCacheMaxSize) {\n      _writer.writeInt64String(2, _instance.memoryCacheMaxSize);\n    }\n    if (_instance.samplingRate) {\n      _writer.writeInt64String(3, _instance.samplingRate);\n    }\n    if (_instance.loadCache) {\n      _writer.writeBool(4, _instance.loadCache);\n    }\n    if (_instance.saveCache) {\n      _writer.writeBool(5, _instance.saveCache);\n    }\n    if (_instance.cacheSaveDir) {\n      _writer.writeString(6, _instance.cacheSaveDir);\n    }\n  }\n\n  private _active?: boolean;\n  private _memoryCacheMaxSize?: string;\n  private _samplingRate?: string;\n  private _loadCache?: boolean;\n  private _saveCache?: boolean;\n  private _cacheSaveDir?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Caching to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Caching.AsObject>) {\n    _value = _value || {};\n    this.active = _value.active;\n    this.memoryCacheMaxSize = _value.memoryCacheMaxSize;\n    this.samplingRate = _value.samplingRate;\n    this.loadCache = _value.loadCache;\n    this.saveCache = _value.saveCache;\n    this.cacheSaveDir = _value.cacheSaveDir;\n    Caching.refineValues(this);\n  }\n  get active(): boolean | undefined {\n    return this._active;\n  }\n  set active(value: boolean | undefined) {\n    this._active = value;\n  }\n  get memoryCacheMaxSize(): string | undefined {\n    return this._memoryCacheMaxSize;\n  }\n  set memoryCacheMaxSize(value: string | undefined) {\n    this._memoryCacheMaxSize = value;\n  }\n  get samplingRate(): string | undefined {\n    return this._samplingRate;\n  }\n  set samplingRate(value: string | undefined) {\n    this._samplingRate = value;\n  }\n  get loadCache(): boolean | undefined {\n    return this._loadCache;\n  }\n  set loadCache(value: boolean | undefined) {\n    this._loadCache = value;\n  }\n  get saveCache(): boolean | undefined {\n    return this._saveCache;\n  }\n  set saveCache(value: boolean | undefined) {\n    this._saveCache = value;\n  }\n  get cacheSaveDir(): string | undefined {\n    return this._cacheSaveDir;\n  }\n  set cacheSaveDir(value: string | undefined) {\n    this._cacheSaveDir = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Caching.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Caching.AsObject {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Caching.AsProtobufJSON {\n    return {\n      active: this.active,\n      memoryCacheMaxSize: this.memoryCacheMaxSize,\n      samplingRate: this.samplingRate,\n      loadCache: this.loadCache,\n      saveCache: this.saveCache,\n      cacheSaveDir: this.cacheSaveDir\n    };\n  }\n}\nexport module Caching {\n  /**\n   * Standard JavaScript object representation for Caching\n   */\n  export interface AsObject {\n    active?: boolean;\n    memoryCacheMaxSize?: string;\n    samplingRate?: string;\n    loadCache?: boolean;\n    saveCache?: boolean;\n    cacheSaveDir?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Caching\n   */\n  export interface AsProtobufJSON {\n    active?: boolean;\n    memoryCacheMaxSize?: string;\n    samplingRate?: string;\n    loadCache?: boolean;\n    saveCache?: boolean;\n    cacheSaveDir?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Normalization\n */\nexport class Normalization implements GrpcMessage {\n  static id = 'ondewo.t2s.Normalization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Normalization();\n    Normalization.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Normalization) {\n    _instance.language = _instance.language || '';\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.customPhonemizerId = _instance.customPhonemizerId || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Normalization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.language = _reader.readString();\n          break;\n        case 2:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          _instance.customPhonemizerId = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Normalization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Normalization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.language) {\n      _writer.writeString(1, _instance.language);\n    }\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(2, _instance.pipeline);\n    }\n    if (_instance.customPhonemizerId) {\n      _writer.writeString(3, _instance.customPhonemizerId);\n    }\n  }\n\n  private _language?: string;\n  private _pipeline?: string[];\n  private _customPhonemizerId?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Normalization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Normalization.AsObject>) {\n    _value = _value || {};\n    this.language = _value.language;\n    this.pipeline = (_value.pipeline || []).slice();\n    this.customPhonemizerId = _value.customPhonemizerId;\n    Normalization.refineValues(this);\n  }\n  get language(): string | undefined {\n    return this._language;\n  }\n  set language(value: string | undefined) {\n    this._language = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get customPhonemizerId(): string | undefined {\n    return this._customPhonemizerId;\n  }\n  set customPhonemizerId(value: string | undefined) {\n    this._customPhonemizerId = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Normalization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Normalization.AsObject {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice(),\n      customPhonemizerId: this.customPhonemizerId\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Normalization.AsProtobufJSON {\n    return {\n      language: this.language,\n      pipeline: (this.pipeline || []).slice(),\n      customPhonemizerId: this.customPhonemizerId\n    };\n  }\n}\nexport module Normalization {\n  /**\n   * Standard JavaScript object representation for Normalization\n   */\n  export interface AsObject {\n    language?: string;\n    pipeline?: string[];\n    customPhonemizerId?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Normalization\n   */\n  export interface AsProtobufJSON {\n    language?: string;\n    pipeline?: string[];\n    customPhonemizerId?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Postprocessing\n */\nexport class Postprocessing implements GrpcMessage {\n  static id = 'ondewo.t2s.Postprocessing';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Postprocessing();\n    Postprocessing.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Postprocessing) {\n    _instance.silenceSecs = _instance.silenceSecs || 0;\n    _instance.pipeline = _instance.pipeline || [];\n    _instance.logmmse = _instance.logmmse || undefined;\n    _instance.wiener = _instance.wiener || undefined;\n    _instance.apodization = _instance.apodization || undefined;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Postprocessing,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.silenceSecs = _reader.readFloat();\n          break;\n        case 2:\n          (_instance.pipeline = _instance.pipeline || []).push(\n            _reader.readString()\n          );\n          break;\n        case 3:\n          _instance.logmmse = new Logmnse();\n          _reader.readMessage(\n            _instance.logmmse,\n            Logmnse.deserializeBinaryFromReader\n          );\n          break;\n        case 4:\n          _instance.wiener = new Wiener();\n          _reader.readMessage(\n            _instance.wiener,\n            Wiener.deserializeBinaryFromReader\n          );\n          break;\n        case 5:\n          _instance.apodization = new Apodization();\n          _reader.readMessage(\n            _instance.apodization,\n            Apodization.deserializeBinaryFromReader\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Postprocessing.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Postprocessing,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.silenceSecs) {\n      _writer.writeFloat(1, _instance.silenceSecs);\n    }\n    if (_instance.pipeline && _instance.pipeline.length) {\n      _writer.writeRepeatedString(2, _instance.pipeline);\n    }\n    if (_instance.logmmse) {\n      _writer.writeMessage(\n        3,\n        _instance.logmmse as any,\n        Logmnse.serializeBinaryToWriter\n      );\n    }\n    if (_instance.wiener) {\n      _writer.writeMessage(\n        4,\n        _instance.wiener as any,\n        Wiener.serializeBinaryToWriter\n      );\n    }\n    if (_instance.apodization) {\n      _writer.writeMessage(\n        5,\n        _instance.apodization as any,\n        Apodization.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _silenceSecs?: number;\n  private _pipeline?: string[];\n  private _logmmse?: Logmnse;\n  private _wiener?: Wiener;\n  private _apodization?: Apodization;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Postprocessing to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Postprocessing.AsObject>) {\n    _value = _value || {};\n    this.silenceSecs = _value.silenceSecs;\n    this.pipeline = (_value.pipeline || []).slice();\n    this.logmmse = _value.logmmse ? new Logmnse(_value.logmmse) : undefined;\n    this.wiener = _value.wiener ? new Wiener(_value.wiener) : undefined;\n    this.apodization = _value.apodization\n      ? new Apodization(_value.apodization)\n      : undefined;\n    Postprocessing.refineValues(this);\n  }\n  get silenceSecs(): number | undefined {\n    return this._silenceSecs;\n  }\n  set silenceSecs(value: number | undefined) {\n    this._silenceSecs = value;\n  }\n  get pipeline(): string[] | undefined {\n    return this._pipeline;\n  }\n  set pipeline(value: string[] | undefined) {\n    this._pipeline = value;\n  }\n  get logmmse(): Logmnse | undefined {\n    return this._logmmse;\n  }\n  set logmmse(value: Logmnse | undefined) {\n    this._logmmse = value;\n  }\n  get wiener(): Wiener | undefined {\n    return this._wiener;\n  }\n  set wiener(value: Wiener | undefined) {\n    this._wiener = value;\n  }\n  get apodization(): Apodization | undefined {\n    return this._apodization;\n  }\n  set apodization(value: Apodization | undefined) {\n    this._apodization = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Postprocessing.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Postprocessing.AsObject {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toObject() : undefined,\n      wiener: this.wiener ? this.wiener.toObject() : undefined,\n      apodization: this.apodization ? this.apodization.toObject() : undefined\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Postprocessing.AsProtobufJSON {\n    return {\n      silenceSecs: this.silenceSecs,\n      pipeline: (this.pipeline || []).slice(),\n      logmmse: this.logmmse ? this.logmmse.toProtobufJSON(options) : null,\n      wiener: this.wiener ? this.wiener.toProtobufJSON(options) : null,\n      apodization: this.apodization\n        ? this.apodization.toProtobufJSON(options)\n        : null\n    };\n  }\n}\nexport module Postprocessing {\n  /**\n   * Standard JavaScript object representation for Postprocessing\n   */\n  export interface AsObject {\n    silenceSecs?: number;\n    pipeline?: string[];\n    logmmse?: Logmnse.AsObject;\n    wiener?: Wiener.AsObject;\n    apodization?: Apodization.AsObject;\n  }\n\n  /**\n   * Protobuf JSON representation for Postprocessing\n   */\n  export interface AsProtobufJSON {\n    silenceSecs?: number;\n    pipeline?: string[];\n    logmmse?: Logmnse.AsProtobufJSON | null;\n    wiener?: Wiener.AsProtobufJSON | null;\n    apodization?: Apodization.AsProtobufJSON | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Logmnse\n */\nexport class Logmnse implements GrpcMessage {\n  static id = 'ondewo.t2s.Logmnse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Logmnse();\n    Logmnse.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Logmnse) {\n    _instance.initialNoise = _instance.initialNoise || '0';\n    _instance.windowSize = _instance.windowSize || '0';\n    _instance.noiseThreshold = _instance.noiseThreshold || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Logmnse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.initialNoise = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.windowSize = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.noiseThreshold = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Logmnse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Logmnse, _writer: BinaryWriter) {\n    if (_instance.initialNoise) {\n      _writer.writeInt64String(1, _instance.initialNoise);\n    }\n    if (_instance.windowSize) {\n      _writer.writeInt64String(2, _instance.windowSize);\n    }\n    if (_instance.noiseThreshold) {\n      _writer.writeFloat(3, _instance.noiseThreshold);\n    }\n  }\n\n  private _initialNoise?: string;\n  private _windowSize?: string;\n  private _noiseThreshold?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Logmnse to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Logmnse.AsObject>) {\n    _value = _value || {};\n    this.initialNoise = _value.initialNoise;\n    this.windowSize = _value.windowSize;\n    this.noiseThreshold = _value.noiseThreshold;\n    Logmnse.refineValues(this);\n  }\n  get initialNoise(): string | undefined {\n    return this._initialNoise;\n  }\n  set initialNoise(value: string | undefined) {\n    this._initialNoise = value;\n  }\n  get windowSize(): string | undefined {\n    return this._windowSize;\n  }\n  set windowSize(value: string | undefined) {\n    this._windowSize = value;\n  }\n  get noiseThreshold(): number | undefined {\n    return this._noiseThreshold;\n  }\n  set noiseThreshold(value: number | undefined) {\n    this._noiseThreshold = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Logmnse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Logmnse.AsObject {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Logmnse.AsProtobufJSON {\n    return {\n      initialNoise: this.initialNoise,\n      windowSize: this.windowSize,\n      noiseThreshold: this.noiseThreshold\n    };\n  }\n}\nexport module Logmnse {\n  /**\n   * Standard JavaScript object representation for Logmnse\n   */\n  export interface AsObject {\n    initialNoise?: string;\n    windowSize?: string;\n    noiseThreshold?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Logmnse\n   */\n  export interface AsProtobufJSON {\n    initialNoise?: string;\n    windowSize?: string;\n    noiseThreshold?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Wiener\n */\nexport class Wiener implements GrpcMessage {\n  static id = 'ondewo.t2s.Wiener';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Wiener();\n    Wiener.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Wiener) {\n    _instance.frameLen = _instance.frameLen || '0';\n    _instance.lpcOrder = _instance.lpcOrder || '0';\n    _instance.iterations = _instance.iterations || '0';\n    _instance.alpha = _instance.alpha || 0;\n    _instance.thresh = _instance.thresh || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Wiener, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.frameLen = _reader.readInt64String();\n          break;\n        case 2:\n          _instance.lpcOrder = _reader.readInt64String();\n          break;\n        case 3:\n          _instance.iterations = _reader.readInt64String();\n          break;\n        case 4:\n          _instance.alpha = _reader.readFloat();\n          break;\n        case 5:\n          _instance.thresh = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Wiener.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Wiener, _writer: BinaryWriter) {\n    if (_instance.frameLen) {\n      _writer.writeInt64String(1, _instance.frameLen);\n    }\n    if (_instance.lpcOrder) {\n      _writer.writeInt64String(2, _instance.lpcOrder);\n    }\n    if (_instance.iterations) {\n      _writer.writeInt64String(3, _instance.iterations);\n    }\n    if (_instance.alpha) {\n      _writer.writeFloat(4, _instance.alpha);\n    }\n    if (_instance.thresh) {\n      _writer.writeFloat(5, _instance.thresh);\n    }\n  }\n\n  private _frameLen?: string;\n  private _lpcOrder?: string;\n  private _iterations?: string;\n  private _alpha?: number;\n  private _thresh?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Wiener to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Wiener.AsObject>) {\n    _value = _value || {};\n    this.frameLen = _value.frameLen;\n    this.lpcOrder = _value.lpcOrder;\n    this.iterations = _value.iterations;\n    this.alpha = _value.alpha;\n    this.thresh = _value.thresh;\n    Wiener.refineValues(this);\n  }\n  get frameLen(): string | undefined {\n    return this._frameLen;\n  }\n  set frameLen(value: string | undefined) {\n    this._frameLen = value;\n  }\n  get lpcOrder(): string | undefined {\n    return this._lpcOrder;\n  }\n  set lpcOrder(value: string | undefined) {\n    this._lpcOrder = value;\n  }\n  get iterations(): string | undefined {\n    return this._iterations;\n  }\n  set iterations(value: string | undefined) {\n    this._iterations = value;\n  }\n  get alpha(): number | undefined {\n    return this._alpha;\n  }\n  set alpha(value: number | undefined) {\n    this._alpha = value;\n  }\n  get thresh(): number | undefined {\n    return this._thresh;\n  }\n  set thresh(value: number | undefined) {\n    this._thresh = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Wiener.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Wiener.AsObject {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Wiener.AsProtobufJSON {\n    return {\n      frameLen: this.frameLen,\n      lpcOrder: this.lpcOrder,\n      iterations: this.iterations,\n      alpha: this.alpha,\n      thresh: this.thresh\n    };\n  }\n}\nexport module Wiener {\n  /**\n   * Standard JavaScript object representation for Wiener\n   */\n  export interface AsObject {\n    frameLen?: string;\n    lpcOrder?: string;\n    iterations?: string;\n    alpha?: number;\n    thresh?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Wiener\n   */\n  export interface AsProtobufJSON {\n    frameLen?: string;\n    lpcOrder?: string;\n    iterations?: string;\n    alpha?: number;\n    thresh?: number;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Apodization\n */\nexport class Apodization implements GrpcMessage {\n  static id = 'ondewo.t2s.Apodization';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Apodization();\n    Apodization.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Apodization) {\n    _instance.apodizationSecs = _instance.apodizationSecs || 0;\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: Apodization,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.apodizationSecs = _reader.readFloat();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Apodization.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: Apodization,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.apodizationSecs) {\n      _writer.writeFloat(1, _instance.apodizationSecs);\n    }\n  }\n\n  private _apodizationSecs?: number;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Apodization to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Apodization.AsObject>) {\n    _value = _value || {};\n    this.apodizationSecs = _value.apodizationSecs;\n    Apodization.refineValues(this);\n  }\n  get apodizationSecs(): number | undefined {\n    return this._apodizationSecs;\n  }\n  set apodizationSecs(value: number | undefined) {\n    this._apodizationSecs = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Apodization.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Apodization.AsObject {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Apodization.AsProtobufJSON {\n    return {\n      apodizationSecs: this.apodizationSecs\n    };\n  }\n}\nexport module Apodization {\n  /**\n   * Standard JavaScript object representation for Apodization\n   */\n  export interface AsObject {\n    apodizationSecs?: number;\n  }\n\n  /**\n   * Protobuf JSON representation for Apodization\n   */\n  export interface AsProtobufJSON {\n    apodizationSecs?: number;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport {\n  GrpcMessage,\n  RecursivePartial,\n  ToProtobufJSONOptions\n} from '@ngx-grpc/common';\nimport { BinaryReader, BinaryWriter, ByteSource } from 'google-protobuf';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\n/**\n * Message implementation for ondewo.t2s.PhonemizerId\n */\nexport class PhonemizerId implements GrpcMessage {\n  static id = 'ondewo.t2s.PhonemizerId';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new PhonemizerId();\n    PhonemizerId.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: PhonemizerId) {\n    _instance.id = _instance.id || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: PhonemizerId,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    PhonemizerId.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: PhonemizerId,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n  }\n\n  private _id?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of PhonemizerId to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<PhonemizerId.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    PhonemizerId.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    PhonemizerId.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): PhonemizerId.AsObject {\n    return {\n      id: this.id\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): PhonemizerId.AsProtobufJSON {\n    return {\n      id: this.id\n    };\n  }\n}\nexport module PhonemizerId {\n  /**\n   * Standard JavaScript object representation for PhonemizerId\n   */\n  export interface AsObject {\n    id?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for PhonemizerId\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CustomPhonemizerProto\n */\nexport class CustomPhonemizerProto implements GrpcMessage {\n  static id = 'ondewo.t2s.CustomPhonemizerProto';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CustomPhonemizerProto();\n    CustomPhonemizerProto.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CustomPhonemizerProto) {\n    _instance.id = _instance.id || '';\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CustomPhonemizerProto,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Map();\n          _reader.readMessage(\n            messageInitializer2,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer2);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CustomPhonemizerProto.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CustomPhonemizerProto,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CustomPhonemizerProto to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<CustomPhonemizerProto.AsObject>) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    CustomPhonemizerProto.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CustomPhonemizerProto.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CustomPhonemizerProto.AsObject {\n    return {\n      id: this.id,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CustomPhonemizerProto.AsProtobufJSON {\n    return {\n      id: this.id,\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module CustomPhonemizerProto {\n  /**\n   * Standard JavaScript object representation for CustomPhonemizerProto\n   */\n  export interface AsObject {\n    id?: string;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for CustomPhonemizerProto\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.Map\n */\nexport class Map implements GrpcMessage {\n  static id = 'ondewo.t2s.Map';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new Map();\n    Map.deserializeBinaryFromReader(instance, new BinaryReader(bytes));\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: Map) {\n    _instance.word = _instance.word || '';\n    _instance.phonemeGroups = _instance.phonemeGroups || '';\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(_instance: Map, _reader: BinaryReader) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.word = _reader.readString();\n          break;\n        case 2:\n          _instance.phonemeGroups = _reader.readString();\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    Map.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(_instance: Map, _writer: BinaryWriter) {\n    if (_instance.word) {\n      _writer.writeString(1, _instance.word);\n    }\n    if (_instance.phonemeGroups) {\n      _writer.writeString(2, _instance.phonemeGroups);\n    }\n  }\n\n  private _word?: string;\n  private _phonemeGroups?: string;\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of Map to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<Map.AsObject>) {\n    _value = _value || {};\n    this.word = _value.word;\n    this.phonemeGroups = _value.phonemeGroups;\n    Map.refineValues(this);\n  }\n  get word(): string | undefined {\n    return this._word;\n  }\n  set word(value: string | undefined) {\n    this._word = value;\n  }\n  get phonemeGroups(): string | undefined {\n    return this._phonemeGroups;\n  }\n  set phonemeGroups(value: string | undefined) {\n    this._phonemeGroups = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    Map.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): Map.AsObject {\n    return {\n      word: this.word,\n      phonemeGroups: this.phonemeGroups\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): Map.AsProtobufJSON {\n    return {\n      word: this.word,\n      phonemeGroups: this.phonemeGroups\n    };\n  }\n}\nexport module Map {\n  /**\n   * Standard JavaScript object representation for Map\n   */\n  export interface AsObject {\n    word?: string;\n    phonemeGroups?: string;\n  }\n\n  /**\n   * Protobuf JSON representation for Map\n   */\n  export interface AsProtobufJSON {\n    word?: string;\n    phonemeGroups?: string;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListCustomPhonemizerResponse\n */\nexport class ListCustomPhonemizerResponse implements GrpcMessage {\n  static id = 'ondewo.t2s.ListCustomPhonemizerResponse';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListCustomPhonemizerResponse();\n    ListCustomPhonemizerResponse.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListCustomPhonemizerResponse) {\n    _instance.phonemizers = _instance.phonemizers || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListCustomPhonemizerResponse,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          const messageInitializer1 = new CustomPhonemizerProto();\n          _reader.readMessage(\n            messageInitializer1,\n            CustomPhonemizerProto.deserializeBinaryFromReader\n          );\n          (_instance.phonemizers = _instance.phonemizers || []).push(\n            messageInitializer1\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListCustomPhonemizerResponse.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListCustomPhonemizerResponse,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.phonemizers && _instance.phonemizers.length) {\n      _writer.writeRepeatedMessage(\n        1,\n        _instance.phonemizers as any,\n        CustomPhonemizerProto.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _phonemizers?: CustomPhonemizerProto[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListCustomPhonemizerResponse to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<ListCustomPhonemizerResponse.AsObject>\n  ) {\n    _value = _value || {};\n    this.phonemizers = (_value.phonemizers || []).map(\n      m => new CustomPhonemizerProto(m)\n    );\n    ListCustomPhonemizerResponse.refineValues(this);\n  }\n  get phonemizers(): CustomPhonemizerProto[] | undefined {\n    return this._phonemizers;\n  }\n  set phonemizers(value: CustomPhonemizerProto[] | undefined) {\n    this._phonemizers = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListCustomPhonemizerResponse.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListCustomPhonemizerResponse.AsObject {\n    return {\n      phonemizers: (this.phonemizers || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListCustomPhonemizerResponse.AsProtobufJSON {\n    return {\n      phonemizers: (this.phonemizers || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module ListCustomPhonemizerResponse {\n  /**\n   * Standard JavaScript object representation for ListCustomPhonemizerResponse\n   */\n  export interface AsObject {\n    phonemizers?: CustomPhonemizerProto.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListCustomPhonemizerResponse\n   */\n  export interface AsProtobufJSON {\n    phonemizers?: CustomPhonemizerProto.AsProtobufJSON[] | null;\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.ListCustomPhonemizerRequest\n */\nexport class ListCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.ListCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new ListCustomPhonemizerRequest();\n    ListCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: ListCustomPhonemizerRequest) {\n    _instance.pipelineIds = _instance.pipelineIds || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: ListCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          (_instance.pipelineIds = _instance.pipelineIds || []).push(\n            _reader.readString()\n          );\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    ListCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: ListCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.pipelineIds && _instance.pipelineIds.length) {\n      _writer.writeRepeatedString(1, _instance.pipelineIds);\n    }\n  }\n\n  private _pipelineIds?: string[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of ListCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(_value?: RecursivePartial<ListCustomPhonemizerRequest.AsObject>) {\n    _value = _value || {};\n    this.pipelineIds = (_value.pipelineIds || []).slice();\n    ListCustomPhonemizerRequest.refineValues(this);\n  }\n  get pipelineIds(): string[] | undefined {\n    return this._pipelineIds;\n  }\n  set pipelineIds(value: string[] | undefined) {\n    this._pipelineIds = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    ListCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): ListCustomPhonemizerRequest.AsObject {\n    return {\n      pipelineIds: (this.pipelineIds || []).slice()\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): ListCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      pipelineIds: (this.pipelineIds || []).slice()\n    };\n  }\n}\nexport module ListCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for ListCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    pipelineIds?: string[];\n  }\n\n  /**\n   * Protobuf JSON representation for ListCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    pipelineIds?: string[];\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.UpdateCustomPhonemizerRequest\n */\nexport class UpdateCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.UpdateCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new UpdateCustomPhonemizerRequest();\n    UpdateCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: UpdateCustomPhonemizerRequest) {\n    _instance.id = _instance.id || '';\n    _instance.updateMethod = _instance.updateMethod || 0;\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: UpdateCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.id = _reader.readString();\n          break;\n        case 2:\n          _instance.updateMethod = _reader.readEnum();\n          break;\n        case 3:\n          const messageInitializer3 = new Map();\n          _reader.readMessage(\n            messageInitializer3,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer3);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    UpdateCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: UpdateCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.id) {\n      _writer.writeString(1, _instance.id);\n    }\n    if (_instance.updateMethod) {\n      _writer.writeEnum(2, _instance.updateMethod);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        3,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _id?: string;\n  private _updateMethod?: UpdateCustomPhonemizerRequest.UpdateMethod;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of UpdateCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<UpdateCustomPhonemizerRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.id = _value.id;\n    this.updateMethod = _value.updateMethod;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    UpdateCustomPhonemizerRequest.refineValues(this);\n  }\n  get id(): string | undefined {\n    return this._id;\n  }\n  set id(value: string | undefined) {\n    this._id = value;\n  }\n  get updateMethod(): UpdateCustomPhonemizerRequest.UpdateMethod | undefined {\n    return this._updateMethod;\n  }\n  set updateMethod(\n    value: UpdateCustomPhonemizerRequest.UpdateMethod | undefined\n  ) {\n    this._updateMethod = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    UpdateCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): UpdateCustomPhonemizerRequest.AsObject {\n    return {\n      id: this.id,\n      updateMethod: this.updateMethod,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): UpdateCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      id: this.id,\n      updateMethod:\n        UpdateCustomPhonemizerRequest.UpdateMethod[this.updateMethod ?? 0],\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module UpdateCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for UpdateCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    id?: string;\n    updateMethod?: UpdateCustomPhonemizerRequest.UpdateMethod;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for UpdateCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    id?: string;\n    updateMethod?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n  export enum UpdateMethod {\n    extend_hard = 0,\n    extend_soft = 1,\n    replace = 2\n  }\n}\n\n/**\n * Message implementation for ondewo.t2s.CreateCustomPhonemizerRequest\n */\nexport class CreateCustomPhonemizerRequest implements GrpcMessage {\n  static id = 'ondewo.t2s.CreateCustomPhonemizerRequest';\n\n  /**\n   * Deserialize binary data to message\n   * @param instance message instance\n   */\n  static deserializeBinary(bytes: ByteSource) {\n    const instance = new CreateCustomPhonemizerRequest();\n    CreateCustomPhonemizerRequest.deserializeBinaryFromReader(\n      instance,\n      new BinaryReader(bytes)\n    );\n    return instance;\n  }\n\n  /**\n   * Check all the properties and set default protobuf values if necessary\n   * @param _instance message instance\n   */\n  static refineValues(_instance: CreateCustomPhonemizerRequest) {\n    _instance.prefix = _instance.prefix || '';\n    _instance.maps = _instance.maps || [];\n  }\n\n  /**\n   * Deserializes / reads binary message into message instance using provided binary reader\n   * @param _instance message instance\n   * @param _reader binary reader instance\n   */\n  static deserializeBinaryFromReader(\n    _instance: CreateCustomPhonemizerRequest,\n    _reader: BinaryReader\n  ) {\n    while (_reader.nextField()) {\n      if (_reader.isEndGroup()) break;\n\n      switch (_reader.getFieldNumber()) {\n        case 1:\n          _instance.prefix = _reader.readString();\n          break;\n        case 2:\n          const messageInitializer2 = new Map();\n          _reader.readMessage(\n            messageInitializer2,\n            Map.deserializeBinaryFromReader\n          );\n          (_instance.maps = _instance.maps || []).push(messageInitializer2);\n          break;\n        default:\n          _reader.skipField();\n      }\n    }\n\n    CreateCustomPhonemizerRequest.refineValues(_instance);\n  }\n\n  /**\n   * Serializes a message to binary format using provided binary reader\n   * @param _instance message instance\n   * @param _writer binary writer instance\n   */\n  static serializeBinaryToWriter(\n    _instance: CreateCustomPhonemizerRequest,\n    _writer: BinaryWriter\n  ) {\n    if (_instance.prefix) {\n      _writer.writeString(1, _instance.prefix);\n    }\n    if (_instance.maps && _instance.maps.length) {\n      _writer.writeRepeatedMessage(\n        2,\n        _instance.maps as any,\n        Map.serializeBinaryToWriter\n      );\n    }\n  }\n\n  private _prefix?: string;\n  private _maps?: Map[];\n\n  /**\n   * Message constructor. Initializes the properties and applies default Protobuf values if necessary\n   * @param _value initial values object or instance of CreateCustomPhonemizerRequest to deeply clone from\n   */\n  constructor(\n    _value?: RecursivePartial<CreateCustomPhonemizerRequest.AsObject>\n  ) {\n    _value = _value || {};\n    this.prefix = _value.prefix;\n    this.maps = (_value.maps || []).map(m => new Map(m));\n    CreateCustomPhonemizerRequest.refineValues(this);\n  }\n  get prefix(): string | undefined {\n    return this._prefix;\n  }\n  set prefix(value: string | undefined) {\n    this._prefix = value;\n  }\n  get maps(): Map[] | undefined {\n    return this._maps;\n  }\n  set maps(value: Map[] | undefined) {\n    this._maps = value;\n  }\n\n  /**\n   * Serialize message to binary data\n   * @param instance message instance\n   */\n  serializeBinary() {\n    const writer = new BinaryWriter();\n    CreateCustomPhonemizerRequest.serializeBinaryToWriter(this, writer);\n    return writer.getResultBuffer();\n  }\n\n  /**\n   * Cast message to standard JavaScript object (all non-primitive values are deeply cloned)\n   */\n  toObject(): CreateCustomPhonemizerRequest.AsObject {\n    return {\n      prefix: this.prefix,\n      maps: (this.maps || []).map(m => m.toObject())\n    };\n  }\n\n  /**\n   * Convenience method to support JSON.stringify(message), replicates the structure of toObject()\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Cast message to JSON using protobuf JSON notation: https://developers.google.com/protocol-buffers/docs/proto3#json\n   * Attention: output differs from toObject() e.g. enums are represented as names and not as numbers, Timestamp is an ISO Date string format etc.\n   * If the message itself or some of descendant messages is google.protobuf.Any, you MUST provide a message pool as options. If not, the messagePool is not required\n   */\n  toProtobufJSON(\n    // @ts-ignore\n    options?: ToProtobufJSONOptions\n  ): CreateCustomPhonemizerRequest.AsProtobufJSON {\n    return {\n      prefix: this.prefix,\n      maps: (this.maps || []).map(m => m.toProtobufJSON(options))\n    };\n  }\n}\nexport module CreateCustomPhonemizerRequest {\n  /**\n   * Standard JavaScript object representation for CreateCustomPhonemizerRequest\n   */\n  export interface AsObject {\n    prefix?: string;\n    maps?: Map.AsObject[];\n  }\n\n  /**\n   * Protobuf JSON representation for CreateCustomPhonemizerRequest\n   */\n  export interface AsProtobufJSON {\n    prefix?: string;\n    maps?: Map.AsProtobufJSON[] | null;\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for Text2Speech.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_TEXT2_SPEECH_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_TEXT2_SPEECH_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { InjectionToken } from '@angular/core';\n\n/**\n * Specific GrpcClientSettings for CustomPhonemizers.\n * Use it only if your default settings are not set or the service requires other settings.\n */\nexport const GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS = new InjectionToken<any>(\n  'GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS'\n);\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './text-to-speech.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_TEXT2_SPEECH_CLIENT_SETTINGS } from './text-to-speech.pbconf';\n/**\n * Service client implementation for ondewo.t2s.Text2Speech\n */\n@Injectable({ providedIn: 'any' })\nexport class Text2SpeechClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/Synthesize\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.SynthesizeResponse>>\n     */\n    synthesize: (\n      requestData: thisProto.SynthesizeRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.SynthesizeResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/Synthesize',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.SynthesizeRequest,\n        responseClass: thisProto.SynthesizeResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/BatchSynthesize\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.BatchSynthesizeResponse>>\n     */\n    batchSynthesize: (\n      requestData: thisProto.BatchSynthesizeRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.BatchSynthesizeResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/BatchSynthesize',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.BatchSynthesizeRequest,\n        responseClass: thisProto.BatchSynthesizeResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/GetT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.Text2SpeechConfig>>\n     */\n    getT2sPipeline: (\n      requestData: thisProto.T2sPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.Text2SpeechConfig>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/GetT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.T2sPipelineId,\n        responseClass: thisProto.Text2SpeechConfig\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/CreateT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.T2sPipelineId>>\n     */\n    createT2sPipeline: (\n      requestData: thisProto.Text2SpeechConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.T2sPipelineId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/CreateT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Text2SpeechConfig,\n        responseClass: thisProto.T2sPipelineId\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/DeleteT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteT2sPipeline: (\n      requestData: thisProto.T2sPipelineId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/DeleteT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.T2sPipelineId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/UpdateT2sPipeline\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    updateT2sPipeline: (\n      requestData: thisProto.Text2SpeechConfig,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/UpdateT2sPipeline',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.Text2SpeechConfig,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sPipelines\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>>\n     */\n    listT2sPipelines: (\n      requestData: thisProto.ListT2sPipelinesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sPipelinesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sPipelines',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sPipelinesRequest,\n        responseClass: thisProto.ListT2sPipelinesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sLanguages\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sLanguagesResponse>>\n     */\n    listT2sLanguages: (\n      requestData: thisProto.ListT2sLanguagesRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sLanguagesResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sLanguages',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sLanguagesRequest,\n        responseClass: thisProto.ListT2sLanguagesResponse\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sDomains\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListT2sDomainsResponse>>\n     */\n    listT2sDomains: (\n      requestData: thisProto.ListT2sDomainsRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListT2sDomainsResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.Text2Speech/ListT2sDomains',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListT2sDomainsRequest,\n        responseClass: thisProto.ListT2sDomainsResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_TEXT2_SPEECH_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.Text2Speech',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/Synthesize\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.SynthesizeResponse>\n   */\n  synthesize(\n    requestData: thisProto.SynthesizeRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.SynthesizeResponse> {\n    return this.$raw\n      .synthesize(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/BatchSynthesize\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.BatchSynthesizeResponse>\n   */\n  batchSynthesize(\n    requestData: thisProto.BatchSynthesizeRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.BatchSynthesizeResponse> {\n    return this.$raw\n      .batchSynthesize(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/GetT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.Text2SpeechConfig>\n   */\n  getT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.Text2SpeechConfig> {\n    return this.$raw\n      .getT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/CreateT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.T2sPipelineId>\n   */\n  createT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.T2sPipelineId> {\n    return this.$raw\n      .createT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/DeleteT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteT2sPipeline(\n    requestData: thisProto.T2sPipelineId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/UpdateT2sPipeline\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  updateT2sPipeline(\n    requestData: thisProto.Text2SpeechConfig,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .updateT2sPipeline(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sPipelines\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sPipelinesResponse>\n   */\n  listT2sPipelines(\n    requestData: thisProto.ListT2sPipelinesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sPipelinesResponse> {\n    return this.$raw\n      .listT2sPipelines(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sLanguages\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sLanguagesResponse>\n   */\n  listT2sLanguages(\n    requestData: thisProto.ListT2sLanguagesRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sLanguagesResponse> {\n    return this.$raw\n      .listT2sLanguages(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.Text2Speech/ListT2sDomains\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListT2sDomainsResponse>\n   */\n  listT2sDomains(\n    requestData: thisProto.ListT2sDomainsRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListT2sDomainsResponse> {\n    return this.$raw\n      .listT2sDomains(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n","/* tslint:disable */\n/* eslint-disable */\n//\n// THIS IS A GENERATED FILE\n// DO NOT MODIFY IT! YOUR CHANGES WILL BE LOST\nimport { Inject, Injectable, Optional } from '@angular/core';\nimport {\n  GrpcCallType,\n  GrpcClient,\n  GrpcClientFactory,\n  GrpcEvent,\n  GrpcMetadata\n} from '@ngx-grpc/common';\nimport {\n  GRPC_CLIENT_FACTORY,\n  GrpcHandler,\n  takeMessages,\n  throwStatusErrors\n} from '@ngx-grpc/core';\nimport { Observable } from 'rxjs';\nimport * as thisProto from './custom-phonemizer.pb';\nimport * as googleProtobuf000 from '@ngx-grpc/well-known-types';\nimport { GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS } from './custom-phonemizer.pbconf';\n/**\n * Service client implementation for ondewo.t2s.CustomPhonemizers\n */\n@Injectable({ providedIn: 'any' })\nexport class CustomPhonemizersClient {\n  private client: GrpcClient<any>;\n\n  /**\n   * Raw RPC implementation for each service client method.\n   * The raw methods provide more control on the incoming data and events. E.g. they can be useful to read status `OK` metadata.\n   * Attention: these methods do not throw errors when non-zero status codes are received.\n   */\n  $raw = {\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.CustomPhonemizerProto>>\n     */\n    getCustomPhonemizer: (\n      requestData: thisProto.PhonemizerId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.CustomPhonemizerProto>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.PhonemizerId,\n        responseClass: thisProto.CustomPhonemizerProto\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.PhonemizerId>>\n     */\n    createCustomPhonemizer: (\n      requestData: thisProto.CreateCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.PhonemizerId>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.CreateCustomPhonemizerRequest,\n        responseClass: thisProto.PhonemizerId\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<googleProtobuf000.Empty>>\n     */\n    deleteCustomPhonemizer: (\n      requestData: thisProto.PhonemizerId,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<googleProtobuf000.Empty>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.PhonemizerId,\n        responseClass: googleProtobuf000.Empty\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.CustomPhonemizerProto>>\n     */\n    updateCustomPhonemizer: (\n      requestData: thisProto.UpdateCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.CustomPhonemizerProto>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.UpdateCustomPhonemizerRequest,\n        responseClass: thisProto.CustomPhonemizerProto\n      });\n    },\n    /**\n     * Unary RPC for /ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer\n     *\n     * @param requestMessage Request message\n     * @param requestMetadata Request metadata\n     * @returns Observable<GrpcEvent<thisProto.ListCustomPhonemizerResponse>>\n     */\n    listCustomPhonemizer: (\n      requestData: thisProto.ListCustomPhonemizerRequest,\n      requestMetadata = new GrpcMetadata()\n    ): Observable<GrpcEvent<thisProto.ListCustomPhonemizerResponse>> => {\n      return this.handler.handle({\n        type: GrpcCallType.unary,\n        client: this.client,\n        path: '/ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer',\n        requestData,\n        requestMetadata,\n        requestClass: thisProto.ListCustomPhonemizerRequest,\n        responseClass: thisProto.ListCustomPhonemizerResponse\n      });\n    }\n  };\n\n  constructor(\n    @Optional() @Inject(GRPC_CUSTOM_PHONEMIZERS_CLIENT_SETTINGS) settings: any,\n    @Inject(GRPC_CLIENT_FACTORY) clientFactory: GrpcClientFactory<any>,\n    private handler: GrpcHandler\n  ) {\n    this.client = clientFactory.createClient(\n      'ondewo.t2s.CustomPhonemizers',\n      settings\n    );\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/GetCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.CustomPhonemizerProto>\n   */\n  getCustomPhonemizer(\n    requestData: thisProto.PhonemizerId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.CustomPhonemizerProto> {\n    return this.$raw\n      .getCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/CreateCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.PhonemizerId>\n   */\n  createCustomPhonemizer(\n    requestData: thisProto.CreateCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.PhonemizerId> {\n    return this.$raw\n      .createCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/DeleteCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<googleProtobuf000.Empty>\n   */\n  deleteCustomPhonemizer(\n    requestData: thisProto.PhonemizerId,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<googleProtobuf000.Empty> {\n    return this.$raw\n      .deleteCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/UpdateCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.CustomPhonemizerProto>\n   */\n  updateCustomPhonemizer(\n    requestData: thisProto.UpdateCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.CustomPhonemizerProto> {\n    return this.$raw\n      .updateCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n\n  /**\n   * Unary RPC for /ondewo.t2s.CustomPhonemizers/ListCustomPhonemizer\n   *\n   * @param requestMessage Request message\n   * @param requestMetadata Request metadata\n   * @returns Observable<thisProto.ListCustomPhonemizerResponse>\n   */\n  listCustomPhonemizer(\n    requestData: thisProto.ListCustomPhonemizerRequest,\n    requestMetadata = new GrpcMetadata()\n  ): Observable<thisProto.ListCustomPhonemizerResponse> {\n    return this.$raw\n      .listCustomPhonemizer(requestData, requestMetadata)\n      .pipe(throwStatusErrors(), takeMessages());\n  }\n}\n"]}